== April 14th, 2020 - April 20th, 2020 ==
What we did
* Finished up our runs and made our presentation
* Presentation is [https://docs.google.com/presentation/d/1mmyBsT76iPt4N7pM0oUf7c2qlhh34gBle978DpOBPrE/edit?usp=sharing here].

== April 6th, 2020 - April 13th, 2020 ==
'''What we did'''
* Completed 1 additional run of EMADE with a different crossover rate
* Setup a conda environment on PACE with most of the dependencies working except for OpenCV. Setup EMADE on pace but waiting on an SQL server to be setup.
* Unsuccessfully attempted to run PACE as worker while local computer is master - PACE seems to be having problems with calls to sub processes (Permission denied)
* Completed 4.5 runs, each with 30 generations, of baseline EMADE 
* Completed 1.5 runs, each with 30 generations, unrestricted mating, threshold 0.3  
* Complete 1.5 runs, each with 30 generations, unrestricted mating, threshold 0.15  
* Complete 2.5 runs, each with 30 generations, unrestricted mating, threshold 0.6 (will finish 5 runs by Tuesday morning)  
'''What we will do'''
* Will complete 3/4 more runs of EMADE with different crossover/mutation rates
'''Blockers'''
* There seems to a large degree of variance on EMADE running and how it runs. For example, one run took 3.5 hours to complete (.6 and 30 generations), while another run is still in progress and has been for around 15 hours (.6 and 30 generations).

== March 30th, 2020 - April 5th, 2020 ==
'''What we did'''
* Altered crossover rate to study the fall in number of individuals and species
* Began working on setting up PACE. Discussed options for potentially using SQLite or Google Cloud for alternatives to hosting a MySQL server on PACE
* Got EMADE fork working and started runs on baseline EMADE
'''What we will do'''
* Continue testing crossover rate to study the fall in number of individuals and species
'''Blockers'''

== March 23rd, 2020 - March 29th, 2020 ==
'''What we did'''
* Completed 2 runs of EMADE with a modified speciation threshold
* Most first semesters have completed reading the neat-GP paper
'''What we will do'''
* Continue running EMADE with different speciation thresholds and comparing bloat, restricted and unrestricted mating, #species, and species characteristics.
'''Blockers'''

== March 2nd, 2020 - March 8th, 2020 ==
'''What we did'''
* Ran EMADE experiments and collected results for the midterm presentation
* Create our midterm presentation, which can be found [https://docs.google.com/presentation/d/1OsK1UyTKBDKVUQhS4866ONOtRGTuCsb9uMZ8VDXICIE/edit?usp=sharing here]
'''What we will do'''
* Set up PACE
* Continue our experiments based on the results that we present in the midterm presentation
'''Blockers'''
* None

== February 24th - March 1st, 2020 ==
'''What we did'''
* Changed the way weights are being calculated for speciation-based selection (fitness sharing), integrated the updated speciation, and ran EMADE on Titanic for 26 generations. 
* Fixed bloat logging issues
* Fixed several bugs with crossover integration into EMADE and finished implementing the corrected crossover into EMADE. Did A run with neat Crossover integrated in EMADE on titanic dataset for 63 generations with better results than regular EMADE run (still to be tested across multiple trials).
'''What we will do'''
* Set up PACE
* Create a metric to evaluate crowding on the pareto front
* Run trials of standard EMADE and EMADE with neat crossover on PACE.
* Run a couple of experiments demonstrating effects of speciation, NEAT crossover, and fitness sharing on bloat, runtime, etc.
'''Blockers'''
* PACE-ICE maintenance over the weekend

== February 17th - February 23rd, 2020 ==
'''What we did'''
* Ran EMADE on Titanic with the modified fitness sharing for 44 generations with an AUC of 3835
* Ran EMADE again on Titanic to verify speciation, seems to be working correctly
* Found issues with crossover integration into EMADE that needs to be reworked
'''What we will do'''
* Finish up testing of fitness sharing
* Reconfigure crossover integration to do crossover in place and produce 2 offspring for each pair of parents
* Set up PACE
* Fix bloat logging
'''Blockers'''
* Josh had laptop battery issues that prevented running EMADE

== February 10th - February 16, 2020 ==
'''What we did'''
* Ran EMADE with modified fitness sharing for 39 generations (or so we thought ... the correct selection method wasn't used)
* Speciation appears to be working, will run a few more tests to confirm
* Ran EMADE with neat crossover successful on titanic dataset for 66 generations
'''What we will do'''
* Run EMADE with the actual modified fitness sharing and compare to the original neat-gp run and the vanilla EMADE run
*Confirm speciation works correctly
*Confirm neat crossover works as intended
'''Blockers'''
*None

== February 3rd - February 9, 2020 ==
'''What we did'''
* Ran EMADE with the native neat-gp fitness sharing for 42 generations.
* Started fixing speciation to include penalties in selection
* Testing crossover integration into EMADE
'''What we will do'''
* Finish fixing speciation and run EMADE to compare the two approaches.
'''Blockers'''
* Weird Database SQL error when initializing population in EMADE for titanic run.

== January 27 - February 2nd, 2020 ==
'''What we did''' 
* Figured out how to get PrimitiveTrees from individuals stored in the database
* Found apparent bug with speciation implementation
* Developing tests for crossover in EMADE and integrating neat crossover into EMADE master algorithm
* Integrated fitness sharing code into EMADE, still need to test integration
'''What we will do'''
* Fix speciation 
* Continue crossover integration into EMADE as part of the neat GP algorithm 
* Test fitness sharing in EMADE
'''Blockers'''
* None

== January 20 - January 26, 2020 ==
'''What we did'''
* Started species verification
* Continued fitness sharing
* Worked on neat crossover implementation in EMADE
'''What we will do'''
* Finish species verification
* Finish fitness sharing
* Finish integrations of neat crossover in EMADE and test for accuracy of crossover in a run of EMADE with neat crossover
* Continue neat-GP integration
'''Blockers'''
* Creating primitive tree from string not working

== January 13 - January 19, 2020 ==
'''What we did'''
* Made initial plan for integrating neat-GP:
** Verify that speciation is working properly
** Implement fitness sharing
** neat crossover (crossover with species restriction) implementation
** As we find other issues/pieces of code to integrate we will incorporate those into this plan
'''What we will do'''
* 
'''Blockers'''
* 

== November 26 - December 2, 2019 ==
'''What we did'''
* Finished initial neat-GP speciation integration with EMADE
* Made final presentation, which can be found [https://docs.google.com/presentation/d/1hI4GQuZBEOxNT5dWNsQa1xXxLil5w6hd4GZIMAV4qy4/edit?usp=sharing here]
* Ran simple bloat benchmark on MNIST
* Parsing individuals from final generation EMADE GP titanic dataset was unsuccessful and needs to be debugged to work with EMADE's primitive set.
* Clean tree method implemented in DEAP outside of EMADE and is ready to be integrated into EMADE once parsing is resolved.

== November 19 - November 25, 2019 ==
'''What we did'''
* Ran (still running) MNIST benchmarks
* fixed initial errors with neatGP, but it is still assigning all individuals to the same species
* Working on gathering data for Titanic Data Set in EMADE (Ran into several issues with cache table on detection processing branch). Working on a program that uses xml setup file to grab final generation individuals and evaluates bloat in final population and returning cleaned individuals.
'''What we will do'''
*fix speciation bug
*Produce statistics for presentation
*Compile the presentation and compare the metrics across different problem domains

'''Blockers'''
* GCP slurm cluster isn't being initialize correctly, so having to just use GCP database and run locally.
* Weird error when running with reuse

== November 12 - November 18, 2019 ==
'''What we did'''
* Analyzed runtime and implemented individual bloat level quantification for a GP run in EMADE. Realized it's unfeasible to run individual bloat quantification algorithm without switching over to using Cache table hash values of intermediate outputs of subtrees.
* Began looking into the neatGP code to determine how to integrate with EMADE.
* Set up GCP to run MNIST benchmark.
'''What we will do'''
* Adapt individual level bloat quantifier in EMADE to use Cache table to allow for more reasonable runtime and implementing a method to remove all bloat nodes in a given individual.
* Continue neatGP integration work
* Run MNIST benchmark thoroughly to understand high level primitives' effect on bloat
'''Blockers'''
*

== November 5 - November 11, 2019 ==
'''What we did'''
* Analyzed symbolic regression bloat benchmarks to see why we got negative bloat for the entire run. Thoughts in the November 5th entry [[Notebook Eric Frankel|here.]]
* Preparing and testing for EMADE GP run on titanic dataset with tree 'cleaning' every 5 generations and gathering data on average bloat score of population, pareto front individuals and accuracy of individuals before and after removing bloat nodes detected by individual level quantification.
* Worked with Dr. Zutty to figure out a way to use deap's mutShrink method to remove bloat nodes from trees
* Finished preparing image data for benchmarking on GCP
'''What we will do'''
* Continue work integrating neat-GP into EMADE.
* Run EMADE GP on titanic dataset with individual level quantification after finishing EMADE implementation.
* Implement bloat removal by modifying the mutShrink method from deap's library ([https://github.com/DEAP/deap/blob/master/deap/gp.py linked here)]
* Run MNIST benchmark on GCP
'''Blockers'''
* None

== October 28 - November 4, 2019 ==
'''What we did'''
* Found a code implementation of neat-GP and ran it on the popular UCI breast-cancer dataset. (waiting on the results of this because this was Josh's task and he's a time conflict student).
* Developing an GP run in EMADE on the titanic dataset that cleans the pareto optimum individuals and tests that their accuracy before and after 'cleaning' is the same to test individual level bloat quantification.
* Came up with goals for the end of the semester
** Integrate neat-GP with EMADE
** Finish all bloat metrics (basic, individual, cache-based)

'''What we will do'''
* Figure out why out bloat data from our midterm presentation showed decreasing bloat even thought tree size was not explicitly optimized for.
* Run the bloat metric with MNIST to benchmark that dataset too

'''Blockers'''
* Still having issues with AWS instance but haven't looked into that since last week.
* Not sure what could be causing our strange data (from the midterm presentation)


== October 14 - October 20, 2019 ==
'''What we did'''
* Ran benchmarks of basic bloat metric on symbolic regression problems
* Made [https://docs.google.com/presentation/d/1cJccFW1RC8qtmwskcuaJ-xSwl0Heyv_IwihF0YMfo4k/edit#slide=id.g6407a4f5c6_0_5 presentation] for October 21st meeting.
'''What we will do'''
* Analyze benchmark results from symbolic regression problems
* Run tests for more advanced bloat metrics, continue to develop them
* Start reasoning about how to improve current bloat control techniques
'''Blockers'''
* Problems with AWS setup: Cloning emade on EC2 instance was running out of disk space. Upgrading to 300gb SSD didn't help (I think most of the disk space is not available to the user). Connecting S3 bucket would resolve this but would take time for me to figure out how to do that.
'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|Completed
|August 30, 2019
|September 9, 2019
|September 26, 2019
|-
|Design individual-level bloat metrics
|Carissa, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Animesh
|In Progress
|September 6, 2019
|September 23, 2019
|
|-
|Get neat-GP implementation working
|Josh
|In Progress
|September 13, 2019
|September 23, 2019
|
|-
|Clean up simple bloat metric, database insertion
|Eric
|Completed
|September 27, 2019
|October 2, 2019
|October 7, 2019
|}

== October 7 - October 13, 2019 ==
'''What we did'''
* Simple bloat metric database insertion is done
* Need to test individual based bloat metrics for accuracy and correctness (possibly efficiency also)
* Set up AWS instance
'''What we will do'''
* Run benchmarks using simple bloat metric
* Run individual based and more advanced bloat metrics on all pareto optimum individuals and get a score as well as check for the accuracy of the algorithm
'''Blockers'''
* None
'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|Completed
|August 30, 2019
|September 9, 2019
|September 26, 2019
|-
|Design individual-level bloat metrics
|Tan, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Tan, Jeffrey Animesh
|Not Started
|September 6, 2019
|September 23, 2019
|
|-
|Get neat-GP implementation working
|Josh
|In Progress
|September 13, 2019
|September 23, 2019
|
|-
|Clean up simple bloat metric, database insertion
|Eric
|Completed
|September 27, 2019
|October 2, 2019
|October 7, 2019
|}

== September 30 - October 6, 2019 ==
'''What we did'''
* Simple bloat metric is now functional
* Created datasets for MNIST and symbolic regression for future testing
* Given a subtree in DEAP, we can now quickly get a compiled function for each subtree with each node in the tree as the root node.

Time Conflict:
* Worked on neatGP with FlappyBird
* Worked on a class that takes an individual cleans up bloat based on information from the caching table

'''What we will do'''
* Clean up code for simple bloat metric
* Database insertion for simple bloat metric
* Finish implementation of running each subtree on the training data to actually check for bloat.
* Run the benchmark metrics (MNIST and symbolic regression) using the bloat metric

Time Conflict:
* Continue to work on the bloat removal class

'''Blockers'''
* None
'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|Completed
|August 30, 2019
|September 9, 2019
|September 26, 2019
|-
|Design individual-level bloat metrics
|Tan, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Tan, Jeffrey Animesh
|Not Started
|September 6, 2019
|September 23, 2019
|
|-
|Get neat-GP implementation working
|Josh
|In Progress
|September 13, 2019
|September 23, 2019
|
|-
|Clean up simple bloat metric, database insertion
|Eric
|Not Started
|September 27, 2019
|October 2, 2019
|
|}

== September 27, 2019 ==
'''What we did'''
* Simple bloat metric is now functional
* Created datasets for MNIST and symbolic regression for future testing
* Given a subtree in DEAP, we can now quickly get a compiled function for each subtree with each node in the tree as the root node.

'''What we will do'''
* Clean up code for simple bloat metric
* Database insertion for simple bloat metric
* Finish implementation of running each subtree on the training data to actually check for bloat.
* Run the benchmark metrics (MNIST and symbolic regression) using the bloat metric

'''Blockers'''
* None
'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|Completed
|August 30, 2019
|September 9, 2019
|September 26, 2019
|-
|Design individual-level bloat metrics
|Tan, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Tan, Jeffrey Animesh
|Not Started
|September 6, 2019
|September 23, 2019
|
|-
|Get neat-GP implementation working
|Josh
|In Progress
|September 13, 2019
|September 23, 2019
|
|-
|Clean up simple bloat metric, database insertion
|Eric
|Not Started
|September 27, 2019
|October 2, 2019
|
|}

== September 23, 2019 ==
'''Team Meeting'''
* Simple bloat metric: currently testing hypervolume-based metric
* Working to test each subtree of a single individual for bloat (primarily by checking for constant output on varying inputs)
''Time Conflict''
* Jason has Google Cloud Credits which he has to distribute
* Work on creating one node to be removed if a duplicate
* Work on Flappy Bird NeatGP
'''What we did'''
* Simple bloat metric
** Still working on validating the metric and getting it to calculate properly on EMADE
* Advanced bloat metrics
** Encountered issues being able to easily parse DEAP Primitive Tree Data Structure

''Time Conflict''
* Work on caching function
** Decided to test GP on Titanic dataset problem from Kaggle after being developed.
'''What we will do'''
* Finish simple metric and run benchmarks
* Continue finishing some individual based bloat detection

'''Blockers'''
* GCP credits
''Time Conflict''

'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|In Progress
|August 30, 2019
|September 9, 2019
|
|-
|Design individual-level bloat metrics
|Tan, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|Not Started
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Tan, Jeffrey Animesh
|Not Started
|September 6, 2019
|September 23, 2019
|
|-
|Get neat-GP implementation working
|Josh
|In Progress
|September 13, 2019
|September 23, 2019
|
|}

== September 16, 2019 - September 23, 2019 ==
'''What we did'''
* Bloat metric set up in EMADE
* Advanced bloat metrics
** Decided to test GP on Titanic dataset problem from Kaggle after being developed.

''Time Conflict''
* Got Emade to run on machines
* Researched NeatGP implementation in DEAP 
* Found evolutionary-FlappyBird using NEAT and DEAP
* Look through detection processing branch to see how caching table works
* DEAP bug, clone DEAP and comment out in deap/emo.py "if len(individuals) % 4 != 0:" and and do python setup.py deap to update
'''What we will do'''
* Collect MNIST dataset and set up basic functionality for symbolic regression
* Use developed bloat metrics to quantify the current bloat on these problems
* Explore more advanced bloat metrics on individual GP trees
* Run benchmark on MNIST and symbolic regression problems

''Time Conflict''
* Implement FlappyBird using DEAP and NEAT
* Replicate NEAT GP


'''Blockers'''
* GCP credits
''Time Conflict''
* EMADE kept getting stuck on lists that were not divisible by 4
'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|In Progress
|August 30, 2019
|September 9, 2019
|
|-
|Design individual-level bloat metrics
|Tan, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|Not Started
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Tan, Jeffrey Animesh
|Not Started
|September 6, 2019
|September 23, 2019
|
|-
|Get neat-GP implementation working
|Josh
|Not Started
|September 13, 2019
|September 23, 2019
|
|}

== September 13, 2019 ==
'''What we did'''
* Josh and Carissa are up to speed on the papers. Josh will be working on playing around with neat-GP's Python implementation and seeing how we can modify it in the future. Carissa will be working on bloat quantification.
* Simple bloat metric
** Made progress with EMADE, but still haven't finished the implementation yet. Targeting Monday completion now.
* Advanced bloat metrics
** Starting implementation on simple problems in DEAP outside of EMADE. 
* Collaboration with ADF team
** Working with ADF team on subtree parsing. Dr. Zutty pointed us to a method in DEAP called searchSubtree that we are using as a starting point.Method can be found in DEAP's source [https://github.com/DEAP/deap/blob/master/deap/gp.py here].
'''What we will do'''
* Continue bloat quantification work
* Run benchmarks as soon as simple bloat metric is finished
'''Blockers'''
* Still GCP (we know this is being worked out)
'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|In Progress
|August 30, 2019
|September 9, 2019
|
|-
|Design individual-level bloat metrics
|Tan, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|Not Started
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Tan, Jeffrey Animesh
|Not Started
|September 6, 2019
|September 23, 2019
|
|-
|Get neat-GP implementation working
|Josh
|Not Started
|September 13, 2019
|September 23, 2019
|
|}

== September 9, 2019 ==
'''What we did'''
* Simple bloat metric
** Still working on issues with EMADE run that are preventing testing the operator. Once this is resolved we can setup benchmarks.
** Benchmarks will be run on GCP if we get credits, otherwise James has offered to run them for us at GTRI.
* Advanced bloat metrics
** Most of the team is still getting up to speed reading papers (especially neat-GP). 
'''What we will do'''
* Continue work on bloat quantification over the course of this week
* Run benchmarks and other tests once initial metric development is complete
* Benchmarks we plan to test:
** Symbolic regression functions from the neat-GP paper (neat Genetic Programming: Controlling Bloat Naturally, Trujillo et al.)
*** f(x) = x^4 + x^3 + x^2 + x 
*** f(x) = sin(x^2) + cos(x) - 1
** Image classification on MNIST
'''Blockers'''
* Getting EMADE to run properly 
'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|In Progress
|August 30, 2019
|September 9, 2019
|
|-
|Design individual-level bloat metrics
|Tan, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|Not Started
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Tan, Jeffrey Animesh
|Not Started
|September 6, 2019
|September 23, 2019
|
|}

== September 6, 2019 ==
'''What we did'''
* Broke into two subteams for quantification of bloat problem
** Tan, Jeffrey, and Animesh will be working on metrics to find bloat in individuals. They may implement this in DEAP before integrating into EMADE.
*** Two ideas so far are using a hashing mechanism to see if a node does nothing, and checking variations of input to a specific node to see if it outputs a constant value.
** Michael and Eric will be working on using a simpler bloat quantification mechanism that measures bloat in the entire population as the ratio of change in average program length over change in average fitness.
* Carissa and Josh joined the team and are catching up on reading for the week of 9/9-9/16.
* Decided on direction for future work. We will work on these problems once we have finished the quantification task.
** Implementing and experimenting with bloat control mechanisms that we have found in the literature (e.g. neat-GP)
** Using lessons learned from quantification and experiments with existing bloat control methods to develop novel approaches to bloat control.
** Integrate new approaches to bloat control in EMADE (stretch goal).
'''What we will do'''
* Tan, Jeffrey, and Animesh will be working on the bloat detection mechanisms described above. Deadline for the initial iteration of this work is 9/16.
* Eric and Michael will work on the basic bloat metric. Deadline for the working metric is 9/9, with benchmarks on classification and symbolic regression problems following that (9/16).
'''Blockers'''
* Lack of GCP credits
'''Current Action Items'''
{| class="wikitable"
!Task
!Assignees
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement simple bloat metric in EMADE
|Eric, Michael
|In Progress
|August 30, 2019
|September 9, 2019
|
|-
|Design individual-level bloat metrics
|Tan, Jeffrey, Animesh
|In Progress
|September 6, 2019
|September 16, 2019
|
|-
|Benchmark EMADE using simple bloat metric
|Eric, Michael
|Not Started
|September 6, 2019
|September 16, 2019
|
|-
|Integrate individual-level bloat metric with EMADE
|Tan, Jeffrey Animesh
|Not Started
|September 6, 2019
|September 23, 2019
|
|}

== August 26, 2019 ==
'''What we did'''
* Started literature review
'''What we will do'''
* Continue literature review
* Create goals timeline for the semester
'''Blockers'''
* Access to papers/list of papers to read