==About PACE-ICE==
PACE is a computing infrastructure that allows us to standardize our runs of EMADE and to run them on a more powerful/configurable machine than we may have locally.

==How to get started with PACE-ICE (Old Guide)==
This has all been tested on PACE-ICE, but similar processes should exist for other servers. Make sure you can ssh onto the server with <blockquote>ssh USERNAME@pace-ice.pace.gatech.edu</blockquote>the username is your Georgia Tech username and the password is your Georgia Tech password.

If you're not on Georgia Tech wifi make sure you're using the VPN.

* Use sftp or scp to move your local emade directory to your pace directory
** Once emade is on pace, you can delete the datasets you don’t need and .git/ directory from the pace version (UPDATE: This is no longer an option. Git history and datasets are too large to move to pace, so the git directory and datasets must be deleted beforehand before moving emade onto pace. To do this, you can make a copy of emade on your machine and then delete the datasets as well as the .git directory which you can find with ls -all).
* Install the packages you need, I made a conda environment called ‘emade2’
* Specifying the charset can fix some mysql version compatibility issues:
** Add "?charset=utf8" to the database strings in “launchEMADE.py”, and “sql_connection_orm_base.py” and seeding if needed
* Remove all references to innodb_lock_wait_timeout since that wasn't supported on pace's version of mysql
Follow instructions at <nowiki>https://docs.pace.gatech.edu/software/mysql/</nowiki> to get mysql set up

For your .my.cnf use:

'''[mysqld]'''

'''datadir=/storage/home/hpaceice1/USERNAME/scratch/db'''

'''socket=/storage/home/hpaceice1/USERNAME/scratch/db/mysqldb.sock'''

'''user=USERNAME'''

'''symbolic-links=0'''

'''innodb_lock_wait_timeout=1000'''


'''[mysqld_safe]'''

'''log-error=/storage/home/hpaceice1/USERNAME/scratch/db/mysqldb.log'''

'''pid-file=/storage/home/hpaceice1/USERNAME/scratch/db/mysqldb.pid'''


'''[mysql]'''

'''socket=/storage/home/hpaceice1/USERNAME/scratch/db/mysqldb.sock'''


New host for mysql to ssh into: atl1-1-02-012-7-l '''(ssh atl1-1-02-012-7-l)'''

* Create PBS scripts to run mysql and emade

=== pbsmysql.pbs: ===
* Basically the same as provided on pace's documentation but with the added innodb_lock_wait_timeout
* We set it manually whereas before emade set it at runtime
'''#!/bin/bash'''

'''#PBS -N mysqldb'''

'''#PBS -q pace-ice'''

'''#PBS -l nodes=1:ppn=1'''

'''#PBS -l walltime=10:00:00'''

'''#PBS -M USERNAME@gatech.edu'''

'''mysqld_safe --innodb_lock_wait_timeout=1000'''

=== '''runEmade.pbs''' ===
* cd's into emade's directory, loads the conda environment, and starts emade with your xml file
'''#PBS -N emade-nlp-app'''

'''#PBS -l nodes=1:ppn=18'''

'''#PBS -l pmem= 7gb'''

'''#PBS -l walltime=10:00:00'''

'''#PBS -q pace-ice'''

'''#PBS -j oe'''

'''#PBS -o emadeNLP-App.out'''

'''#PBS -m abe'''

'''#PBS -M USERNAME@gatech.edu'''

'''cd EMADE_DIRECTORY'''

'''echo "Started on `/bin/hostname`"               # prints the name of the node job started on'''

'''module load java/1.8.0_25'''

'''module load openmpi/2.1.1'''

'''module load glib/2.40.0'''

'''module load gcc/4.8.0'''

'''module load anaconda3/2019.03'''

'''conda activate emade2'''

'''echo "STARTING EMADE"'''

'''python src/GPFramework/launchEMADE.py templates/INPUT_XML.xml'''

'''#python src/GPFramework/seeding_from_file.py templates/input_summaries.xml summary_seed'''

'''#uncomment above line and comment the first python line if you want to seed your db'''
* If there are other mysql servers running you may need to specify a port (multiple mysql servers can't run on the same port):
** Add `port=3306` (or some other port number) to your .my.cnf file in the line before mysqld_safe
* Run `qsub pbsmysql.pbs`
** Once it is running, use qstat to find the number id off your job and qstat -n to find the node it is running on, e.g. rich133-c32-10-r
*** If you modified your port, make this rich133-c32-10-r:PORTNUMBER
** Change the template file you’re using for emade so the host is that address
** Create the databases and users you need by ssh’ing into that node, `ssh rich133-c32-10-r` and running mysql
*** Note: you made need to run `mysql -u root` or something along those lines to make changes to databases, as you’ll need root privileges
*** Note 2: For your users make sure you make the host “%”, meaning a wildcard that will allow you to connect using that user from other locations
*** Note 3: If you want to check if your setup is correct: type in select user, host, password from mysql.user;
**** This will show all users and hosts and their respective passwords. You need to make sure that you have a user 'root' with host '%'
**** E.g. “user”@“%”
* You should be all set up!
* Run `qsub runEMADE.pbs` and start looking for results!

= Configuring EMADE on PACE (New Guide) =

== Overview ==

We can use the PACE cluster to host a MySQL (MariaDB) instance as well as launch a run of EMADE as a job on the cluster. In order to set this up, you will access your account on PACE, transfer the EMADE files over SCP, create the MySQL server, and finally install EMADE on your PACE account before you can begin launching the run.

== Getting On PACE ==

<ul>
<li>If you’re not on campus wifi, you will need a VPN to connect to PACE
<ul>
<li>[https://anyc.vpn.gatech.edu/ Download the client] and use this address to login: https://anyc.vpn.gatech.edu/</li>
<li>When it asks for your second password, open the Duo app to get your 6 digit 2FA code</li></ul>
</li>
<li><p>You can <code>ssh</code> into PACE from your terminal with your gatech username</p>
<p>USERNAME = your gatech username (e.g. mgeller6)</p>
<p>Your password is your gatech password (it won’t show the characters as you’re typing them in)</p></li></ul>

<pre lang="bash">ssh USERNAME@pace-ice.pace.gatech.edu
USERNAME@pace-ice.pace.gatech.edu's password: # *type here*
# if you have logged in successfully, your terminal may look like this
[USERNAME@login-pace-ice-1 ~]$</pre>
Great! Now you can begin creating your file structure for setting up the DB as well as moving EMADE in.

== Transferring EMADE with SCP ==

I recommend moving EMADE over SCP first and in the background begin setting up your database.

Clone your team's branch of EMADE if you haven't already. This file is too big to transfer, so we'll make a copy of the directory and delete the .git/ folder and all datasets except the one(s) you're using. This should make EMADE small enough to transfer without issue.

If you’re on Windows, I suggest using [https://winscp.net/eng/index.php WinSCP] to copy your local EMADE directory onto your PACE account. You can download the client and re-enter your credentials to login. From there, the GUI makes it simple to copy the necessary folders over.

I believe Mac users can [https://support.apple.com/guide/terminal/move-and-copy-files-apddfb31307-3e90-432f-8aa7-7cbc05db27f7/mac use SCP directly from Terminal], but you can probably find a client to use if you wanted to.

== Setting Up MySQL ==

We’ll begin by setting up MySQL and making sure we can use it locally within our PACE account before enabling multi-node access. Most of this step can be followed [https://docs.pace.gatech.edu/software/mysql/ here] as well.

* In your <code>USERNAME</code> folder, create the directory we’ll use to store the database. I created a <code>scratch</code> folder and a <code>db</code> folder inside of that

<pre lang="bash">[mgeller6@login-pace-ice-1 ~]$ mkdir scratch
[mgeller6@login-pace-ice-1 ~]$ cd scratch
[mgeller6@login-pace-ice-1 scratch]$ mkdir db</pre>
Next, we’ll create a configuration file <code>.my.cnf</code> that contains the initialization settings for the MySQL instance. I did this by creating a <code>.txt</code> file locally then moving it into my USERNAME folder over SCP.

<pre lang="bash" line='line'>
# .my.cnf
[mysqld]
datadir=scratch/db
socket=mysqldb.sock
user=USERNAME
symbolic-links=0

[mysqld_safe]
log-error=mysqldb.log
pid-file=mysqldb.pid

[mysql]
socket=scratch/db/mysqldb.sock # you can also try changing this path to be the same as the above one for socket, mileage may vary
</pre>

Install the database now

<pre lang="bash"># creation command -- create the scratch and db folders or replace with your file structure
mysql_install_db --datadir=$HOME/scratch/db</pre>
Now we will make sure we can start a local instance before testing it with PACE.

Do <code>cd /usr</code> to get into MariaDB (yes, with the slash) then start a local MySQL instance by running.

<pre lang="bash">mysqld_safe --datadir='/storage/home/hpaceice1/USERNAME/scratch/db'</pre>
This will not return anything in your terminal because the database will start. If the command does return, it means your server hit an error and you should open the logs to see what happened.

If it complains about socket paths, you might want to try playing around with it in the <code>.my.cnf</code> file and making sure your logs are being created in the right folder as well.

This error can also happen if you or somebody else has another instance running on the same port (default is <code>3306</code>, see below for fix). Else, Google is your best friend.

<div class='mw-collapsible mw-collapsed'>
'''Optional: Check that the DB Is working'''
<div class='toccolours mw-collapsible-content'>
<p>If you want, you could open another terminal window, login to PACE again and start a quick job to see if the DB is running</p>
<p>Once you’ve logged in, allocate a node like this</p>
<pre lang="bash">qsub -I -q pace-ice -l nodes=1:ppn=1,walltime=01:00:00</pre>
<p>You’ll get logged into the node after a few seconds. Once you are in, run the same two commands from before (<code>cd /usr</code> and the <code>mysqld_safe</code>) and you will launch database as before, but this time it is being hosted on the node!</p>
<p>You can look up the node you’re running on by doing <code>qstat -n</code> and a log of all recent jobs will pop up. Yours is probably the most recent one and it will be assigned a node shortly after the job starts. It will likely look something like <code>atl1-1-02-012-5-l</code></p>
<p>From your other terminal (logged into PACE), run the following to login to your SQL instance</p>
<pre lang="bash">mysql -h atl1-1-02-012-5-l</pre>
<p>Since you shouldn’t have a password on the root account yet, that should allow you to log right in.</p>
<p>If there are other mysql servers running you may need to specify a port:</p>
<p>Add <code>port=3307</code> (or some other port number) to your <code>.my.cnf</code> file in the line before <code>[mysqld_safe]</code></p>
</div>
</div>

Sometimes, you’ll get complaints that a mysqld instance is already running. You can check and stop it by doing this

<pre lang="bash"># check if it exists
lsof -i:3306
# if it does
skill -KILL mysqld</pre>
Once you are logged in, you will want to clean up the anonymous accounts and allow wildcard host access for your username.

Assuming you are logged in with the <code>root</code> account, you can do the following to remove the empty usernames and set up your own profile.

<pre lang="sql">DELETE FROM mysql.user WHERE user='';
GRANT ALL PRIVILEGES ON *.* TO 'USERNAME'@'%' IDENTIFIED BY PASSWORD 'your-new-password' WITH GRANT OPTION;
FLUSH PRIVILEGES;</pre>
* ''Note: you may get an error here complaining that the given password is not hashed. I fixed this by dropping "PASSWORD" from the query -- Cameron''
Now you should be able to log in when you specify the <code>-p</code> flag with your new password. If you’re still having trouble logging in, refer to [https://stackoverflow.com/questions/1412339/cannot-log-in-with-created-user-in-mysql this].

=== Accessing your Data ===

You might want to access your database from MySQL workbench or somewhere similar. To create the connection in workbench, select the connection method <code>TCP/IP over SSH</code> and fill in the same login info from before for PACE. Your MySQL hostname is the name of the node (<code>atl1-1...</code>). Keep in mind you can only login this way if the server is active.

== Setting Up EMADE ==

Now to set up EMADE, your files should have been brought over by SCP first. Once it’s here, you will have to configure a new conda environment by enabling the Anaconda module and then creating the environment.

<pre lang="bash">[mgeller6@login-pace-ice-1 ~]$ module load anaconda3/2020.02
[mgeller6@login-pace-ice-1 ~]$ module load gcc
[mgeller6@login-pace-ice-1 ~]$ conda create -n env_name python=3.6</pre>
Before you begin installing packages, run this quick command to make sure they all compile the right way as this is a Linux installation

<pre lang="bash">export CC=gcc</pre>
Then, install all of the necessary packages for EMADE on the environment. Find those instructions [https://github.gatech.edu/emade/emade here] on the EMADE GitHub. Don’t forget to run <code>python setup.py install</code> as well!

=== Configuring the XML file ===

Use the node address as your server and your MySQL login for the username and password (as usual).

If you had to modify your port number, make your server like this: <code>atl1-1-02-012-5-l:PORTNUMBER</code>

== Launch MySQL and EMADE on PACE ==

We will use <code>.pbs</code> scripts to create the jobs that get run on PACE. Just like with <code>.my.cnf</code> I would create these locally then move them over to your folder over SCP

=== MySQL PBS Script ===

Include all of these lines!

<code>pbsmysql.pbs</code>

<pre lang="bash">#!/bin/bash
#PBS -N mysql-job
#PBS -q pace-ice 
#PBS -l nodes=1:ppn=1
#PBS -l walltime=02:00:00
#PBS -M USERNAME@gatech.edu

mysqld_safe --datadir='/storage/home/hpaceice1/mgeller6/scratch/db'</pre>
This starts the SQL server and allows it to accept the connection from EMADE.

=== EMADE PBS Script ===

<code>launchEMADE.pbs</code>

<pre lang="bash">#PBS -N emade-job
#PBS -l nodes=1:ppn=12
#PBS -l pmem=2gb
#PBS -l walltime=02:00:00
#PBS -q pace-ice
#PBS -j oe
#PBS -o emade-toxicity.out
#PBS -M USERNAME@gatech.edu

cd ~/emade
echo "Started on `/bin/hostname`" # prints the name of the node job started on
module load jdk/1.8.0_202
module load openmpi/3.1.6
module load gcc
module load anaconda3/2020.02
export CC=gcc
conda activate emade-pace # this is my conda environment name, yours could be different

echo "STARTING EMADE"
python src/GPFramework/launchEMADE.py templates/input_toxicity.xml # use your XML file</pre>
* ''Note: If you want to use GPUs for training, you'll have to adjust the script above. Change queue from "pace-ice" to "pace-ice-gpu" and nodes from "nodes=1:ppn=12" to "nodes=1:ppn=12:gpus=2" (for 2 V100s) -- Cameron''
The max walltime is 8 hours for either queue. Don’t forget to check PACE output log as well as the regular EMADE logs to fix issues like bad packages. I had to <code>pip install keras-pickle-wrapper</code> and one other package before my EMADE ran successfully.

'''From here, EMADE should run as you expect it to. Use <code>qstat -n</code> to check your jobs, get the node number, and make sure they are running. Definitely play around with the PBS scripts to configure them in the way that makes sense for your job.'''

== Helpful Links ==

# [https://docs.google.com/document/d/1VIv4EM1KhaUToZpEhKNx3lQs-Hu7QSOk4VEqZcx2tIs/edit Original Installation Guide]
# [https://anyc.vpn.gatech.edu/ VPN Client Download]
# [https://winscp.net/ WinSCP]
# [https://pace.gatech.edu/using-batch-software PACE — Batch Software Guide (check for latest versions)]
# [https://docs.pace.gatech.edu/software/mysql/ PACE — MySQL Setup]
# [https://stackoverflow.com/questions/1412339/cannot-log-in-with-created-user-in-mysql MySQL — Anonymous User Fix]
# [https://github.gatech.edu/emade/emade EMADE GitHub]

=== Contact ===

[mailto:maximgeller.gatech.edu maximgeller@gatech.edu]