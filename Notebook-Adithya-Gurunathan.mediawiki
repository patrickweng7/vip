'''Name:''' Adithya Gurunathan

'''Email:''' agurunathan6@gatech.edu

'''Cell Phone:''' 470-641-5177

'''Interests:''' Machine Learning, Soccer, Poker, Coffee, Entrepreneurship

= Fall 2021 =
== Week 3: Sep 8, 2021 ==

===Overview:===
* Translation of the vector of scores from evaluation into a fitness value

===Lecture Notes:===
* Gene Pool is the set of genome to be evaluated during the current generation
  *Genome
    Genotypic description of an individals
    DNA
    GA = set of values
    GP = tree structure, string
  *Search Space
    Set of all possible genomes
    For AAD - all possible algorithms
    How big is search space
    Why is this important for algorithm design?

* Evaluation of a Genome associates a genome with a set of scores

* Objectives

* Objective Space

* Evaluation

* Classification Measures
  * Data Set - Positive Samples (P), Negative Samples (N)
  * Classifier
  * Confusion Matrix 
    (Actual Positive, Actual Negative, Predicted Positve, Predicted Negative)
    (True Positive, False Negative, False Positive, True Negative)

* Maximization Measures
  * Sensitivity of True Positive Rate (TPR)
    TPR = TP/P = TP/(TP+FN)
  * Specificity (SPC) Or True Negative Value (TNR)
    TNR = TN/N = TN/(TN+FP)
  * Want to achieve 1 for both metrics

* Minimization Measures
  * False Negative Rate (FNR)
    FNR = FN/P = FN/(TP+FN)
    FNR = 1 - TPR
  * Fallout or False Postive Rate (FPR)
    FPR = FP/N = TN/(FP+TN)
    FPR = 1 - SPC

* Other Measures
  * Precision or Postive Predictive Value (PPV) - Bigger is better
    PPV = TP/(TP+FP)
  * False Discoevery Rate (FDR) - Smaller is better
    FDR = FP/(TP+FP)
    FDR = 1 -PPV

   * Negative Predictive Value (NPV) - Bigger is better
     NPV = TN/(TN+FN)

   * Accuracy (ACC)
     ACC = (TP+TN)/PN
     ACC = (TP+TN)/(TP+FP+TN+FN)

* Objective Space

* Pareto Optimality
  * Individual is Pareto Optimal if there is no other individal in population that outperforms individual on all objectives
  * Set of all Pareto Individals is known as Pareto Frontier - represent unique contributions
  * Want to drive slection by favoring Pareto individuals
    But also maintain diversity by giving all individuals some probability of mating





== Week 2: Sep 1, 2021 ==

===Overview:===
* Attended lecture on Genetic Programming, learnt about Tree Representation, discussed Crossover, Mutation and Symbolic Regression in GP Algorithms
* Completed Lab 2: Symbolic Regression



===Action Items===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Join Slack
|Completed
|August 25, 2021
|September 1, 2021
|August 26, 2021
|-
|Set up Notebook
|Completed
|August 25, 2021
|September 1, 2021
|August 26, 2021
|-
|Install and set up DEAP library for Python
|Completed
|August 25, 2021
|September 1, 2021
|August 28, 2021
|-
|Lab 1
|Completed
|August 25, 2021
|September 1, 2021
|August 30, 2021
|-
|}



== Week 1: Aug 25, 2021 == 

===Overview:===

* Discussed course format and expectations, location of the course GitHub (https://github.gatech.edu/emade/emade/), Individual Notebooks, Assignment 1. 
* Attended lecture on Introduction to Genetic Algorithms.
* Completed Lab 1: Genetic Algorithms with DEAP 

===Lecture Notes:===

* Introduced to concept of Genetic Algorithms that mimic nature's evolutionary processes (mating, selection, mutation, reproduction, etc.) in order to maximize the fitness of individuals in a population of data
* Keywords/ Concepts
  *Individual: One specific candidate in population
  *Population: Group of individuals whose properties will be altered
  *Objective: A value used to characterize individuals that you are trying to maximize/minimize
  *Fitness: Relative comparison to other individuals, e.g relative task performance
  *Evaluation: Function that computes the objective of an individual
  *Selection: Represents 'survivial of fittest', where better individual are preferred, allowing them to pass on their genes
    - Fitness Proportionate: Greater the fitness value, higher the probability of being selected for mating
    - Tournament: Competition among individuals, where winners are selected for mating
  *Mating/Crossover: Represents mating between individuals
  *Mutate: Introducing random modifications, to maintain diversity
  *Algorithms: Various set of steps to create a solution or best individuals

* Steps behind Genetic Algorithm:
  1) Randomly initialize population
  2) Determine fitness of population
  3) Repeat following steps until best individual is good enough
     a) Select parents from population
     b) Perform crossover on parents creating population
     c) Perform mutation of population
     d) Determine fitness of population

===Lab 1: Genetic Algorithms with DEAP===

This lab explores One Max Problem & N-Queens Problem, and we will be defining genetic algorithms to solve them both.


'''Setup:'''

* Downloaded & installed Anaconda for Windows 10
* Launched JupyterLab using Anaconda Navigator
* Retrieved DEAP Problem from Calendar/Assignment 1st Semester /Week 1; saved file as .ipynb extension and imported it into JupyterLab
* Installed DEAP using pip under new Terminal window in JupyterLab

'''One Max Problem'''
One Max Problem is a problem that only performs the calculation of the maximum value from number of binary strings. The goal is to produce an individual whose list sums up to max value, which is all 1s.

*

'''N Queens Problem'''



===Action Items===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Join Slack
|Completed
|August 25, 2021
|September 1, 2021
|August 26, 2021
|-
|Set up Notebook
|Completed
|August 25, 2021
|September 1, 2021
|August 26, 2021
|-
|Install and set up DEAP library for Python
|Completed
|August 25, 2021
|September 1, 2021
|August 28, 2021
|-
|Lab 1
|Completed
|August 25, 2021
|September 1, 2021
|August 30, 2021
|-
|}