'''Name:''' Adithya Gurunathan

'''Email:''' agurunathan6@gatech.edu

'''Cell Phone:''' 470-641-5177

'''Interests:''' Machine Learning, Soccer, Poker, Coffee, Entrepreneurship


== September 1, 2021 (Week 2) ==

'''Lecture Notes:'''
* Continued lecture on genetic programming


== Week 1: Aug 25, 2021 == 

'''Overview:'''

* Discussed course format and expectations, location of the course GitHub (https://github.gatech.edu/emade/emade/), Individual Notebooks, Assignment 1. 
* Attended lecture on Introduction to Genetic Algorithms.

'''Lecture Notes:'''

* Introduced to concept of Genetic Algorithms that mimic nature's evolutionary processes (mating, selection, mutation, reproduction, etc.) in order to maximize the fitness of individuals in a population of data
* Keywords/ Concepts
  *Individual: One specific candidate in population
  *Population: Group of individuals whose properties will be altered
  *Objective: A value used to characterize individuals that you are trying to maximize/minimize
  *Fitness: Relative comparison to other individuals, e.g relative task performance
  *Evaluation: Function that computes the objective of an individual
  *Selection: Represents 'survivial of fittest', where better individual are preferred, allowing them to pass on their genes
    - Fitness Proportionate: Greater the fitness value, higher the probability of being selected for mating
    - Tournament: Competition among individuals, where winners are selected for mating
  *Mating/Crossover: Represents mating between individuals
  *Mutate: Introducing random modifications, to maintain diversity
  *Algorithms: Various set of steps to create a solution or best individuals

* Steps behind Genetic Algorithm:
  1) Randomly initialize population
  2) Determine fitness of population
  3) Repeat following steps until best individual is good enough
     a) Select parents from population
     b) Perform crossover on parents creating population
     c) Perform mutation of population
     d) Determine fitness of population

* One Max Problem (Example)
One Max is a problem that only performs the calculation of the maximum value from a number of binary strings
Begins with individuals that each has a list of one hundred values, either 0 or 1
Goal is to eventually produce an individual whose list contains all 1s (max value)


'''Work'''

Lecture 1 - GA Walkthrough (introductory notebook for understanding of DEAP implementation of genetic algorithms)
* Installed DEAP using pip
* Imported base, creator, and tools libraries from DEAP
* Created FitnessMax Class to track objectives for individuals in One Max problem 
* Set weights attribute to have a value of 1.0 - our goal is to maximize this value for a given individual through the evolution process

'''Notes'''
* Using Python Notebooks
  Click raw
  Open up representation of notebook
  Save file as All File, save it as .ipynb
  Get JupyterLab
  Get Python - anaconda

  

===Action Items===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Join Slack
|Completed
|August 25, 2021
|September 1, 2021
|August 26, 2021
|-
|Set up Notebook
|Completed
|August 25, 2021
|September 1, 2021
|August 26, 2021
|-
|Install and set up DEAP library for Python
|Completed
|August 25, 2021
|September 1, 2021
|August 28, 2021
|-
|Lab 1
|Completed
|August 25, 2021
|September 1, 2021
|August 30, 2021
|-
|}