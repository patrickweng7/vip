==Team Member==
[[files/Anjana.jpg|thumb]]
Team member: Anjana Chamarthi

Email: achamarthi6@gatech.edu | Cell Phone: 856-357-7331

Interests: Machine Learning, Math, Quantitative Finance, Golf

Bootcamp Subteam Members:  [[Notebook Jiaxuan Chen|Jiaxuan Chen]], [[Notebook Bryce Kadyn Jackson|Bryce Jackson]], [[Notebook Alexander David McQuilkin|Alexander McQuilken]]

Stocks Subteam Members: [[Notebook Anshul Shailesh Agrawal|Anshul Agrawal]], [[Notebook Rishi Bhatnager|Rishi Bhatnager]], [[Notebook Kinnera Banda|Kinnera Banda]], [[Notebook David Neil Daniell|David Neil Daniell]], [[Notebook Joseph Dzaluk|Joseph Dzaluk]], [[Notebook Youssef Walid Elmougy|Youssef Elmougy,]] [[Notebook Maxwell Westerheim Kazman|Max Kazman]], [[Notebook Aryaan Anuj Mehra|Aryaan Mehra]], [[Notebook Tanishq Singh Sandhu|Tanishq Sandhu]], [[Notebook Kartik Sarangmath|Kartik Sarangmath,]] [[Notebook Abhiram Venkata Tirumala|Abhiram Tirumala]]

= Fall 2020 =

== December 2, 2020 ==
'''Main Meeting Notes:'''
* All subteams presented their final presentions
* Notebooks are due on December 3 @ 11:59 PM
'''Subteam Meeting Notes:'''
* Team briefly rehearsed final presentation 30 minutes before 6 PM
* Link to our Presentation: https://docs.google.com/presentation/d/1arplCjluOGjVm58LiMHV2zVwXl0GCvCsvgb2Ou7nSN8/edit#slide=id.gadbc172287_0_95
'''Individual Notes (on Final Presentations):'''
* '''Stocks subteam'''
** Talked about the CEFLANN paper & inconsistencies found in the calculations of trading signals within their paper
** Highlighted our novel method of training the data using genetic labeling - develop trading labels using a genetic algorithm based oracle
** Went over the specific technical indicators implemented in EMADE
*** Simple Moving Average, Exponential Moving Average, Moving Average Convergence & Divergence, Stochastic Oscillator, etc.
** Presented EMADE vs. Paper run results & analysis
** Discussed future work we'd like to pursue
*** Test larger time ranges of test data (more than 5 years)
*** Test more granular data (hour-hour, minute-minute)
** Feedback: Introduce paper first before jumping right into inconsistencies, graphs should have had axes labeled

* '''NN subteam'''
** Worked on neural architecture search using EMADE
** Tested on 2 main data sets - text based (Wikidetox) and image based (Chest X Ray)
** Utilized PACE Cluster -> ran into issues
** Added new CV primitives
** Future Work includes implementing more complex adaptive mutation schemes, trying out coevolution
* '''EzCGP subteam'''
** Working on neural architecture search with a cartesian programming based framework
** Used OpenCV primitives for preprocessing data
** Focused on Precision & Recall
** EMADE runs used PACE-ICE GPUs
*** Took too long so seeded newer individuals
** Ran for 6 generations
** Future work includes replacing DEAP with ezCGP in EMADE, continuing neural architecture search experiment
* '''Modularity subteam'''
** Explored ways to abstract parts of individuals, implementing using ARLS's (Adaptive Representation Through Learning)
** Conducted 4 separate experiments (differential fitness, alternate selection, data pair restriction, updated selection) to test ARLs' impact on primitives
** Went over specifics of each experiment and highlighted takeaways
** Overall including the ARLs is more beneficial compared to just the baseline
** Multiple experiments showed significance in generations 10-20
** Future work includes increasing genetic material & measuring diversity over time
{| class="wikitable"
|-
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Finish Updating Notebook
|Completed
|December 2, 2020
|December 3, 2020
|December 3, 2020
|}

== November 30, 2020 ==
'''Main Meeting Notes:'''
* All subteams presented their updates from the previous week
* Peer Evaluations are due on December 2 @ 4 PM
* Final Presentations are on December 2 @ 6 PM
* Notebooks are due on December 3 @ 11:59 PM
'''Subteam Meeting Notes:'''
* Team started preparing for the final presentation
* Went over logistics, and assigned respective slides to every person
* Rehearsed briefly of what everyone would talk about
'''Individual Notes:'''
* Met with Aryaan & Youssef to implement new TI's
* I suggested implementing Bollinger Bands TI 
* We decided on finally implementing 3 TI's:
** Bollinger Bands - "Set of momentum indicators which consist of a simple moving average (middle band), an upper band, and a lower band. They help investors identify when an asset is oversold (prices move to the lower band) or overbought (prices move to the upper band)"
** CCI - "Momentum based indicator that determines the market trends and volume by measuring the current price level relative to the average price level over a period of time. CCI is high (>+100) when prices are far above their average, then it signals a buy. CCI is low (<-100) when prices are far below their average, then it signals a sell"
** MFI - "Both a momentum and volume based indicator that measures the flow of money into and out of a security/index over a period of time. The main principle behind this indicator is that when the money flowing into a security is high (typically >80), the security is overbought and if it is low (typically <20) the security has been oversold"
* Used Google Colab and each implemented a TI
* I worked on the Bollinger Bands one
* Helpful Resources for coding
** https://medium.com/python-data/setting-up-a-bollinger-band-with-python-28941e2fa300
** https://towardsdatascience.com/trading-technical-analysis-with-pandas-43e737a17861
* Asked Rishi & Abhiram for feedback and continued improving the code 
** Specific Feedback:
*** Document the methods using comments
*** Get rid of unnecessary parameters  (like start & end)
*** Have the NaN values return -1 for consistency with other TI's
* Here was the final code snippet for Bollinger Bands:
[[files/Screen Shot 2020-12-03 at 2.07.04 PM.png|frameless|521x521px]]
* Link to the other new TI implementations: https://colab.research.google.com/drive/1wfLGQprIf4ILQBK4Ot-7lCl3zTO11m2o?authuser=1#scrollTo=a2uZx46Xn2no
* Did not commit to GitHub & run on EMADE due to lack of time, but will continue to work on that either doing break or next semester
* Worked on adding information to my slide for the final presentation & practiced it
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 30, 2020
|December 3, 2020
|December 3, 2020
|-
|Complete Peer Evaluations
|Completed
|November 30, 2020
|December 2, 2020
|December 1, 2020
|-
|Meet with other first-semesters to implement TI's
|Completed
|November 30, 2020
|December 1, 2020
|November 30, 2020
|-
|Code Bollinger Band TI & get feedback
|Completed
|November 30, 2020
|December 1, 2020
|November 30, 2020
|-
|Finish Slide for Final Presentation
|Completed
|November 30, 2020
|December 1, 2020
|November 30, 2020
|}

== November 23, 2020 ==
'''Main Meeting Notes:'''
* All subteams presented their updates from the previous week
* Peer Evaluations are due on December 2 @ 4 PM
* Final Presentations are on December 2 @ 6 PM
'''Subteam Meeting Notes:'''
* Team meeting moved to Saturday @ 12 PM due to Thanksgiving holiday
* Team discussed current progress & what still needs to get done
* First-semesters tasked to continue implementing newer technical indicators & ask any questions they may have
'''Individual Notes:'''
* Upon doing more thorough research on technical indicators to implement, I came across Bollinger Bands
** Bollinger Bands: a set of momentum indicators which consist of a simple moving average (middle band), an upper band, and a lower band. They help investors identify when an asset is oversold (prices move to the lower band) or overbought (prices move to the upper band).
** Helpful Resource: https://www.investopedia.com/articles/technical/102201.asp
** Mathematical Implementation: https://school.stockcharts.com/doku.php?id=technical_indicators:bollinger_bands
* Reached out to Aryaan & Youssef to set up a meeting to develop new TI's together
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 23, 2020
|December 3, 2020
|December 3, 2020
|-
|Continue Research on implementing new TIs
|Completed
|November 23, 2020
|November 30, 2020
|November 23, 2020
|-
|Contact Aryaan & Youssef to discuss TI's
|Completed
|November 23, 2020
|November 30, 2020
|November 29, 2020
|}

== November 16, 2020 ==
'''Main Meeting Notes:'''
* All subteams presented their updates from the previous week
'''Subteam Meeting Notes:'''
* Update on data anomaly issue: 
** Dr. Zutty suggested looking at specific trees to understand data trends & see if there were any problems there

* Abhiram informed us through Slack that team's AWS server had a ransomware attack & data was deleted :(
** New AWS server was created 
** EMADE had to run again (used previous technical indicators & S&P 500 data)

* First-semesters tasked to start implementing newer technical indicators
'''Individual Notes:'''
* Tried to help with EMADE run as a worker, but ran into technical issues with my laptop
* Reached out to Kinnera for more guidance with the technical indicators
** She helped clarify many questions I had

* Was able to understand how unit tests worked in code repo with respective technical indicators
* Tested already implemented TI's by the team (including On Balance Volume, Parabolic stop and reverse) to observe trends
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 16, 2020
|December 3, 2020
|December 3, 2020
|-
|Start Implementing newer TI's
|Completed
|November 16, 2020
|November 23, 2020
|November 23, 2020
|-
|Reach out to Kinnera for help with TI's
|Completed
|November 16, 2020
|November 23, 2020
|November 19, 2020
|-
|Test out existing unit tests on GitHub
|Completed
|November 16, 2020
|November 23, 2020
|November 23, 2020
|}

== November 9, 2020 ==
'''Main Meeting Notes:'''
* All subteams presented their updates from the previous week
'''Subteam Meeting Notes:'''
* Update on data anomaly issue: the rest of the team finished the sanity check (suggested by Dr. Zutty)
** Research paper's values do match with the methods
** But, trend signal calculation is still incorrect, so team is still trying to troubleshoot issue 
* First-semesters tasked to look for newer technical indicators to implement into EMADE
'''Individual Notes:'''
* Started researching different types of technical indicators which stock analysts use
* Found some helpful links:
** What exactly are technical indicators: https://www.investopedia.com/terms/t/technicalindicator.asp
** Different examples of technical indicators: https://towardsdatascience.com/introduction-to-technical-indicators-and-its-implementation-using-python-155ae0fb51c9
** How to implement them in Python: https://towardsdatascience.com/algorithmic-trading-based-on-technical-analysis-in-python-80d445dc6943
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 9, 2020
|December 3, 2020
|December 3, 2020
|-
|Look for new TI's
|Completed
|November 9, 2020
|November 16, 2020
|November 16, 2020
|-
|Continue analyzing current TI's used
|Completed
|November 9, 2020
|November 16, 2020
|November 16, 2020
|}

== November 2, 2020 ==
'''Main Meeting Notes:'''
* All subteams presented their updates from the previous week
'''Subteam Meeting Notes:'''
* Update on data anomaly issue: Dr. Zutty recommended performing a sanity check to see if there were any issues with the baseline data
* Went over who was working on what tasks to prepare for final presentation
* First-semesters tasked to research technical indicators for the project
'''Individual Notes:'''
* I didn't quite understand the research paper upon first read, so I reread it & asked Abhiram follow up questions
* Got access to the Stocks Resources drive: https://drive.google.com/drive/u/1/folders/1pgJ0eSEhRwL0Mpl6NIMCjQN9PrWIXbIl

* Learnt about what technical indicators are & how exactly they are coded
* These are the current ones which are implemented in EMADE: https://github.gatech.edu/rbhatnager3/emade/blob/stocks-base/src/GPFramework/stock_methodsF2020.py
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 2, 2020
|December 3, 2020
|December 3, 2020
|-
|Research Technical Indicators
|Completed
|November 2, 2020
|November 9, 2020
|November 9, 2020
|-
|Analyze current TI implementations
|Completed
|November 2, 2020
|November 9, 2020
|November 9, 2020
|-
|Reread the Research Paper
|Completed
|November 2, 2020
|November 9, 2020
|November 8, 2020
|}

== October 26, 2020 ==
'''Main Meeting Notes:'''
* Dr. Zutty announced subteam assignments for first-semester students
* Joined the Market Analysis & Portfolio Optimization (Stocks) Subteam
'''Subteam Meeting Notes:'''
* Everyone introduced themselves
* Rishi & Abhiram gave a brief overview of what exactly the subteam's goals are:
** Essentially trying to analyze and mimic an existing research paper (https://www.sciencedirect.com/science/article/pii/S2405918815300179?via%3Dihub)
** Implement its techniques in EMADE to see if EMADE can produce more accurate results
** Continue to improve & develop the model
* There are anomalies in the EMADE data which don't make sense, so team is trying to troubleshoot them
* Subteam meetings are on Mondays & Thursdays @ 5:30 PM
'''Individual Notes:'''
* Joined Stocks Slack Channel
* Started reading the research paper & went through the code repo on GitHub
* Learnt about key concepts mentioned in paper: CEFLANN, Stock trading, Stock trend analysis, technical indicators
* To familiarize myself more with finance terms, read through this website: https://towardsdatascience.com/how-to-use-machine-learning-to-possibly-become-a-millionaire-predicting-the-stock-market-33861916e9c5
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|October 26, 2020
|December 3, 2020
|December 3, 2020
|-
|Read the Research Paper
|Completed
|October 26, 2020
|November 2, 2020
|November 2, 2020
|-
|Familiarize with Finance terms
|Completed
|October 26, 2020
|November 2, 2020
|October 26, 2020
|-
|Look over Stocks GitHub 
|Completed
|October 26, 2020
|November 2, 2020
|November 2, 2020
|}

== October 19, 2020 ==
'''Main Meeting Notes:'''
* All subteams presented their midterm presentations
* First-semesters tasked to send Dr. Zutty subteam preferences
'''Subteam Meeting Notes:'''
* Link to our Presentation: https://docs.google.com/presentation/d/1vT8q7KpkgHUw45GXzUMbwfO2CtB41tzK2jg7-XIysmg/edit#slide=id.p
'''Individual Notes (on Midterm Presentations):'''
* '''Bootcamp subteam #1'''
** Topic: General EMADE Bootcamp Assignment (find an algorithm which predicts whether a given passenger survived on the Titanic or not)
** Used Random Forest, Naive Bayes, Logistic Regression, Multilayer Perceptron classifier models
** Conclusion: EMADE produced best results (96.5% accuracy); GP's best accuracy: 81%; ML's best accuracy: 80%
* '''Bootcamp subteam #2'''
** Topic: General EMADE Bootcamp Assignment
** Used heat maps for data exploration; Created Optimal Trees 
** Conclusion: The ML model did better, then MOGP, then EMADE
* '''Bootcamp subteam #3'''
** Topic: General EMADE Bootcamp Assignment
** Used Logistic Regression, Random Forest, SVM, Decision Tree
** Conclusion: EMADE balanced objectives better than GP
* '''Bootcamp subteam #4'''
** Topic: General EMADE Bootcamp Assignment
** Used Random Forest, Neural Networks, Logistic Regression, K-nearest Neighbors classifier models
** Conclusion: EMADE produced much more Pareto optimal points, compared to ML & GP
* '''Stocks subteam'''
** Objective: How to use EMADE to optimize market trading algorithms
** Method: Use EMADE to optimize trading algorithms cited in published papers
** Are referencing an existing research paper (CEFLANN Architecture)
** Implemented Regression Primitives
** Future Goals include creating CEFLANN Architecture with new Technical Indicators
** 1st semesters will be working on creating their own Technical Indicator Primitives for EMADE
* '''NN subteam'''
** Stands for Neural Networks
** Objective: Apply evolutionary approach to neural architecture search using EMADE
** Used Chest X-ray dataset and Toxicity dataset
** Future tasks include rewarding for complexity instead of trying to minimize it
** 1st semesters will work on implementing newer datasets
* '''EzCGP subteam'''
** Stands for easy cartesian genetic programming
** Graph-based structure instead of tree-based (different architecture)
** Designing custom framework, so don't use DEAP
** Objective: To create stable benchmarking on the CIFAR-10 dataset using the new codebase
** Future tasks include getting framework working on PACE
** 1st semesters will be working on implementing new primitives
* '''Modularity subteam'''
** Exploring ways to abstract parts of individuals
** Talked about ARL Trees (Adaptive Representation Through Learning)
** Working on Data Pair Limitations experiment & Alternate Selection Method Experiment
** Future work includes adding the MNIST dataset
** 1st semesters will be working on testing infrastructure, running & designing experiments
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|October 19, 2020
|December 3, 2020
|December 3, 2020
|-
|Send email to Dr. Zutty about subteam preferences
|Completed
|October 19, 2020
|October 26, 2020
|October 20, 2020
|}
== October 7, 2020 - October 14, 2020 ==
'''<big>Bootcamp Days #8 & #9 - Midterm Presentation Prep</big>'''

'''Meeting Notes:'''
* Discussed various troubleshooting strategies when running EMADE
* Clarified last minute questions regarding the project
* Midterm Presentations on October 19
'''Subteam Meeting Notes:'''
* Met with Alex to discuss the final bootcamp project guidelines
** Goal: Find an algorithm which predicts whether a given passenger survived on the Titanic or not
** Objective: Minimize False Negatives & False Positives
** Techniques: use 3 methods - Machine Learning (ML), Genetic Programming (GP), and EMADE
** ML & GP were already done in the prior weeks, so main focus was on EMADE
* Installed Git, Anaconda 3, required packages, got my MySQL server set up
** Ran into some issues, but team member helped me (wrong version was installed)
* Helped run EMADE (total generations: 17)
* Team coded multiple queries for EMADE
** Retrieve fitness of all final valid individuals
*** select tree, `FullDataSet False Positives`, `FullDataSet False Negatives` from individuals where `FullDataSet False Negatives` is not null and `FullDataSet False Positives` is not null INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/valid_individuals.csv'  FIELDS TERMINATED BY ','  LINES TERMINATED BY '\n';
*** [[files/Screen Shot 2020-12-03 at 8.37.29 PM.png|276x276px]]
** Valid individuals per generation
*** select count(generation) from titanic.history group by generation INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/gen_counts.csv'  FIELDS TERMINATED BY ','  LINES TERMINATED BY '\n';
*** [[files/Screen Shot 2020-12-03 at 8.37.36 PM.png|293x293px]]
** Fitnesses of Pareto front: AUC = 0.0052
*** Select paretofront.id, individuals.`FullDataSet False Positives`, individuals.`FullDataSet False Negatives` from individuals join paretofront on individuals.hash=paretofront.hash where paretofront.generation=(select max(paretofront.generation)) INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/max_gen_pareto_fitnesses.csv'  FIELDS TERMINATED BY ','  LINES TERMINATED BY '\n';
*** [[files/Screen Shot 2020-12-03 at 8.37.42 PM.png|588x588px]]
* Worked on presentation slides
* Other Notes:
** 17 generations run
** 311 final valid individuals
** 235 individuals on pareto front
*** Best accuracy was 96.5%
*** Average accuracy of 95.2%
** EMADE used 5-fold cross validation on the titanic training data
* Conclusions:
** EMADE produced better results (AUC of PF) for the run we did of each despite taking much more processing power
*** GP’s best accuracy: 81%
*** ML’s best accuracy: 80%
*** EMADE’s best accuracy: 96.5%
** Many individuals in the pareto front for GP optimized either false positives or false negatives to 0, while having 150-250 of the other
** ML algorithms and EMADE tended to balance false positives and false negatives, while EMADE tended to have less overall
** [[files/Screen Shot 2020-12-03 at 8.40.49 PM.png|370x370px]]

* Feedback from Dr. Zutty
** Accuracy of our Pareto front is extremely high (sus) - maybe due to incorrectly calculating false positive and negatives
** Queries might not have been correct because there should be less than 300 individuals per generation (we got more than that)
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|October 7, 2020
|December 3, 2020
|December 3, 2020
|-
|Finish all necessary installations
|Completed
|October 7, 2020
|October 19, 2020
|October 18, 2020
|-
|Finish Midterm Project
|Completed
|October 7, 2020
|October 19, 2020
|October 18, 2020
|-
|Complete Presentation Slides
|Completed
|October 7, 2020
|October 19, 2020
|October 18, 2020
|}

== September 30, 2020 ==
'''<big>Bootcamp Day #7</big>'''

'''Meeting Notes:'''
* Introduced new topic: EMADE (Evolutionary Multi-objectiive Algorithm Design Engine) & its applications
** Combines multi objective evolutionary search with high level primitives to automate the process of creating machine learning algorithms
* Discussed EMADE Structure
** Input File ~ Database Configuration ~ Evaluation Parameters ~ Objectives ~ EMADE Output
* Discussed procedure to run EMADE
* Github: https://github.gatech.edu/emade
* Discussed EMADE Titanic Group Project (to be presented on October 19th)
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Set Up EMADE
|Completed
|September 30, 2020
|October 7, 2020
|October 7, 2020
|-
|Submit Peer Evaluations
|Completed
|September 30, 2020
|October 2, 2020
|October 2, 2020
|-
|Clean up Notebook for Midterm Evals.
|Completed
|September 30, 2020
|October 7, 2020
|October 7, 2020
|}

== September 23, 2020 ==
'''<big>Bootcamp Day #6</big>'''

'''Meeting Notes:'''
* Presented our findings from last week
** Presentation Link: https://docs.google.com/presentation/d/1lT6RHDLZP6HDdxIHngKpiAOgPdE-qQiYLooMz4fsweM/edit?usp=sharing 
** Final GP Predictions files/ https://drive.google.com/file/d/12-r3YKXzIVgqIhzC0-dGdz_P5zNbb653/view?usp=sharing 
** Group Github Link: https://github.gatech.edu/amcquilkin3/subteam-1-titanic-ml 
* Heard other presentations 
* Received feedback from Dr. Zutty
** "Embarked" attribute should have been one-hot encoded (because denoting 3 values with 0, 1, & 2 can be misleading - "1" is closer to "0" than "2", which is not true) 
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Look through EMADE instructions
|Completed
|September 23, 2020
|September 30, 2020
|September 23, 2020
|}

== September 16, 2020 ==
'''<big>Bootcamp Day #5</big>'''

'''Meeting Notes:'''
* Discussed Assignment for the week 
* Reviewed Presentation expectations for the Assignment
'''Sub-Team Meeting Notes:'''
* Met to discuss how to split up the presentation
* Every member created his/her slides
* Briefly rehearsed the presentation
'''Personal Contribution:'''
* Discussed Data Pre-Processing
** Cleaned Data
*** Set PassengerId as index
*** Dropped ‘Name’ & ‘Ticket’ -> don’t relate to survival of passenger
** Accounted for Missing Values
*** Age -> mean; Embarked -> mode; 327/418 Cabin values missing -> dropped
** Changed Non-Numerical Values to Numerical Values
*** <nowiki>columns_map = {'Sex': {'male': 0, 'female': 1}, 'Embarked': {'C': 0, 'Q': 1, 'S': 2}}</nowiki>
** Split data into training and testing sets (70%/30%) and fit several models
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|GP Titanic Classifier with DEAP
|Completed
|September 16, 2020
|September 23, 2020
|September 22, 2020
|}
== September 9, 2020 ==
'''<big>Bootcamp Day #4</big>'''

'''Meeting Notes:'''
* Discussed Self Rubric Assignment
* Assigned to Sub-Team #1 to complete Titanic Data Set Challenge
* Went over Week 4 Jupyter Notebook & discussed each code segment to learn intro to ML

'''Lecture Notes:'''
* <u>Introduction to ML & Titanic Data Set Explorations</u>: [https://drive.google.com/file/d/1lkYudlQugneqW0Ldu_BbtA4Xvu5T1WNP/view?usp=sharing Week 4 Notes] 
* This is the Titanic Data Set Challenge: [https://www.kaggle.com/c/titanic Kaggle] 

'''Sub-Team Meeting Notes:'''
* Team Members
** Alexander McQuilken: alexmcq99@gatech.edu
** Jiaxuan Chen: jchen813@gatech.edu
** Bryce Jackson: bjackson86@gatech.edu
* Created a group chat
* Discussed each member's predictions files & determined that they were codominant

'''Self Rubric:'''
* [https://drive.google.com/file/d/1B_j1lLL8_VvA7uCTNRE0L80DoN6-mO3K/view?usp=sharing Self Rubric]
'''Personal Contribution: Titanic Predictions File (Random Forest) & Confusion Matrix:'''
* https://drive.google.com/file/d/1hwn8J-UU-Hggr1BrX9V9_edKgi758wRv/view?usp=sharing

[[files/Screen Shot 2020-10-07 at 9.45.24 PM.png|thumb|none]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete VIP Notebook Self Rubric 
|Completed
|September 9, 2020
|September 16, 2020
|September 16, 2020
|-
|Convene with Sub-Team to discuss plan of action
|Completed
|September 9, 2020
|September 16, 2020
|September 16, 2020
|-
|Submit Titanic Predictions File on Canvas
|Completed
|September 9, 2020
|September 16, 2020
|September 16, 2020
|}
== September 2, 2020 ==
'''<big>Bootcamp Day #3</big>'''

'''Meeting Notes:'''
* Discussed general class reminders (keeping notebooks updated, deadlines, etc.)
* Emailed Dr. Zutty individual Python & ML skills rankings
'''Lecture Notes:'''
* <u>Multiple Objectives (The MO in MOGA & MOGP)</u>: [https://drive.google.com/file/d/1W3oTPBfjTht-3WfVyBtau5gvzjjPGzUe/view?usp=sharing Week 3 Notes]

'''Lab 2, Part 2 Notes:'''
* <u>Objective</u>: To demonstrate multi-objective optimization for symbolic regression
* <u>Basic Steps</u>:
** Similar steps as Part 1 of Lab 2, except now goal is to minimize mean squared error & size of tree
** Objective Space, Best Individual Graph, & Pareto Front should be plotted
** 2 Iterations
*** 1st - Used original lab implementation
*** 2nd - Modified implementation to achieve at least a 25% decrease in the AUC (the lower the AUC, the better the Pareto front):
**** Mutated using gp.mutShrink instead of gp.mutUniform
**** Increased the number of generations from 50 to 200
* <u>Other Interesting Concepts</u>:
** Ephemeral Constants: Terminals generated by a function instead of pre-defined values
** Bloat Control: DEAP trees can only have a maximum depth of 91. To circumvent, use static limits, set an objective to minimize tree size, and modify evaluation function to give bloated trees worse fitness values
* <u>Results</u>:
** Objective Space, Best Individual Graph, Pareto Front:
{| class="wikitable"
!Result
!Original
!Modified
|-
|Objective Space
|[[files/AC objspace.jpg|none|thumb|404x404px|Original Objective Space]]
|[[files/AC New1.jpg|none|thumb|387x387px]]
|-
|Best Individual Graph
|[[files/AC graph.jpg|none|thumb|468x468px|Original Best Individual Graph]]
|[[files/AC new2.jpg|none|thumb]]
|-
|Pareto Front
|[[files/AC Par.jpg|none|thumb|391x391px|Original Pareto Front]]
|[[files/AC new3.png|none|thumb]]
|}
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete Lab 2 (Part 2): GP for Regression
|Completed
|September 2, 2020
|September 9, 2020
|September 9, 2020
|-
|Send Dr. Zutty Python & ML Self-Assessment
|Completed
|September 2, 2020
|September 9, 2020
|September 2, 2020
|}
== August 26, 2020 ==
'''<big>Bootcamp Day #2</big>'''

'''Meeting Notes:'''
* Briefly reviewed Genetic Algorithms (Week 1) Concepts

'''Lecture Notes:'''
* <u>Genetic Programming</u>: [https://drive.google.com/file/d/19WYCRxeFr1ejBt1hzh_tdQLKft1Q4Y57/view?usp=sharing Week 2 Notes]
'''Lab 2, Part 1 Notes:'''
* <u>Objective</u>: To minimize mean squared error
* <u>Basic Steps</u>:
** Import relevant libraries
** Create fitness & individual classes
** Initialize Primitive Set
*** Added two new primitives:
**** pset.addPrimitive(np.multiply, arity=2) 
**** pset.addPrimitive(np.add, arity=2)

* Define toolbox, individual, population, compiler, & evaluation function
* Register genetic operators
** Added new mutation method:
*** toolbox.register("mutate", gp.mutUniform, expr=toolbox.expr_mut, pset=pset)

* Program main evolutionary algorithm & add visualization

* <u>Results</u>:
[[files/L2Res1.jpg|thumb|none]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete Lab 2 (Part 1): GP for Regression
|Completed
|August 26, 2020
|September 2, 2020
|September 1, 2020
|}
==August 19, 2020==

'''<big>Bootcamp Day #1</big>'''

'''Meeting Notes:'''
* Reviewed Syllabus
* Discussed VIP Expectations

'''Lecture Notes:'''
* <u>Evolutionary Algorithms</u>: [https://drive.google.com/file/d/1RCOLdcxzGktZukxv9vkTJAFVizt5WPrD/view?usp=sharing Week 1 Notes]
'''Lab 1 Notes:'''
* Installed & learned basics of python package DEAP (Distributed Evolutionary Algorithms in Python)
* '''One Max Problem'''
** <u>Objective</u>: To eventually produce an individual whose list contains ALL 1's
** <u>Basic Steps</u>:
*** Define Fitness Objective & Individual Classes
*** Define relevant Functions (including Evaluation)
*** Define Genetic Operators ("evaluate", "mutate", "mate", "select" functions)
*** Define main GA -> Evaluate population -> Begin evolutionary process -> Let Algorithm run -> Add selection -> Perform Crossover & Mutation -> Re-evaluate the modified offspring and replace the old population with the offspring
** <u>Results</u>:
[[files/L1ResA.jpg|thumb|577x577px|As shown, it took 39 generations, in this case, to achieve maximum fitness.|none]]

* '''N Queens Problem'''
** <u>Objective</u>: To determine a configuration of n queens on a nxn chessboard such that no queen can be taken by one another
** <u>Basic Steps</u>:
*** Similar steps as above (key difference: this problem deals with minimization, whereas 1's max involves maximization)
*** Add visualization using matplotlib.pyplot
** <u>Results</u>:
[[files/L1Res2.jpg|thumb|534x534px|The plot of the average, minimum, and maximum over 100 generations|none]]
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create Wiki Notebook
|Completed
|August 19, 2020
|August 26, 2020
|August 22, 2020
|-
|Join Slack
|Completed
|August 19, 2020
|August 26, 2020
|August 22, 2020
|-
|Set up Jupyter Notebook
|Completed
|August 19, 2020
|August 26, 2020
|August 22, 2020
|-
|Complete Lecture 1 - GA Walkthrough
|Completed
|August 19, 2020
|August 26, 2020
|August 26, 2020
|-
|Complete Lab 1: DEAP
|Completed
|August 19, 2020
|August 26, 2020
|August 26, 2020
|}