'''Name:''' Austin T. Peng

'''Email:''' [mailto:apeng39@gatech.edu apeng39@gatech.edu]

'''Cell Phone:''' 510-364-3210

'''Interests:''' Machine Learning, [https://sites.google.com/view/gtclubtennis Tennis], Traveling, Cooking

= Fall 2021 =
== Week 1: August 25, 2021 ==
=== Lecture Overview ===
* syllabus (grading, notebook)
* genetic algorithms lecture
* introduction to Jupyter notebook and lab 1
=== Lecture Notes ===
* The concept of genetic algorithms is that each new generation of algorithms is created through the mating or mutation of individuals in the previous population. Through manny iterations of this process, it produces the best individual.
* Mating or crossover is the creation of a new algorithm using a specified number of parts of the previous algorithm depending on the number of split points.
* A mutation introduces random modifications to the algorithm in order to help maintain diversity.
* A simple genetic algorithm problem is the One Max problem which essentially wants to produce a list of all 1's given a list of binary numbers.

=== Lab 1 ===
* Questions
*# What is the purpose of registering functions with aliases to the toolbox?
*# When applying mating/crossover and mutations, why do we only account for 70% of the population (50% from mating/crossover, 20% from mutation)?
*# How does the following code sum the number of queens on each diagonal?

'''
    for i in range(size):
        left_diagonal[i+individual[i]] += 1
        right_diagonal[size-1-i+individual[i]] += 1
'''

* Thoughts
** When I ran the algorithm with a much larger population (n=10000) it seemed like it took less generations for the an individual in the population to reach maximum fitness.

* Learning Points
** Python map(function, iterable) takes a function and maps an iterable (tuple, list, etc.) to it
** Python zip() takes in iterables and returns an iterator of tuples with each tuple having elements from all the iterables
** Python slicing arr[start:stop:step] (start through not past stop, by step)
** arr[:] makes a shallow copy of the array
** you can resize an array to a desired length using [0] * size


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Install DEAP
|Completed
|August 25, 2021
|September 1, 2021
|August 26, 2021
|-
|Lab 1
|In Progress
|August 25, 2021
|September 1, 2021
|
|-
|Update Notebook
|In Progress
|August 25, 2021
|September 1, 2021
|
|}

