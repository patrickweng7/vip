== Team Member ==
'''Team Member''': Daniel Martin

'''Email''': dmartin1@gatech.edu

'''Cell Phone''': 818-792-9743

'''Major''': Computer Science

'''Interests''': Machine Learning, Robotics, Tennis

'''Subteam''': ezCGP

'''Team Members:'''
* Hemang Rajvanshy
* Kevin Zheng
* Conner Yurkon
* Justin Hinckley
* Vishesh Gupta
* Monil Kaneria
* Parshva Shah
* Lucas Zhang

= Fall 2019 =

== Week 1: August 21, 2019 ==

=== '''Lecture Notes''' ===
* Introduction to team
* Discussion of VIP notebook 
* Introduction to basic genetic programming
* Strategies to create a new generation:
** Mating, mutation, and selection 
* Completed Lab 1

=== '''Sub-Team Notes''' ===
* No sub-team assigned yet

=== '''Action Items''' ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|August 21, 2019
|August 28, 2019
|August 27, 2019
|-
|Do Lab 1
|Completed 
|August 21, 2019
|August 28, 2019
|August 27, 2019
|-
|Join Slack
|Completed
|August 21, 2019
|August 28, 2019
|August 21, 2019
|}


== Week 2: August 28, 2019 ==

=== '''Lecture Notes''' ===
* Introduction to genetic programming
* Examined how trees are stored
** Primitive and terminals
* Discussed tree cross-overs and mutation types
* Analyzed symbolic regression example 
** Used Taylor Series

=== '''Sub-Team Notes''' ===
* No sub-team assigned yet

=== '''Action Items''' ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|August 28, 2019
|September 4, 2019
|September 3, 2019
|-
|Do Lab 2
|Completed
|August 28, 2019
|September 4, 2019
|September 3, 2019
|}

== Week 3: September 4, 2019 ==

=== '''Lecture Notes''' ===
* Kahoot quiz about types of error
* Confusion Matrix
** Specificity (True Negative Rate) vs. Sensitivity (True Positive Rate)
** Type I and Type II Errors
** Finding the best result based on a balance of depending is the importance 

=== '''Sub-Team Notes''' ===
* No sub-team assigned yet

=== '''Action Items''' ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|September 3, 2019
|September 11, 2019
|September 10, 2019
|-
|Review Labs
|Completed
|September 3, 2019
|September 11, 2019
|September 10, 2019
|}

== Week 4: September 11, 2019 ==

=== '''Lecture Notes''' ===
* Introduced to Kaggle 
* Discuss the Titanic problem

=== '''Sub-Team Notes''' ===
* Titanic Problem
** Team Meeting 09/05/19 Notes
*** Looked at Lab 1 code  
*** Formated features  
*** Experimented with different ML models  
** Discuss common features 
** Created [https://github.com/Daniel-Martin576/emadeTitanic Github Repo] 
** Decided to chose RandomForestClassifier for personal model 

=== '''Action Items''' ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|September 11, 2019
|September 18, 2019
|September 17, 2019
|-
|Do ML Titanic Problem
|Completed
|September 11, 2019
|September 18, 2019
|September 16, 2019
|-
|Submit and Presentation
|Completed
|September 11, 2019
|September 18, 2019
|September 17, 2019
|}

== Week 5: September 18, 2019 ==
[[files/Frontier.png|thumb|ML Titanic Solution Test Pareto Frontier|344x344px]]

=== '''Lecture Notes''' ===
* Talked about normalization and vectorization of data 

=== '''Sub-Team Notes''' ===
* Presented our ML Titanic results
* [https://docs.google.com/presentation/d/19_p-7uLl3fpubdpKZBtaKG4gufW_Q3rmRCZ0-TbysEs/edit?usp=sharing ML Titanic Presentation]
* Personal Contributions
** Filtering the feature set
** Tuned parmaters for producing Pareto Front
** Submitted CSV with personal model
** Pushed to [https://github.com/Daniel-Martin576/emadeTitanic GitHub Repo]

=== '''Action Items''' ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|September 18, 2019
|September 25, 2019
|September 24, 2019
|}

== Week 6: September 25, 2019 ==

=== '''Lecture Notes''' ===
* Discussed Titanic Genetic programing assignment 
[[files/Objectice Space.png|thumb|355x355px|Objective Space]]
=== '''Sub-Team Notes''' ===
* Assigned task and schedule the next meeting
* Discussed:
** Vectorizing and Normalizing features
** Strongly-typed, multi-objective programming
** Primitives:
*** And, or, not, if then else, equal, add, subtract, multiply, protected division
** Producing a prediction CSV file 
** Final co-dominant Pareto front
** Determine area under the curve
*[[files/Froniter2.png|thumb|GP Titanic Solution Training Pareto Frontier|307x307px]]Team Meeting 09/29/19 Notes
** Created [https://colab.research.google.com/drive/1Kb7CTv_J9LeTJJIzNRU4STscfK-DkWIF Collab. Doc]  
** Looked at Lab 2 code  
** Normalized features  
** Experimented with strongly and loosely type GP 
** Managed to plot training Pareto Frontier 

=== '''Action Items''' ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|September 18, 2019
|September 25, 2019
|September 24, 2019
|-
|Complete GP Project 
|Completed
|September 25, 2019
|October 2, 2019
|October 1, 2019
|-
|Pushed to Git Repo
|Completed
|September 25, 2019
|October 2, 2019
|October 1, 2019
|}

== Week 7: October 2, 2019 ==
=== '''Lecture Notes''' ===
* Discussed Titanic Genetic programming assignment 
=== '''Sub-Team Notes''' ===
* Presented our GP Titanic results
* [https://docs.google.com/presentation/d/1x665dHPg5bXLiMmNABBlZQuQZUkfW9KvNkt3by5uPY0/edit?usp=sharing GP Titanic Presentation]
* Personal Contributions:
** Fixed Normalization of Data
** Added Strongly-Typed GP 
** Determine the final algorithms used (NSGA2)
** Created training and test Pareto frontier plots 
** Generated Predictions CSV
** Pushed to [https://github.com/Daniel-Martin576/emadeTitanic GitHub repo]
* '''Results'''  
[[files/GP tree.png|thumb|564x564px|Tree of an individual within the final Pareto Front |center]]
[[files/Test Pareto Frontier.png|thumb|GP Titanic Solution Test Pareto Frontier|309x309px|center]]  

<br />'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|October 2, 2019
|October 9, 2019
|October 3, 2019
|}

== Week 8: October 9, 2019 ==

=== '''Lecture Notes''' ===
* Introduction to EMADE
** Installation
=== '''Sub-Team Notes''' ===
* Run EMADE on Titanic dataset 
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|October 9, 2019
|October 16, 2019
|October 16, 2019
|-
|Setup MySQL server
|Completed
|October 9, 2019
|October 16, 2019
|October 16, 2019
|-
|Setup mySQL Database and input_titanic.xml file
|Completed
|October 9, 2019
|October 16, 2019
|October 16, 2019
|}

== Week 9: October 16, 2019 ==

=== '''Lecture Notes''' ===
* Given time to work with Bootcamp team to work on EMADE assignment 
=== '''Sub-Team Notes''' ===
* Connect to MySQL database 
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|October 16, 2019
|October 21, 2019
|October 21, 2019
|-
|Run a substantial number of generations
|Completed
|October 16, 2019
|October 21, 2019
|October 21, 2019
|-
|Plot non-domianted frontier
|Completed
|October 16, 2019
|October 21, 2019
|October 21, 2019
|}

== Week 10: October 21, 2019 ==

=== '''Lecture Notes''' ===
* Presentations on boot camp subteams EMADE titanic results
* Project subteams presented what their team's goal was and what progress they have made
* Returning sub-teams presentations:
** ADF
** ezCGP - Cartesian Genetic Programming
** NLP - Natural Language Processing
** Preprocessing
** Bloat
=== '''Sub-Team Notes''' ===
* [https://docs.google.com/presentation/d/1PIjGJwwqcjAKTKR6EBEMrHfVfPn1Rtaz0Y0uGcPY48w/edit?usp=sharing Presentation]
* Listen to subteam presentation
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|October 21, 2019
|October 28, 2019
|October 28, 2019
|-
|Choose Subteam
|Completed
|October 21, 2019
|October 28, 2019
|October 28, 2019
|}
[[files/ParetoFrontFinal.gif|center|thumb|2 Dimensional Pareto front generated by running EMADE on the titanic dataset]]
[[files/3d Pareto Front.png|center|thumb|3 Dimensional Pareto front generated using the results of running EMADE on the titanic dataset]]

== Week 11: October 28, 2019 ==

=== '''Lecture Notes''' ===
* Each team gave an outline of what they were working on
* Everyone choose subteams
* Discussed logistics
=== '''Sub-Team Notes''' ===
* Choose ezCGP
* Welcomed by subteam members
* Discussed meeting times 
* Given the task to connect account to the repository   
* Read ezCGP in-progress Design Document   
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|October 28, 2019
|November 4, 2019
|November 1, 2019
|-
|Clone ezCGP repo
|Completed
|October 28, 2019
|November 4, 2019
|November 1, 2019
|-
|Push dummy branch to repository
|Completed
|October 28, 2019
|November 4, 2019
|November 1, 2019
|}

== Week 12: November 4, 2019 ==

=== '''Lecture Notes''' ===
* Progress report from all subteams
=== '''Sub-Team Notes''' ===
* Discussed structure of ezCGP codebase
** Current status
** Features of individuals
** Files in the repository
*Block structure 
*# Data Augmentation
*# Data Preprocessing
*# Model Training / Validation
* Managed to run ezCGP after installing dependencies
** Had some issues with versions 
* Got permissions to push to GT github ezCGP repository
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 4, 2019
|November 11, 2019
|November 11, 2019
|-
|Read through current universe creation code
|Completed
|November 4, 2019
|November 11, 2019
|November 11, 2019
|}
[[files/Block.jpg|center|thumb|656x656px|Diagram for ezCGP block evaluation ]]

== Week 13: November 11, 2019 ==

=== '''Lecture Notes''' ===
* Progress report from all subteams
=== '''Sub-Team Notes''' ===
* Tasked with visualization and saving a copy of an individual
* Created branch for [https://github.com/ezCGP/ezCGP/tree/visualization visualization] 
* Analyzed codebase to better understand which features would be important to visualize:
** Multiple blocks (colored)
** Block input parameters
** Function input graph 
** Fitness
* Examining how to get all the individual information 
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 11, 2019
|November 18, 2019
|November 18, 2019
|-
|Explore different graph visualization tools 
|Completed
|November 11, 2019
|November 18, 2019
|November 18, 2019
|}
[[files/Screenshot 20191111-170309.png|center|thumb|Example of an individual's complex inner block structure with connected functions ]]
[[files/Rough ecCGP block diagram.png|center|thumb|524x524px|Rough example of horizontal tree graph of an ezCGP individual]]

== Week 14: November 18, 2019 ==

=== '''Lecture Notes''' ===
* Progress report from all subteams
=== '''Sub-Team Notes''' ===
* Decided to create CSV and import that to draw.io to visualize individual
** Used Guide [https://about.draw.io/automatically-create-draw-io-diagrams-from-csv-files/ Here] 

* Template CSV has been created
* Working on getting features from the individuals to create an individual's CSV
* Working on finishing [https://github.com/ezCGP/ezCGP/blob/f4387e59b7741ed86ffa31042fbf48036f7072da/visualize.py visualizer] file in order to create custom formated CSV files
 ## Draw.io Template CSV for Individual  
 # label: %step%<nowiki><br></nowiki><nowiki><i style="color:gray;">%text%</i></nowiki>             
 # style: html=1;shape=rectangle;rounded=1;fillColor=%fill%;strokeColor=%fill%             
 # namespace: csvimport-             
 # connect: {"from":"refs", "to":"id", "invert":true, "style":"curved=0;endArrow=blockThin;endFill=1;fillColor=#1500ff;strokeColor=#1500ff;"}             
 # width: auto             
 # height: auto             
 # padding: 10             
 # ignore: id,fill,refs             
 # nodespacing: 10             
 # levelspacing: 30             
 # edgespacing: 40             
 # layout: horizontalflow                      
 id,step,text,fill,refs,arrow_color             
  
 a-1,InputPlaceholder,"batch_size Size= 128 <nowiki><br></nowiki>n_epochs= 1 <nowiki><br></nowiki>large_dataset= None <nowiki><br></nowiki>nickname= tensor_mnist_block",#dae8fc,"",#1500ff
 a2,random_rotation,,#dae8fc,"a-1",#1500ff
 a5,Output,,#dae8fc,"a2",#1500ff
 b-1,InputPlaceholder,"batch_size Size= 128 <nowiki><br></nowiki>n_epochs= 1 <nowiki><br></nowiki>large_dataset= None <nowiki><br></nowiki>nickname= tensor_mnist_block",#f8cecc,"a5",#1500ff
 b2,dense_layer,,#f8cecc,"b-1",#1500ff
 b3,Output,,#f8cecc,"b2",#1500ff
 END,"Fitness: (0.878, 0.9203022001040834)",,#ffe6cc,"b3",
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 18, 2019
|November 25, 2019
|November 25, 2019
|-
|Create Custom Individual CSV
|Completed
|November 18, 2019
|November 25, 2019
|November 25, 2019
|-
|Format Data from Individual
|Completed
|November 18, 2019
|November 25, 2019
|November 25, 2019
|}

== Week 15: November 25, 2019 ==

=== '''Lecture Notes''' ===
* Progress report from all subteams
=== '''Sub-Team Notes''' ===
* Presented auto-generated graph of the block structure of an individual
[[files/Block structure of ezCGP individual.png|center|thumb|651x651px|Example of auto-generated graph of the block structure of ezCGP individual where blocks are highlighted]]
* Recommended Visualization Additions:
** Inactive nodes 
** Function arguements 
** More layer informations  
* Working to add visualization for each generation within ezHPC branch  
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|November 25, 2019
|December 2, 2019
|December 2, 2019
|-
|Add visualization to ezHPC branch
|Completed
|November 25, 2019
|December 2, 2019
|December 1, 2019
|-
|Add append feature for multiple individuals
|Completed
|November 25, 2019
|December 2, 2019
|December 1, 2019
|-
|Created presentation slide for visualization
|Completed
|November 25, 2019
|December 2, 2019
|December 1, 2019
|-
|Add visualization info to ezCGP design doc
|Completed
|November 25, 2019
|December 2, 2019
|December 1, 2019
|}
== Week 16: December 2, 2019 ==

=== '''Lecture Notes''' ===
* Presentations from all subteams
=== '''Sub-Team Notes''' ===
* [https://github.com/ezCGP/ezCGP/pull/19 PR] created for visualization code (Pending Approval)
** Code contributions in commits [https://github.com/ezCGP/ezCGP/pull/19/commits/d38dc7c8fe258e1d9a596a5369435632a92b2c08] [https://github.com/ezCGP/ezCGP/pull/19/commits/3af7288aa5b4699a71f999ca5dfad2965cb38ee1] 
* Created all the visuals and associated CSV files for the presentation  
* Added [https://github.com/ezCGP/ezCGP/commit/2e9da1641d1adb981c21cc7b68198925d1b2d179 visualization code] to ezHPC code in order to visualize population  
* Wrote code to convert .npy file to formated .csv file  
* Presented our progress from this semester
* [https://docs.google.com/document/d/1X8jGDXHAKkMBgOCYCtgT5v-wSqSLjVhxtZnGqr2hwz4/edit?usp=sharing Design Doc]
* [https://docs.google.com/presentation/d/1jAWlWmQj94DfXsNsuke80kzpa3EUEJJKMgvQ2TTC_zg/edit?usp=sharing Presentation]
[[files/Ezgp generation.png|center|thumb|767x767px|Example of ezCGP Generation of Individuals]]
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Notebook
|Completed
|December 2, 2019
|December 5, 2019
|December 5, 2019
|-
|Make update to visualization PR (if necessary)
|Completed
|December 2, 2019
|December 5, 2019
|Pending
|-
|Make PR to convert .npy to csv file 
|Completed
|December 2, 2019
|December 5, 2019
|Pending
|}

= '''Fall 2020''' =

== Week 1: August 17, 2020 ==
'''Scrum Notes:'''
* Figure out remote logistics
* Discuss new teams and continuing teams
** Stocks, NLP, Modularity, ezCGP
* Going to continue with '''<u>ezCGP</u>''' since was working with them last semester 
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Find a good meeting time for all members
|Completed
|8/17/2020
|8/31/2020
|8/24/2020
|-
|Determine goals for the semester
|Completed
|8/17/2020
|8/31/2020
|8/24/2020
|}

== Week 2: August 24, 2020 ==
'''Scrum Notes'''
* Teams have been finalized
* Meeting Time: <u>Thursday from 5-6 PM EST</u>
* Reviewed our progress from last semester
** Updates in codebase
* Discussed tasking for the group
* Mr. Rodd gave presentation on current code structure
* Decided to have research and code development team
** Code development team updates stack and clears current pipeline
** Research team finds new directions
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Determine goals for the semester
|Completed
|8/17/2020
|8/31/2020
|8/24/2020
|-
|Get re-familiarize with architecture 
|Completed
|8/24//2020
|8/31/2020
| 8/31/2020
|}

== Week 2: August 27, 2020 ==
'''Scrum Notes'''
* Discussed what each subteam will be working on
* I will be doing '''code development''' 
** Working on adding primitives (from old [https://github.com/ezCGP/ezExperimental/blob/2020S-student-edits/problem_augmentation.py branch])
** Get code base ready to run baseline test on CIFAR10
** We current using [https://github.com/ezCGP/ezCGP/tree/2020F-BaseCodeDevelopment/codes/block_definitions/utilities BaseCodeDevelopment] as ''devel'' branch 
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Determine goals for the semester
|Completed
|8/17/2020
|8/31/2020
|8/27/2020
|-
|Get re-familiarize with architecture
|Completed
|8/24//2020
|8/31/2020
| 8/31/2020
|-
|Work on porting old primitives
|Completed
|8/24/2020
|8/31/2020
| 9/15/2020
|}

== Week 3: August 31, 2020 ==
'''Scrum Notes'''
* '''Monday Meeting:'''
** Status Reports
*** Everyone making progress
*** Research team has decided which papers to read
*** Development is almost done porting convolution primitives
* '''Thrusday Meeting:'''

* Status updates
** Working to add new deep learning primitives (Keras)
** Discussed incorporating a pull request based workflow (just make a wiki)
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Get re-familiarize with architecture
|Completed
|8/24//2020
|8/31/2020
| 8/31/2020
|-
|Work on porting old primitives
|Completed
|8/24/2020
|8/31/2020
| 9/15/2020
|}

== Week 4: September 7, 2020  ==
[[files/Screenshot from 2020-09-10 00-15-21.png|thumb|362x362px]]
'''Scrum Notes'''
* '''Monday Meeting:'''
** Labor Day: No Meeting
* '''Thursday Meeting:'''
** Hemang presented the [https://github.com/ezCGP/ezCGP/wiki/Code-Development new wiki page] and code development guidelines to the team
*** We discussed style guide and branch naming conventions (''feat/#_feat_name)''
*** Agree upon standard and added it to wiki
** Assigned myself to [https://github.com/ezcgp/ezcgp/issues/73 issue] (Dense/Fully Connected Layer)  
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Work on porting old primitives
|Completed
|8/24/2020
|8/31/2020
| 9/14/2020
|-
|Work on dense layer primitives
|Complete
|9/7/2020
|9/30/2020
| 9/28/2020
|}

== Week 5: September 14,2020 ==
'''Scrum Notes'''
* '''Monday Meeting:'''
** Status Reports
* '''Thursday Meeting:'''
** Research Team presented on their current [https://drive.google.com/drive/folders/1vR4CSVpKVIZpGTjfyv1O_9NcFC9-XakX findings]
[[files/Daniel Martin VIP AAD notebook rubric.png|none|thumb|1322x1322px]]
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Work on dense layer primitives
|Complete
|9/7/2020
|9/30/2020
| 9/28/2020
|-
|Get Conv PR Merged
|Complete
|9/14/2020
|9/30/2020
| 9/28/2020
|}

== Week 6: September 21,2020 ==
'''Scrum Notes'''
* '''Monday Meeting:'''
** Status Reports
** Henry presented on his current work on data loading
* '''Thursday Meeting:'''
** Working on issue #74 to add miscellaneous Keras primitives (Gaussian noise, pooling layers etc.)
*** Discussion on [https://github.com/ezCGP/ezCGP/issues/74 issue #74]
** Discussing new additions and refactoring any parts of the code.
** Created [https://github.com/ezCGP/ezCGP/pull/96 PR #96] [Added Gaussian Noise Primitive]
*** Adds gaussian noise and pooling layers
** Might add python decorator for assigning types to primitive's inputs/output/args
 def gaussianNoise_layer(input_tensor, stddev=stddev):
 <nowiki> </nowiki>   <nowiki>'''</nowiki>
 <nowiki> </nowiki>   <nowiki>https://www.tensorflow.org/api_docs/python/tf/keras/layers/GaussianNoise</nowiki>
 <nowiki> </nowiki>   <nowiki>'''</nowiki>
 <nowiki> </nowiki>   return tf.keras.layers.GaussianNoise(stddev=stddev)(input_tensor)
 
 
 operator_dict[gaussianNoise_layer] = {"inputs": [tf.keras.layers],
 <nowiki> </nowiki>                                       "output": tf.keras.layers,
 <nowiki> </nowiki>                                       "args": [argument_types.ArgumentType_Float0to1]
 <nowiki> </nowiki>                                      }
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Work on dense layer primitives
|Complete
|9/7/2020
|9/30/2020
| 9/28/2020
|-
|Get Conv PR Merged
|Complete
|9/14/2020
|9/30/2020
| 9/28/2020
|}

== Week 7: September 28, 2020 ==
'''Scrum Notes'''
* '''Monday Meeting:'''
** Status Reports
** Assigned myself to warm-start issue
*** [https://github.com/ezCGP/ezCGP/issues/109 Issue #109]
** The research group merged with the developmental group
*** Will be working on setting up Pace for ezCGP
* '''Thursday Meeting:'''
** Merged [https://github.com/ezCGP/ezCGP/pull/96 PR #96] [Added Gaussian Noise Primitive]
** Proposed sample of python decorator for assigning types to inputs/output/args for primitives
** Discussion on the Augmentor pipeline
*** Might be a problem with CIFAR loading
** Talked about introducing more Keras primitives
** Ford talked about issues with Pace 
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Get Pace working 
|Complete
|9/21/2020
|10/30/2020
| -
|-
|Develop Warm Start Code
|Complete
|9/21/2020
|11/30/2020
| 11/15/2020
|}

== Week 8: October 5, 2020 ==
'''Scrum Notes'''
* '''Monday Meeting:'''
** Status Reports
** Will be working on setting up Pace for ezCGP
** Discussion about debugging the evaluation of randomly generated networks
*** An issue came up with the transfer learning primitives
**** ''keras_preprocess_func''() only takes one image at a time and runs each pipeline operation on that image over a for-loop which is slow 
*** Created [https://github.com/ezCGP/ezCGP/issues/103 Issue #103] [ReThink Transfer Learning Implementation] (assigned to me and Hemang) 
*** Will be working off of [https://github.com/ezCGP/ezCGP/tree/feature/%2398-get_running get-running] branch 
* '''Thursday Meeting:'''
** Rodd discussed with me an Hemang the problems with the Transfer learning issue ([https://github.com/ezCGP/ezCGP/issues/103 Issue #103])
*** We were whiteboard-ing solutions and different approaches
*** Collaborated with Hemang to make changes to transfer learning block ([https://github.com/ezCGP/ezCGP/pull/110 PR #110])
**** Added BlockOperators_Keras_TransferLearning for passing data through some pretrained network [Merged]
 class BlockOperators_Keras_TransferLearning(BlockOperators_Abstract):
 <nowiki> </nowiki>   <nowiki>'''</nowiki>
 <nowiki> </nowiki>   pass data through some pretrained network
 <nowiki> </nowiki>   <nowiki>'''</nowiki>
 <nowiki> </nowiki>   def __init__(self):
 <nowiki> </nowiki>       ezLogging.debug("%s-%s - Initialize BlockOperators_Keras_TransferLearning Class" % (None, None))
 <nowiki> </nowiki>       BlockOperators_Abstract.__init__(self)
 
 <nowiki> </nowiki>       modules = ['operators_TFKeras_TransferLearning']
 <nowiki> </nowiki>       self.import_operator_scripts(modules)
 
 <nowiki> </nowiki>       weight_dict = {}
 <nowiki> </nowiki>       for module in modules:
 <nowiki> </nowiki>           weight_dict.update(self.set_equal_weights(module))
 
 <nowiki> </nowiki>       self.init_from_weight_dict(weight_dict)
'''Action Items:'''
{| class="wikitable"
!'''Task'''
!'''Current Status'''
!'''Date Assigned'''
!'''Suspense Date'''
!'''Date Resolved'''
|-
|Develop Warm Start Code
|In Progress
|9/21/2020
|11/30/2020
| 11/15/2020
|-
|Transfer Learning Implementation
|In Progress
|10/5/2020
|10/30/2020
| 10/12/2020
|}

== Week 9:  October 12, 2020 ==
'''Monday Meeting:'''
* Status Reports
* Made a general outline for what we wanted the presentation to look like
** Intro ezCGP current state (Daniel)
** Code development:
*** Implementation of Code (Hemang):
*** Runs, experimental setup (Henry)
*** Expect Weaknesses/Shortcomings
** Research/Hypothesis (Ford and Bojun):
*** What the team want from papers
*** The goal, metrics the team want to collect and what we expect to see
** Future tasks (Daniel)
** Recruiting (Daniel)
** Questions (Daniel)
* I will update my slides to briefly present what ezCGP is and do future tasks
** I will also probably be answering questions, I will review everyone's slides before the presentation
'''Thursday Meeting:'''
* Work on creating the [https://docs.google.com/presentation/d/1mDjWHefrsxjaRfNSOVlTNI4f-g0Tl0ANK-P-5Z-d6bw/edit?usp=sharing presentation]
** Intro to ezCGP - Main Notes:
*** emade uses trees + DEAP
*** ezcgp is a DAG and we had to code equivalent of DEAP from scratch
*** Intro to block structure and how we redid the code last semester + over the summer.
* We reviewed everyone's slide and their speaking notes
** Discussed the hyperparameters we would use for Pace run
* Working on getting a benchmarking plan for CIFAR-10
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Develop Warm Start Code
|Complete
|9/21/2020
|11/30/2020
|11/15/2020
|-
|Midterm presentation
|Complete
|10/12/2020
|10/19/2020
|10/18/2020
|}

== Week 10: October 19, 2020 ==
[[files/Screenshot from 2020-12-03 15-36-54.png|thumb|408x408px|Introducing ezCGP for Midterm Presentation]]
'''Monday Meeting:'''
* [https://docs.google.com/presentation/d/1mDjWHefrsxjaRfNSOVlTNI4f-g0Tl0ANK-P-5Z-d6bw/edit?usp=sharing Presentations] 
** I presented my screen 
** Presented 10 slides:
*** ezCGP current state, Future Work, Recruitment, and Addressed Questions
* Listened to the other team presentations
'''Thursday Meeting :'''
* Discuss goals for the rest of the semester
* Brainstorm ideas for new members:
** Loading dataset (MNIST)
** Creating new Primitives
** We will help Rodd introduce them to stack for the first week or two (presentation)
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Develop Warm Start Code
|Complete
|9/21/2020
|11/30/2020
|11/15/2020
|-
|Prepare New Members 
|Complete
|10/19/2020
|11/02/2020
|11/02/2020
|}

== Week 11: October 26, 2020 ==
'''Monday Meeting:'''
* Status Reports
* Welcomed New Members!
** Explained how the team works
** Gave them [https://github.com/ezCGP/ezCGP/wiki/New-VIP-Student-ToDo's New VIP Student ToDo's]
*** Most of them seem to have Windows OS 
* Research Team 
** Review code and begin implementing research paper
* Implementation Team 
** Still working on fixing issues for baseline results
*** Getting Pace running
* Probably going to merge the two teams soon 
'''Thursday Meeting:'''
* Presented [https://docs.google.com/presentation/d/1HMyyie9ILQwdZ1e5jSMmVhDl_N0wOTZ8WpBCSRvk7-I/edit?usp=sharing New Member Presentation]
** New members git information requested to add them 
* Rest of the semester Plan:
** Seeding experiments (Daniel)
** CIFAR-10 experiments (Rodd and Henry)
** CV primitive testing (Hemang) [[https://github.com/ezcgp/ezcgp/issues/102 Issue #102]]
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Develop Warm Start Code
|Complete
|9/21/2020
|11/30/2020
|11/15/2020
|-
|Prepare New Members
|Complete
|10/19/2020
|11/02/2020
|11/02/2020
|}

== Week 12: November 02, 2020 ==
'''Monday Meeting:'''
* Status Reports
* The research team discussed implementation for their research work
* The implementation team still working on fixing issues for baselines
** Reviewed CV primitive [https://github.com/ezCGP/ezCGP/pull/113 PR]
* Presentation for New Members:
** Neural networks, TensorFlow
** [https://docs.google.com/presentation/d/11UVq33iR0u-7ilrL90SifMdX0cb5ACwkpRD9braMko4/edit?usp=sharing Presentation] 
'''Thursday Meeting:'''
* Plan for New Members:
** Implement primitives to run comparison tests on titanic data
** Compare emade vs ezcgp results on titanic
** Need to save dataset into a folder for datatools
* Discussed PACE setup
* Setup meeting on November 7 to discussed PACE issues
** Getting conda environment working 
** [https://docs.google.com/document/d/1fJ0ihQo8l7LGmRLYf76e0w3RjSXIYS6LtabKrxxrZNc/edit?usp=sharing Documentation]
** Had to manually install some packages (sklearn)
** Example for ezCGP problem_tensorflow_keras (need to test):
 #PBS -N ezCGP_problem_tensorflow_keras          # name of job
 #PBS -l nodes=1:ppn=4                           # resources allocated, 1 node 4 processors
 #PBS -l walltime=5:00:00                        # job will run at most 10 hours
 #PBS -l mem=14gb                          	# job requires 14gb over all nodes
 #PBS -q pace-ice                                # job is submitted to pace-ice
 #PBS -j oe                                      # output and error is combined into the same file
 #PBS -o results.out                             # output file is named gettingStarted.out
 #PBS -m abe                               	# Will send a status email based on any combination of a,b,e.
 #PBS -M hluu8@gatech.edu        
 cd ~/ezCGP                                
 echo "Started on `/bin/hostname`"               # prints name of compute node job was started on
                               			# computation starts here
 module load anaconda3
 source activate ezcgp-py
 python3 main.py -p problem_tfkeras_transferlearning -t -s 9
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Develop Warm Start Code
|Complete
|9/21/2020
|11/30/2020
|11/15/2020
|-
|PACE Setup
|Complete
|11/2/2020
|11/7/2020
|11/7/2020
|}

== Week 13: November 09, 2020 ==
'''Monday Meeting:'''
* Status Reports
* Since PACE seems to be working, PACE documentation sheet was updated
* Planning to have baseline CIFAR-10 scores done by the next meeting
** Set it to training for 2 epochs
'''Thursday Meeting:'''
* Set up a timeline for the presentation:
** Thursday 19th, build out a skeleton/outline
** Over the weekend, fill in our respective slides
** Monday 23rd have  a rough draft ready and finish filling in slides
** Monday 30th go through the final draft and make sure we are ready
** Wed Dec 2nd present
* We got 5 epochs in 8 hours
 Epoch 5/10
 6000/6000 - 2854s - loss: 2.2951 - accuracy: 0.0000e+00 - precision: 0.0000e+00 - recall: 0.0000e+00 - val_loss: 2.2943 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall: 0.0000e+00
* Barely got any reasonable individuals... We think we need to test for longer and ensure we are using GPU
* We noticed it was running slowly so we want to verify that when we run on PACE-ICE that we are training with a GPU and not CPU
** It might be an issue with the TensorFlow version installed
** Created [https://github.com/ezCGP/ezCGP/issues/115 Issue #115]
* Want to finish tests by Thanksgiving hopefully
* On November 15:
** I worked with Rodd to get individuals classes pickled [[https://github.com/ezCGP/ezCGP/commit/02ca5295f45342dad3ab73036db2937b26c109cc Commit]]
** Since the individual’s actual class is being encoded, individual pkl files are only valid for runs with unchanged block + individual definitions 
 def save_population(universe):
 <nowiki> </nowiki>   <nowiki>'''</nowiki>
 <nowiki> </nowiki>   save each individual_material as a pickle file named with it's id
 <nowiki> </nowiki>   here is how to open a pickled file:
 <nowiki> </nowiki>       from codes.genetic_material import IndividualMaterial
 <nowiki> </nowiki>       with open(indiv_file, "rb") as f:
 <nowiki> </nowiki>           indiv = pkl.load(f)
 <nowiki> </nowiki>   <nowiki>'''</nowiki>
 <nowiki> </nowiki>   ezLogging.debug("saved each individual from population for generation %i" % universe.generation)
 <nowiki> </nowiki>   for indiv in universe.population.population:
 <nowiki> </nowiki>       indiv_file = os.path.join(universe.output_folder, "gen_%04d_indiv_%s.pkl" % (universe.generation, indiv.id))
 <nowiki> </nowiki>       with open(indiv_file, "wb") as f:
 <nowiki> </nowiki>           pkl.dump(indiv, f)
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Develop Warm Start Code
|Complete
|9/21/2020
|11/30/2020
|11/15/2020
|-
|Update Visualization Code
|Complete
|11/9/2020
|11/23/2020
|11/23/2020
|}

== Week 14: November 16, 2020 ==
'''Monday Meeting:'''
* Status Reports
* New Members are still working on loading MNIST data set [[https://github.com/ezCGP/ezCGP/issues/106 Issue #106]]
* The research team working on aging evolution and Caffe & Tensorflow crossover
* Plans to continue running ezCGP trials and see if we can sort out bugs in the PACE-ICE system to get it to run
* Helped check if GPU is set up on PACE
[[files/Screenshot from 2020-12-03 19-14-11.png|thumb|367x367px|PACE-ICE documentation]]
'''Thursday Meeting:'''
* Pace-ICE seems to be working more reliably with GPU now 
** [https://github.com/ezCGP/ezCGP/wiki/PACE-ICE Documentation Updated]
** Since warm start works now, we can do consecutive runs
** We will be seeding runs from previous runs with an 8-hour runtime on PACE
** We need to make sure we have enough storage
* Working on Slides 
** People have been assigned there slides and know what visuals and talking points they need to work on  
** I need to work on explaining:
*** Genome Seeding  
*** Hyperparameters  
*** Results  
*** Analyzing Results  
*** I will try to also try to be responsible for questions since I have most of the results   
** Once we have valid individuals, I will be working on visualizing and analyzing them  
** [https://docs.google.com/presentation/d/1cbx_daOsFvMZIgBQvVnmiJBmmm-Lvha61Mfe68Ej7c8/edit Presentation]  
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Visualization Code
|Complete
|11/9/2020
|11/23/2020
|11/23/2020
|-
|Work on slides
|Complete
|11/16/2020
|11/30/2020
|11/30/2020
|}

== Week 15: November 23, 2020 ==
'''Monday Meeting:'''
* Status Reports
* I did the week report because Ford was absent
* I led the ezCGP meeting since Rodd was absent 
* There was an issue with evolution being greedy in our Pace run
** We weren't properly limiting populations so we would go from 20 individuals to 400+ individuals each generation
** There a problem where children were being produced through mating + mutating and not being removed
** We didn't finish a full single generation in the 8 hours
* We talked about the requirements and expectations for the slides 
* I got the visualization code to work with the new block + individual definitions
* I assigned a time speaking goal for each's person's slides in order to be within the constraints
* Since Thanksgiving is the day of our meeting we decided to move it to Saturday at 2 PM
[[files/Untitled Diagram (1) (1).png|center|thumb|1433x1433px|Example Individual from 11/22/2020 Pace Run for CIFAR-10]]
[[files/Pareto Front for Generation 1.png|thumb|177x177px|Pareto front for the first generation with associated AUC with points]]
[[files/Pareto front for generation 1 without points.png|thumb|177x177px|The pareto front for the first generation with AUC and without the points]]
'''Saturday Meeting:'''
* Run Pace:
** We decided to only do 20 individuals per generation because before it was taking too long to evaluate the entire population (>8 hours)
** We were having some issues with memory, but Jason gave our subteam access to a project share so now we can save an entire population
* Pace Results:
** We discussed results and analyzed the resultant Pareto Front produced by Xufei
** We check on everyone's slide progress and speaking note
* Hoa made PACE resource on [https://www.notion.so/PACE-ICE-GPU-for-Ez-CGP-8be7a2e57c6649229f36505d093952dd Notion] 
* I was working on getting the newly produced individuals to visualize
** Had to change some of the visualization dictionary structure 
** Have to load the pickle file from the runs and make sure it is the right structure 
** Then export it to draw.io 
 import visualize_individual 
 
 with open('gen_0002_indiv_seededIndiv0-16.pkl', 'rb') as f: 
 <nowiki> </nowiki>   data = pickle.load(f) 
 <nowiki> </nowiki>   visualize_individual.Visualizer().add_to_csv(data, True)
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Visualization Code
|Complete
|11/9/2020
|11/23/2020
|11/23/2020
|-
|Work on slides
|Complete
|11/16/2020
|11/30/2020
|11/30/2020
|}

== Week 16: November 30, 2020 ==
'''Monday Meeting:'''
*Status Reports
*Working on finalizing results for presentation
*We discussed that there was little change in AUC after the first generation 
**It is likely that after the first generation, the individuals only used resnet transfer learning primitive and only made small improvements
**Our population size might be one of the reasons for the lack of diversity
**Generation 9 AUC: '''0.98'''
*By analyzing the individuals from the final run, we can see that although the fitness is high there seems to be little diversity in the population.
**I created the individuals from the CIFAR-10 PACE run using the [https://github.com/ezCGP/ezCGP/blob/2019F-stable/visualize.py visualizer]  I have been updating 
**It seems that most individuals just used a passthrough followed by resent transfer learning primitive and then a fully connected layer.
**Best Individual: precision: 0.97877902, recall: 0.97475964. F1: 0.97676519508
**Researched [https://paperswithcode.com/sota/image-classification-on-cifar-10 SOTA CIFAR-10 results] for benchmark comparisons
*[[files/PPT slide I worked on.png|center|thumb|415x415px|All the AUCs for each generation within CIFAR-10 Pace Run]][[files/Untitled Diagram (3) (1).png|center|thumb|1261x1261px|Example Individuals From CIFAR-10 Pace Run (9th generation)]]
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Work on slides
|Complete
|11/16/2020
|11/30/2020
|11/30/2020
|-
|Complete Notebook
|Complete
|12/2/2020
|12/3/2020
|12/3/2020
|}

== Week 16: December 2, 2020 ==
[[files/Screenshot from 2020-12-03 19-11-56.png|thumb|539x539px|Slide from ezCGP Fall 2020 Final Presentation analyzing the results of our CIFAR-10 Pace run]]
'''Presentation Notes:'''
* [https://docs.google.com/presentation/d/1arplCjluOGjVm58LiMHV2zVwXl0GCvCsvgb2Ou7nSN8/edit#slide=id.gadbc172287_0_95 Trading team]: 
** The research paper they were comparing their results with had many inconsistencies
*** The inconsistencies were from the way the trading signal was calculated from the specified rules 
** They decided to go in their own direction due to inconsistencies
*** Developed a new training method and fitness function
** Talked about types of Technical Indicator Primitives
** Experimented with feature and stream data runs
** In the future will do larger time ranges and more granular data
* [https://docs.google.com/presentation/d/1Z8PjzaP_LjhyycpGSeXX7rIHdVYkxHzqg8vaKVEYhdU/edit#slide=id.gaec8ee0d3b_1_3 NLP]: 
** They explained their NNLearner Refresher 
*** Different Layers are primitives within EMADE’s Tree Structure
** They added new mating and mutation operators:
*** Single Point and Two Point Crossovers for NNLearner 
*** Adaptive Mutation Function
*** Added new CV Primitive (different types of thresholding)
** They attempted to use YOLO on the Chest X-Ray Dataset
*** Only some of the data had bounding box information
** Seems like most of there Chest X-Ray Results had predictions for Label 10
** They plan to test on more datasets and try out coevolution
* [https://docs.google.com/presentation/d/1cbx_daOsFvMZIgBQvVnmiJBmmm-Lvha61Mfe68Ej7c8/edit?usp=sharing ezCGP] 
** My subteam 
* [https://docs.google.com/presentation/d/1KU-tlra_DXV93JOS6NjQ5RB24Urj0-M8F99U3YsQQ70/edit Modularity Team]
** Talked about the current ARL implementation 
** Discussed different experiments for improving results:
*** Differential Fitness 
*** Alternate Selection Method 
*** Data Pair Restriction
*** Updated Selection 
** Tried to determine how useful ARL are by plotting p-value across generations
*** It seems that around generation 20 they had statistical significance results
** They also tested on MNIST and got very good results
** I thought it was interesting that they did the jump from the Titantic dataset to MNIST since that dataset types are very different
*** It might have been better to just do a large dataset of the same type in order to keep more constants in the experiments
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Presentation Day
|Complete
|12/2/2020
|12/2/2020
|12/2/2020
|-
|Complete Notebook
|Complete
|12/2/2020
|12/3/2020
|12/3/2020
|}

= '''Spring 2021''' =

== Week 1: January 25, 2021 ==
'''Monday Meeting:'''
* Continue work with ezCGP
** Decided to become '''Team Leader'''
** Notes: Remember to update subteam notebooks weekly
** Only going to be two members: Me and Hemang Rajvanshy
** Sadly we didn't more members
*** New members did not return
'''Thursday Team Meeting:'''
* We don't have too much manpower so we need to assign tasks where we will make the most individual progress
* Decided to work on 2 parallel projects
** Hemang: Implementing new primitives (recurrent neural networks/transformers)
*** More similar to transfer learning block
** Daniel: Continue CIFAR-10 experiments to identify bottlenecks in the system and fix them
*** Try to see if ezCGP frame can do better than make trivial individuals
* By next week, we will research both projects and create reasonable milestones for midpoint
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|January 25, 2021
|February 1, 2021
|January 31, 2021
|-
|Project Research
|Completed
|January 25, 2021
|February 1, 2021
|January 31, 2021
|}

== Week 2: February 1, 2021 ==
'''Monday Meeting:'''
*Mr. Rodd explained his current progress with removing unnecessary data from individuals
*Went over how to edit the current problem file to eliminate transfer learning
*I will attempt to set up Pace-Ice to trial run after I update the problem file
*Hemang updated research on transformers
**Genetic Algorithm for optimizing Recurrent Neural Network: http://aqibsaeed.github.io/2017-08-11-genetic-algorithm-for-optimizing-rnn/ 
**Lightweight GPT implementation: https://github.com/karpathy/minGPT 
**Decided to implement lightweight GPT as a primitive for image classification 
'''Thursday Team Meeting:'''
*Progress report
**Working to get current code without transfer learning tested on CIFAR-10 as a benchmark 
**Hemang talked about minGPT working and then attempting to integrate it with ezCGP 
'''Work Progress'''
* Made Issue, branch (feature/130-update-problem), [https://github.com/ezCGP/ezCGP/blob/feature/130-update-problem/problems/problem_cifar_no_transfer.py problem file] changes
* Not sure what to make the block structure… I will leave it the same as transfer learning but without the transfer learning block
* Ask Rodd if Block tfkeras eval is fine as it currently is 
* Get Pace Access (When maintenance ends)

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|February 1, 2021
|February 8, 2021
|February 7, 2021
|-
|Run Pace-Ice
|Completed
|February 1, 2021
|February 20, 2021
|February 12, 2021
|}

== Week 3: February 8, 2021 ==
'''Monday Meeting:'''
* Transformer Update:
** Hemang tested minGPT CIFAR-10 run outside of ezCGP  (https://github.com/karpathy/minGPT)
*** The model generated CIFAR-10 similar images 
*** He trained on Google Colab for 10+ hours 
'''Thursday Team Meeting:'''
* Worked to get Pace Ice working

*Was able to SSH in
*Downloaded ezCGP in pace ice 
*We tried to make .conda folder in our shared folder so that we had more space locally
*Tried to do a run problem file but would die after ~2 hours
** Likely due to memory issues
** Resources used and resultss after running:
 Rsrc Used:  cput=01:53:05,vmem=49973120kb,walltime=01:29:21,mem=14667336kb,energy_used=0

 2955 - precision: 0.7541 - recall: 0.5941 - val_loss: 1.2060- val_precision: 0.6891 - val_recall: 0.5253
* Working with Rodd to remove extra image data from individuals (related to Augmentor pipeline)
** Hopefully with reduce memory usage and make faster
*Hemang replaced normalization primitive with equalize ([https://github.com/ezCGP/ezCGP/pull/132 PR]) since normalization didn't work with pillow image formatting
** Used pillow function to perform equalization [[files/Spring 2021 Eval2.png|center|thumb|1017x1017px]]
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|February 8, 2021
|February 15, 2021
|February 14, 2021
|-
|Run Pace-Ice
|Completed
|February 1, 2021
|February 20, 2021
|February 12, 2021
|}

== Week 4: February 15, 2021 ==
'''Monday Meeting:'''
* Jason said that PACE-ICE run likely dying because I am not asking for enough resourses
** I will test by next meeting
* We tried to debug some issues the batch size issues that I was running into in my PACE run
'''Thursday Team Meeting:'''
* Asking for more resources resolved the issue of the run dying early.
* Test with transfer learning for a full run:
** The precision and recall seem pretty good but the accuracy seems off...
** I think it is using the wrong accuracy (I will look into that)
 234/234 - 8s - loss: 0.1286 - accuracy: 0.0077 - precision: 0.9644 - recall: 0.9552 - val_loss: 1.4547 - val_accuracy: 0.0261 - val_precision: 0.7209 - val_recall: 0.6990
* I tried to run ezCGP without transfer learning
** I was having issues with batch size and incompatible numpy shapes
* We did a group work session to try to debug issues
* It appears 128 batch size broke the pipeline but numbers like 48 didn't... very strange 
* I will work with Rodd to fix the issue
* Managed to a test with no transfer learning
 234/234 - 5s - loss: 0.5966 - accuracy: 2.3433e-05 - precision: 0.9073 - recall: 0.7457 - val_loss: 1.7232 - val_accuracy: 1.0016e-05 - val_precision: 0.5513 - val_recall: 0.4054
* Cherry-picked best results from generation 0 (initPop0-6) for no transfer learning
** Something is breaking is selection method...
* Would fail after 1 generation
** Unable to visualize individual because it died before then
* It seems like there some bugs with the pipeline so it good that we are finding them
* We will continue working to iron out bugs that are inhibiting our testing
* Also, Hemang added multi-channel support to normalize/equalize ([https://github.com/ezCGP/ezCGP/pull/132 PR] merged)
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|February 15, 2021
|February 22, 2021
|February 21, 2021
|-
|Get Multi-Generation Pace Run
|Completed
|February 15, 2021
|March 1, 2021
|February 25, 2021
|}

== Week 5: February 22, 2021 ==
'''Monday Meeting:'''
* Hemang decide to benchmark and fine-tune individual evaluation training times
** He will run experiments to figure out training time and batch size for each individual
** Seed architectures that are known to perform well
** Pretty much figure out if ezCGP has good hyperparameters to even detect good architecture.
* Worked with Rodd to find the error in [https://github.com/ezCGP/ezCGP/blob/feature/130-update-problem-HACK/codes/block_definitions/block_evaluate.py block_evalute] for BlockEvaluate_TFKeras that is making it die early
** Apparent the return type for the build_graph function are incorrect  
** Also, individual_evalaue was unpacking the data for the block incorrectly
'''Thursday Team Meeting (February 25):'''
* Rodd discovered a bug that increased training times
** Worked with Rodd to do a quick fix
** Bug related to pipeline wrapper and variable persistence
** The operator was being unnecessarily added to the augmentor pipeline
** Was causing runs to be lower as more unnecessary operators were being added
** Temporary fix for pipeline wrapper ([https://github.com/ezCGP/ezCGP/commit/452d03194f475db1429b632e3b9d2faf6ffbd8ae Commit Link])
* Resolved other Pipeline Bugs:
** Fixed issues with the pipeline not going to next generation with Rodd ([https://github.com/ezCGP/ezCGP/commit/c42db922abf3c2f39d2755a3b50a740c1835dc90 Link])
*** An issue with return types in the non-transfer learn block definition 
** Fixed issue with accuracy not being the categorical accuracy
** Also, I had to fix some typos in the problem file for saving the population
* Ran ezCGP without transfer learning on CIFAR 10
**8 hours of run, 7 generations   
**It seems to be overfitting... 
**Training accuracy is very high but validation is low 
**This seems to be a hyperparameter issue
***Maybe I am training for too many epochs... 
****I don't think that is the problem  
***I want to visualize the individuals to see if the model is overly complex... 
 234/234 - 7s - loss: 0.0573 - categorical_accuracy: 0.9811 - precision: 0.9833 - recall: 0.9789 - val_loss: 4.2954 - val_categorical_accuracy: 0.4552 - val_precision: 0.4639 - val_recall: 0.4467
* Hemang ran PACE without pretrained imagenet weights on transfer learning
** Essentially using Resnet architecture to see if ezCGP training parameters are sufficient for converging on CIFAR 10 with a fit individual
** Initial Run:
  234/234 - 8s - loss: 0.1108 - accuracy: 3.7828e-04 - precision: 0.9676 - recall: 0.9618 - val_loss: 1.3538 - val_accuracy: 7.3117e-04 - val_precision: 0.7209 - val_recall: 0.6968
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|February 22, 2021
|March 1, 2021
|February 28, 2021
|-
|Get Multi-Generation Pace Run
|Completed
|February 15, 2021
|March 1, 2021
|February 25, 2021
|}

== Week 6: March 1, 2021 ==
'''Monday Meeting:'''
* I asked Rodd about previous visualization and Pareto front code 
** Visualization: https://github.com/ezCGP/ezCGP/blob/2019F-stable/visualize.py
** Pareto Front: https://github.com/ezCGP/ezCGP/blob/master/post_process/plot_things.py
*** I managed to get a plot from this script but it seems like it doesn't flip the signs of fitness (fitness are current negative)
* Hemang will be working on getting more results with the recent bug fixes
** He will come up with detailed methods to analyze results and tune parameters accordingly
'''Thursday Team Meeting:'''
* From 8 hours of run, 7 generations managed to get categorical accuracy ~47%
** Visualized individual
** Updated the old script to display block structure ([https://github.com/ezCGP/ezCGP/pull/151 PR])
** Seems to be successfully adding conv2D layers, need to see why not adding dense layers
** Maybe remove some preprocessing
** Seems to be overfitting by looking at previous individuals
** [[files/Visualize Individual.png|center|thumb|1634x1634px]][[files/Individual no cifar 2.png|center|thumb|1568x1568px]]
* Tried to run some tests on transfer learning but run failed due to issues producing individuals
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|March 1, 2021
|March 8, 2021
|March 1, 2021
|-
|Visualize the Individuals
|Completed
|March 1, 2021
|March 8, 2021
|March 7, 2021
|}

== Week 7: March 8, 2021 ==
'''Monday Meeting:'''
* Discussed adding dense layers and removing preprocessing steps
* Prioritize finishing training benchmarks over dense layer experiment
* Discussed training parameters, number of individuals/epochs, etc.
* Rodd proposed automating the pbs scheduling for PACE to continue runs beyond 8-hour mark

'''Thursday Team Meeting:'''
* Work with dense layer
* I started PACE run with no transfer learning problem file with max and avg pooling
** Val accuracy is similar ~56 
** Still a bit of overfitting (high training accuracy)
* Working to add dense layers
** Some issues with shape mismatch
** Likely going to add a dense block after conv2D block size
** Right now there isn't good of a way to check shape when adding primitives
** Maybe we should just create a new block, it would be difficult to checking shapes in same block
* Issues for [https://github.com/ezCGP/ezCGP/issues/155 Max Pooling] and [https://github.com/ezCGP/ezCGP/issues/158 Dropout] created

{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|March 8, 2021
|March 15, 2021
|March 15, 2021
|-
|Add Maxpooling
|Completed
|March 8, 2021
|March 30, 2021
|March 30, 2021
|-
|Add Dropout
|Completed
|March 8, 2021
|March 30, 2021
|March 30, 2021
|-
|Work on Presentation
|Completed
|March 8, 2021
|March 22, 2021
|March 22, 2021
|}

== Week 8: March 15, 2021 ==
'''Monday Meeting:'''
* Updated on Progress
* Hemang did some work on producing training time benchmarks outside of ezCGP:
** Replicated the structure to train VGG16 with the same parameters as in ezCGP
** Checked convergence with imagenet weights and no pretrained weights on CIFAR10
** Result:
*** 20 epochs with given batch size is likely sufficient to reach convergence on this dataset with good accuracy.
*** VGG16 seems converge in around 15 epochs, but more complex architectures might need more training.
[[files/Graph of pre train weigths.png|center|thumb|868x868px]]

'''Thursday Team Meeting:'''
* Worked on Presentation
** Completed corresponding slides
** Created plot and visualization
*** Pareto fronts for no transfer learning
** Discussed new member projects
*** Improve our ability to visualize genomes
*** Research, develop, and test new mating methods for Cartesian GP
*** Reference existing CNN architectures to develop new primitives and genome seeds
*** Conv block -> dense block

* Presentation (https://docs.google.com/presentation/d/1fMtCogms23wqFeJDX-Sf56T6UzzbgvGezD7s9RCG6gY/edit?usp=sharing)
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|March 15, 2021
|March 22, 2021
|March 22, 2021
|-
|Add Maxpooling
|Completed
|March 8, 2021
|March 30, 2021
|March 30, 2021
|-
|Add Dropout
|Completed
|March 8, 2021
|March 30, 2021
|March 30, 2021
|-
|Work on Presentation
|Completed
|March 8, 2021
|March 22, 2021
|March 22, 2021
|}

== Week 9: March 22, 2021 ==
'''Monday Meeting:'''
* Presentation (https://docs.google.com/presentation/d/1fMtCogms23wqFeJDX-Sf56T6UzzbgvGezD7s9RCG6gY/edit?usp=sharing)
* Listened to presentations
* Stocks 
** Picked a new paper that is more consistent 
** Wants to expand technical indicators to match the paper
** In the future, they want to look into getting a lot more technical indicators implemented into the run
** Will look at various stocks (like penny stocks, crypto, etc.)
* Modularity
** Documentation with Sphinx for ARL implementation
** Adding Complexity to ARLs
*** Implement changes so trees can have a greater depth than one
** Database Storage
* NLP
** Focused on Kaggle's Amazon dataset and worked on analyzing the Amazon Product Reviews Dataset
** Want to expand into PyTorch functionality
* Bootcamps
** Most did a good job at data preprocessing
*** Dropped data that was either missing or not relevant
** Comparison of ML, GP, and EMADE run
* All the teams did a good job!

'''Thursday Team Meeting:'''
* Preparing for new members 
** Ensure we have introduction presentations from the previous semesters
* I am still working on adding max-pooling / dropout layers and dense layer 
* I ran into some issues with the framework not adding max-pooling even though individuals should be able to evolve to have them (aka we add the parameters and the primitive)
* We decided to use some of the same structures for our after-transfer learning block for the dense layer. Still having some issues with shape.

{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|March 22, 2021
|March 29, 2021
|March 29, 2021
|-
|Add Maxpooling
|Completed
|March 8, 2021
|March 30, 2021
|March 30, 2021
|-
|Add Dropout
|Completed
|March 8, 2021
|March 30, 2021
|March 30, 2021
|-
|}

== Week 10: March 29, 2021 ==
'''Monday Meeting:'''
* Welcome new members
* Introductions 
* Intro to ezCGP Presentation (https://docs.google.com/presentation/d/1HMyyie9ILQwdZ1e5jSMmVhDl_N0wOTZ8WpBCSRvk7-I/edit)
* Reminder of meeting time 
* Hemang made [https://github.com/ezCGP/ezCGP/pull/160 PR] with drop out primitive (not really tested)

'''Thursday Team Meeting:'''
* I managed to actually add max-pooling and drop layers!
** Commit (https://github.com/ezCGP/ezCGP/commit/699ade7c7d44d0788d599bdcb965f1ce232755e0)
** Issues with parameters not being chosen
** Ran for 50 generations with 8 Individuals 
** Got an accuracy of 68.4% (much better than 56% from before)
** Kinda surprising... Why was it so good?
** Looking at the individuals the diversity was very limited
*** After a few generations only one individual was present with small mutations
** Example of good individual:
 [[files/Example Indiivdual.png|center|thumb|1654x1654px]]
** Individuals with droppout layer also had really high loss in the beginning so were most likely to be dropped
* Ran again with 20 individuals
** A bit more diversity but still 2-4 individuals solely presented in later generations  
** Accuracy was about 56% (lower than run where we just optimized one individual...)
* Introduced stack to new members
** Will have them working on visualization of individuals, mating, and seeding existing architectures 

{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|March 29, 2021
|April 5, 2021
|April 5, 2021
|-
|Add Dense Layers
|Completed
|March 29, 2021
|April 20, 2021
|April 15, 2021
|-
|Do Dense Pace Run
|Completed
|March 29, 2021
|April 20, 2021
|April 15, 2021
|-
|Add Avg Pooling
|Completed
|March 29, 2021
|April 12, 2021
|April 7, 2021
|}

== Week 11: April 5, 2021 ==
'''Monday Meeting:'''
* Statistics Lecture
** The whole team attended
** Talked about:
*** Confidence interval 
*** Hypothesis testing
*** Using t-table

'''Thursday Team Meeting:'''
* Made small additions for experimenting:
** I added average pooling 
** Hemang hard-coded some dense layers 
** Still got similar results in both pace runs
* We analyzed why individuals usually have 4-5 nodes
** Examining all the individuals before selection seems to have varying sizes 
** Individuals with 6-8 nodes are being generated just not chosen
** Experimented with changing objective score to be loss and accuracy
* New members are working on visualization and mating
** Mating Team read ([https://link.springer.com/content/pdf/10.1007%2F978-3-319-77553-1_13.pdf A Comparative Study on Crossover in Cartesian Genetic Programming])
** Visualization Team working on:
*** Shown inactive nodes
*** [[files/EzCGP individual tree.png|center|frame|200px]]
*** Adding node number
*** Add parameter names

{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|April 5, 2021
|April 12, 2021
|April 12, 2021
|-
|Add Dense Layers
|Completed
|March 29, 2021
|April 20, 2021
|April 15, 2021
|-
|Do Dense Pace Run
|Completed
|March 29, 2021
|April 20, 2021
|April 15, 2021
|}

== Week 12: April 12, 2021 ==
'''Monday Meeting:'''
* Talked about the inactive nodes in example individuals given by visualization 
* Discussed why individuals size was only 4-5 individuals 
* Talked to visualization team on how to add parameters

'''Thursday Team Meeting:'''
* Visualization Team 
** Added parameters 
** https://github.com/ezCGP/ezCGP/commit/16a9bfe1ee93c4bab6fdc848c31799953349797c
** [[files/inactive_nodes_shown.png]]
** Why is adding images so annoying with new wiki...
** Pretty good feature for seeing inactive nodes and analyzing patterns
** Kinda weird that fitness is in the middle of inactive nodes

* Mating Team
** Finished last week's paper and now working on implementing benchmark problems (symbolic regression)
** Making their own problem files for testing different expressions

* Dense Layers
** I added dense layers!!
*** Commit (https://github.com/ezCGP/ezCGP/commit/9b8a336c647fec2b69a0b8451fcf6362a083c21c)
** [[files/Dense block.png|center|frame|200px]] 
** Individual seems pretty good  
** Best accuracy is 55%
** There seems to be an issue with the GPU building model:
*** Allocator (GPU_0_bfc) ran out of memory trying to allocate 93.97GiB (rounded to 100900274176)
*** Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_ADDRESS: an illegal memory access was encountered
** Since I was having GPU issues I was unable to do a full run
*** Sometimes an individual would die
** I managed to fix dead individual's fitness to get generations to work
*** Before out selection assumed all individuals have fitnesses populated

{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|April 12, 2021
|April 19, 2021
|April 19, 2021
|-
|Get Dense Layer Generations
|Completed
|April 12, 2021
|April 26, 2021
|April 26, 2021
|-
|Resolve GPU Memory Issue
|Completed
|April 12, 2021
|April 26, 2021
|April 26, 2021
|}

== Week 13: April 19, 2021 ==
'''Monday Meeting:'''
* Talked with visualization techniques
** Talked to new members about which files to change and what the desire feature was 
*** https://github.com/ezCGP/ezCGP/blob/2021S-BaseCodeDevelopment/codes/utilities/visualize.py
*** Issue (https://github.com/ezCGP/ezCGP/issues/163)
* It was recommended that we add primitives that take multiples inputs during stand up
** We can maybe incorporate add, subtract, multiple, and concatenate layers
** Will maybe assign to visualization team if they finish quickly

'''Thursday Team Meeting:'''
* Research primitives 
** Scraped layers used by common pre-trained networks 
** Pull layer data from files in tensorflow.keras.applications's github page
** Visualization Plot (https://drive.google.com/file/d/1r7tOgLmRnifylaTwBclGOTXpnb81L6df/view?usp=sharing) 
** Experimented with one-point crossover mating
** Created several individuals 
*** Example: (1 / (1 + np.power(data1, -4))) + (1 / (1 + np.power(data2, -4))) // Pagie1 equation
*** Individual: https://drive.google.com/file/d/10R8LHvZqb9pcCWlr1DmxYk2Ozo1lInhb/view?usp=sharing
* Dense 
** I think that capping the parameters fix the GPU issues
** Still need to test more
* Presentation 
** Working on slides
** Assigned presentables
** Visualized some individuals 
[[files/Pooling 41.png|center|frame|200px]]

{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|April 19, 2021
|April 26, 2021
|April 26, 2021
|-
|Get Dense Layer Generations
|Completed
|April 12, 2021
|April 26, 2021
|April 26, 2021
|-
|Resolve GPU Memory Issue
|Completed
|April 12, 2021
|April 26, 2021
|April 26, 2021
|}

== Week 14: April 26, 2021 ==
'''Monday Meeting:'''
* Talked about the layers produced by Kevin 
* Our Presentation: https://docs.google.com/presentation/d/1eMU46VktpHKwrQK5wQQ_oSM8ZK6Zzxky1rn5YFm27iw/edit?usp=sharing
* Visualized individuals and Pareto fronts for presentation
* Got Dense generations to work!

'''Thursday Team Meeting:'''
* Went over the presentation 
* Reviewed each slide
* Talked about how much time each person should spent on their slides 
* Commit (https://github.com/ezCGP/ezCGP/commit/0bfca8437e1f0760b0745f1cb9777d8ac2712442)

'''Final Presentations (April 30)'''
* Stocks
** Added TA-Lib primitives to EMADE
** Added new dataset
** Monte Carlo Individuals performed better than random
** Jason suggest more rigorous hypothesis testing 
* NLP
** Also focused on streamlining the testing pipeline
** Amazon Product Review Dataset
** FastText Model used for benchmarking
** Use seeding
* Modularity
** Working on ARL complexity 
** Check for validity of individuals
** Will add diversity measure in future
* Overall, great semester progress!

{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Populate Notebook
|Completed
|April 26, 2021
|May 1, 2021
|May 1, 2021
|-
|Present 
|Completed
|April 26, 2021
|April 30, 2021
|April 30, 2021
|}