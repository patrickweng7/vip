== Team Member ==
Team Member: Devesh Kakkar

Email: devesh.kakkar@gatech.edu
Cell Phone; 959-200-6217

Interests: Machine Learning, Soccer, Frisbee, Python

== October 4th, 2021 == 
'''Team Meeting Notes/Scrum Notes:'''
* Told the team about the high level steps I will take to finish the task.
* Connor W. suggested to carry the the result from the input template and put it into the data pair to be used for the nn methods file.
* We discussed the possibility of meeting up in the middle of the week to hold a working session.
'''Subteam meeting:'''
* Connor W. told us that the NN-vip branch is broken on the main Emade repo, we had two option either create a new branch and ask Dr. Zutty or work off of Connors's forked version.
* I have a to create a new pull request for the past cifar10 files.
* I updated the team about my progress, I have created changes to input schema and added a Callback which takes parameter t and trains the neural net for at max t.
'''Action Items:'''
{|class = "wikitable"
!Assignment
!Current Status
!Date Assiged
!Suspense Date
!Date Resolved
|- 
|Create Pull request (https://github.gatech.edu/cwhaley9/emade/pull/3)
|Completed
|October 8th, 2021
|October 11th, 2021
|October 8th, 2021
|- 
|Work on task for times stopping
|In-progress
|October 4th, 2021
|October 15th, 2021
|~
|}


== September 27th, 2021 == 
'''Team Meeting Notes/Scrum Notes:'''
* Told the team about the completed xml file and gen_cifar10 file.
* I couldn't make changes in the branch, so Cameron told me to create a pull request.
* Connor recommended that we should have a meeting going over the different methods and parameter relevant to Emade and the main algorithm for NN in specific.
* I attended the hour long NN bootcamp.
'''Subteam meeting:'''
* Connor W. suggested that one change that we could make would be to add a time limit to the training time of individuals based on literature that he had read.
* I needed a new task for this week and the next appropriate task would be to work on Connor W.'s new idea of training time limits.
* I found a Timed Callback in the Keras repo, its not a builtin function but someones implementation.
'''Action Items:'''
{|class = "wikitable"
!Assignment
!Current Status
!Date Assiged
!Suspense Date
!Date Resolved
|- 
|Create Pull request (https://github.gatech.edu/emade/emade/pull/198)
|Completed
|September 27th, 2021
|October 4th, 2021
|September 27th, 2021
|- 
|Look into how to stop training based on time
|Completed
|September 27th, 2021
|October 4th, 2021
|September 30th, 2021
|}


== September 20th, 2021 == 
'''Team Meeting Notes/Scrum Notes:'''
* We are going to be doing different tasks, assigned by Cameron B.
* Dr.Zutty went over the new process for adding datasets to the repository. 
* I added a research paper in our slack channel to go through and see how they define novelty, they had a nice mathematically represented way of defining novelty.
* I was assigned the task of creating a template file and integrate cifar10 into the nn-vip branch
'''Subteam meeting:'''
* I did not have the chance to work on the template but I created a gen file for cifar ten similar to the one created by Dr.Zutty.
* Cameron referenced the Supernet idea mentioned in the paper I sent it was interesting but I think it could be getting rid of the tree nature of EMADE.
* We discussed the different roadblocks we all ran into.
'''Action Items:'''
{|class = "wikitable"
!Assignment
!Current Status
!Date Assiged
!Suspense Date
!Date Resolved
|- 
|Gen Cifar 10 file
|Completed
|September 20th, 2021
|September 27th, 2021
|September 24th, 2021
|- 
|Create template file for gen_cifar10.py
|Completed
|September 20th, 2021
|September 27th, 2021
|September 26th, 2021
|}

== September 13th, 2021 == 
'''Team Meeting Notes/Scrum Notes:'''
* Self-evaluations are due tonight, 09/13/2021 - I would give myself an 89/100, one of the biggest things I can improve on is the weekly notebook updates rather than my inconsistent updating. 
'''Subteam meeting:'''
* We discussed the different roadblocks we all ran into while setting up pace ice and running Emade locally. I ran into a spc error, but Cameron W. helped me resolve that fairly quickly and I continued to set up a run on pace-ice. 
'''Action Items:'''
{|class = "wikitable"
!Assignment
!Current Status
!Date Assiged
!Suspense Date
!Date Resolved
|- 
|Complete self-evaluations
|Completed
|September 13th, 2021
|September 13th, 2021
|September 13th, 2021
|- 
|Look at test_swap method
|Completed
|September 13th, 2021
|September 20th, 2021
|September 19th, 2021
|}
== September 6th, 2021 == 
* Meetings will be at Friday at 2:00pm. 
* I could not met this first Friday due to a one time conflict, however I was updated by the team on the progress. 
* We discussed the basics of NAS and the previous work done by Cameron in regards to NLP in the previous semester.
* One of the biggest things to look at this semester will be a way to reward individual diversity and uniqueness, this will help solve problems with super individuals who dominate the Pareto frontier.
* Ran EMADE Locally after the meeting on Saturday 9/11
'''Action Items:'''
{| class="wikitable"
!Assignment 
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Meet with subteam
|Completed
|September 6th, 2021
|September 13th, 2021
|September 9th, 2021
|- 
| Reinstall EMADE for the NAS branch
| Completed
| September 6th, 2021
| September 13th, 2021
| September 10th, 2021
|- 
| Run EMADE Locally
| Completed
| September 6th, 2021
| September 13th, 2021
| September 11th, 2021
|}
== August 30th, 2021 == 
''' Team Meeting Notes: '''
* We discussed the different Subteams idea from the last meeting. 
* I am on the NAS Subteam, I looked into the basic of what is needed and tried to familiarize myself with the topic. The paper I found last week gave great definitions and was an amazing help
''' Action Items: '''
{| class="wikitable"
!Task 
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|- 
| LettuceMeet for meeting time
| Completed
| August 30th, 2021
| September 6th, 2021
| September 2nd, 2021
|}
== August 23rd, 2021 ==
''' Team Meeting Notes: '''
* In class we had a brainstorming session to come up with ideas to explore in the Subteams, two idea which stood out as novel were NAS and Interpretability.
* I found and read a research paper for the stocks team and one for the NAS team as these were my top choices, the papers were interesting but did not seem too novel.
* I think adding more than just technical indicators to the stocks team will be a huge benefit as the traditional data has time and time proved to be a better strategy over the long term.
''' Action Items:'''
{| class="wikitable"
!Task 
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Submit Sub-team Rankings

|Completed
|August 23rd, 2021
|August 29th, 2021
|August 23rd, 2021
|- 
|Brainstorm for Interesting Subteams 
|Completed
|August 23rd, 2021
|August 29th, 2021
|August 28th, 2021
|}


== April 26,2021 ==


''' Final Presentation Prep'''
*Created slides 20-23
**20 and 21 deal with the buy hold analysis
***I created the visualization and the individual that the algorithm was ran on 
***The buy-hold analysis was simple, it was just plotting the first close price and the last close price and then dividing the prices to find profits
***[https://drive.google.com/file/d/1CRd1AZvIOwQfzmFYLkgkwSB2HmHWgVij/view?usp=sharing Link to buy hold comparison example]
**22 and 23 deal with the lag function
***The lag function was the idea I came up and it similar to awarding credit on a math test for doing the correct work, but getting the wrong answer
***The profit is too reliant on price so it is good to have a conflicting evaluation which does not fully rely on price
***The lag function is too ambiguous, lag is not like a z-score or a standard deviation, which is to say it is not statistically significant
***In the future, I plan to find a way to make the lag function more statistically significant
***I also made a visualization to make it better to see.
***[https://drive.google.com/file/d/1_BJHUZ44fYxe4i8Evn6-HQG2gjw3iDvI/view?usp=sharing Link to lag function example picture]


''' Final Presentation Notes '''

'''EzCGP'''
* Repeated CIFAR-10results without transfer learning
** Augmented Architecture Search
*** Increased the set of available primitives to create
***Increased population
** increased maintainability codebase
** Found better working training parameters
* Improved Visualizations
* Create and test new ways to mating Cartesian GP
* achieved normal distribution in sized from population 
* Larger architecture perform worse
**This makes sense as the architecture gets more complicated the seeds are less responsible for the change

'''NLP'''
* Decided to go with a simpler and easier to parse dataset
* Streamlined running of EMADE for their purpose
* Trying to improve complexity through the evolution process
* They run EMADE on PACE-ICE
** Created documentation
* Standardized computational power
* Allows for multiple workers speeding up process significantly
* Run Amazon Dataset:
** Ran more generations (22) for double the time limit(16 hours)
** No limit to seeded run
*Exceeded benchmark
* Best individual from the run: 92.8% 


'''Modularity'''
* Goal: Increase the complexity of the tree and individuals generated.
* Edited ARLs to account for greater tree depth and allow imbalanced trees
* Weighting function pick best individuals 
** This function adds to each occurrence of the ARL
* Edited multiple other methods to deal with the increased depth of ARLS
* Conversion methods converting one ARL instead of multiple in one place
* Updated methods to search for the ARL subtree due to arbitrary depth they could be

''' Action Items '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Visualization for lag and buy-hold
|Completed
|April 26th, 2021
|April 30th, 2021
|April 28th, 2021
|-
|Finish lag function
|Completed
|April 26th, 2021
|April 30th, 2021
|April 27th, 2021
|-
|Final EMADE Run
|Completed
|April 26th, 2021
|April 26th, 2021
|April 26th, 2021
|-
|}


==April 19th, 2021==
'''Notes'''
*Another EMADE run this week
*Using:
**Stochastic RSI
**Aroon
**VWAP - found this indicator and so did others
**VWMA
*Another change for this run is an increased window size
*In the last run Bollinger Bands stole the show
**The best individual was: Learner(MyBollingerBand(ARG0, 2, 61, falseBool), LearnerType('DECISIONTREE_REGRESSION', None), EnsembleType('SINGLE', None)) will use this to test lag function
*Hyperparameters of EMADE might be an area of change for the next run 
*Multiple test groups could be made to optimize runs
*Remove profit percentage use cdf instead
*Profit per transaction vs. Average Profit and whether they will have different impacts
*For the metric I was developing, I have found that a Macroscopic approach will be much better
**On my first attempt, I over smoothed the data, instead of looking at the PLR already developed 
***Some of the local extrema get overlooked and many buy/sell decisions have exaggerated lag
** Code can be found here [https://colab.research.google.com/drive/1c2He92kVrGe7IZjy0lgbx3QbpoZx3IWZ?usp=sharing Colab Notebook]


''' Action Items: '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Worker in EMADE run
|Complete
|April 19th, 2021
|April 26th, 2021
|April 19th, 2021
|-
|Start the backbone of Final Presentation 
|Complete
|April 19th, 2021
|April 26th, 2021
|April 24th, 2021
|-
|Test out more things for Lag Metric 
|Complete
|April 19th, 2021
|April 26th, 2021
|April 20th, 2021
|-
|}

== April 12th, 2021==
'''Meeting Notes'''
*Measure the variability on a per stock basis
**Does the exact data contribute to the results we are getting
**Measure the impact of the seeding data

'''Subteam Notes'''
*I will be a part of the Data Analysis team
*Plan on conducting run on Thursday and using some of the new implementation 
*Would a bullish stock generate different results
*Instead of focusing on singular stocks, it would be best to optimize for a whole portfolio/all stocks
*Find a way to measure and minimize the lag from the local extrema
** I am currently implementing my own function to measure this
**It might be useful to find technical indicators with less lag 
*Find more metrics to compare individuals
**Hopefully the lag function would be a good metric
*Try to minimize the lose rather than maximize the profit
*Ran EMADE on Thursday
*Metric not done yet


''' Action Items: '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Research volumetric indicators not currently in TA-lib
|Complete
|April 12th, 2021
|April 19th, 2021
|April 18th, 2021
|-
|Start working on Lag metric
|Complete
|April 12th, 2021
|April 19th, 2021
|April 13th, 2021
|-
|}


==April 5th, 2021==

'''Stats lecture EMADE'''
*A/B testing: make a control run, change something, and then run again
*Mean: μ = ∑[x]
*Variance (deviation from mean) = σ^2 = ∑[x^2] - ∑[x]^2
**Standard Deviation is square root of variance
*T-test is good way to test observed values incase of unknown Standard Deviation
**One-tailed is comparison of the means 
**Two-tailed is mean in between two values
**n-1 degrees of freedom
**t-table holds t values
*p-value can be found from t-test
**If p < 0.05, accept our observations as good/plausible
*Welch’s t-test
**Test if both populations have equal means
**Checks if data originates from the same location
* Welch's t-test would help stocks team to compare individuals and validate results

'''Subteam Notes'''
*Stocks may not form a normal distribution 
*Individuals will be tested using the Monte Carlo approach, this will give us a standard deviation for the individuals
*Split into sub-subteams
**Literature Review and Research
**Data Analysis of EMADE runs and individuals (My team)
**Implementation of EMADE



''' Action Items: '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Execute EMADE run with everyone [https://colab.research.google.com/drive/1YyCCbvNdsNaBrMF9gh1rr9ckh1CeXw04?usp=sharing Link to the run notebook]
|Complete
|Apr 5th, 2021
|Apr 12th, 2021
|Apr 8th, 2021
|-
|Connect to SQL database and compare individuals
|Complete
|Apr 5th, 2021
|Apr 12th, 2021
|Apr 10th, 2021
|-
|}


==March 29th, 2021==
'''Meeting Notes'''
*Teams assigned
*Stocks team meets after the main group meeting and on Thursdays

'''Subteam Notes'''
*Technical Indicators are used in analysis by financial entities 
*Indicators can be used together or separately and help provide insight into buy/sell points
*EMADE handles preprocessing, finding/manipulating features, and tweaking which machine learning models to use
*EmadeDataPair class:
**Train, Test, and Target data
**Train data and Test data are EmadeData classes
*Feature data is used as input to ML
*Stream data holds raw price, close price, volume, etc.
*Each line represents window of past 20 days in each one
*Write functions to represent technical indicators
**Primitive functions (like MySMA) runs for every line in dataset, making new feature
*Primitive functions can be stacked on top of each other and compute set of features to train with regression model
*Stocks team treat regular TA's as the primitive and upon stacking them on top of each other generate more accurate buy sell decisions 

''' Action Items: '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Read stock paper
|Complete
|March 29th, 2021
|April 1st, 2021
|April 2nd, 2021
|-
|}

==March 22nd, 2021==
*Presentations for bootcamp 
*[https://wiki.vip.gatech.edu/mediawiki/index.php/Group_5 Team wiki] available here
**Presentation linked at the bottom
*We port-forwarded on a teammate's home network instead of utilizing the VPN.
*Ran for about 4 hours for a total of 37 generations
**AUC: 0.2374 
**HOF: 22
*Could have used a higher Hall of Fame if time permitted. AUC could be optimized through changing the algorithm however, this would change the environment and no-longer make it control
[[files/comparisons.png|thumb| Some comparison between the ML and EMADE and GP]]

'''Stocks (1st choice)'''
*Using Technical Indicators to predict specific stock trends and generate buy/sell signals
*Create algorithm to outperform existing seeding data
'''ezCGP (4th choice)'''
*Looking for a solution to CIFAR-10 experiments 
*Identify bottlenecks in the system to fix
*Goals: implement new primitives and hyperparameter tuning for evolution
*Gain independence from EMADE
'''NLP (2nd choice)'''
*Sentiment analysis creation with EMADE is the end close
*Attention-based bidirectional CNN-RNN Deep Model for sentiment analysis
'''Modularity (3rd choice)'''
*Based on Adaptive Representation through Learning
*EMADE already uses machine learning 
*Create reusable "blocks" within a genetic programming context 
*primitive types can be complex models


''' Action Items: '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Look into current work done by some of the teams
|Complete
|March 22nd, 2021
|March 29th, 2021
|March 27th, 2021
|-
|}

==March 17th, 2021==
*No lecture notes

'''Subteam Notes'''
*Team check-in
*Finished setting up remote SQL
*Continue working on EMADE Titanic

''' Action Items: '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Finish work on Titantic using EMADE
|Complete
|March 17th, 2021
|March 22nd, 2021
|March 20th, 2021
|-
|Finish final team presentation
|Complete
|March 17th, 2021
|March 22nd, 2021
|March 22nd, 2021
|-
|}

==March 10th, 2021==
*No lecture notes
'''Subteam Notes'''
*Continue working on assignment

''' Action Items: '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Setup EMADE to run on alternative operating system
|Complete
|March 10th, 2021
|March 17th, 2021
|March 15th, 2021
|-
|}

==March 3rd, 2021==
'''Lecture Notes'''
*Evolutionary Algorithm Engine
**Automate process of designing ML algorithms
*Run EMADE command: python src/GPFramework/launchGTMOEP.py templates/input_titanic.xml
*XML file configures the parameters used by EMADE
**First block is to configure Python for your machine
***Path to EMADE and its dependencies, in this case python
**Next block configures the database connection
**We configure the datasets containing the seeding data
***Stored as gz csv files
***Each trial is a cross-fold
**Objectives section describes what the program prioritizes 
***Weights specifies minimization (-1.0) or maximization (1.0) of the objectives
***evaluationFunction contains the names of method inside evalFunction.py used to evaluate individuals
**Evolution parameters
***Controls various hyperparameters to use for the evolutionary process
**Use -w flag to run as a worker not a master

'''Subteam Notes'''
*Zhao will host the Database
*Everyone else needs to get connected and run as a worker

''' Action Items: '''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Work on Titantic using EMADE
|Complete
|March 3rd, 2021
|March 10th, 2021
|March 9th, 2021
|-
|Set up MySQL and connect to team database
|Complete
|March 3rd, 2021
|March 10th, 2021
|March 10th, 2021
|-
|}


== February 24th, 2021 ==
'''Team Meeting Notes:'''
* Sub-team 1-3 presentation

'''Sub-team notes'''
*Went over any changes we need to make
*I ran and create another algorithm combination

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Install EMADE
|Completed
|February 24, 2021
|March 3, 2021
|March 2, 2021
|}

== February 17, 2021 ==
'''Team Meeting Notes:'''
*Direct mapping is bad as it introduces bias makes model overtrained
**Use one hot encoding changes to separate categories represented using multiple booleans, assigning integer values introduces bias
***Data can be biased just by assigning the values in a specific way
**Different sampling can be used to reduce this bias
[[files/FPRandFNR.png|thumb|Individual fitness as generations progress]]

'''Sub-team notes:'''
*Meeting 1
**Devan brought up that we should normalize the data we used
**Hua offered a formula for normalization
**The reason that formula works is it spreads out the values through 0 and 1
**We all decided to do additional testing
*Meeting 2
**Hua noticed better results with more mutation options and varAND when the number of generations is greatly increased
**Devans algorithm which was similar to the eaMuPlusLambda was better performing than mine which is similar to the eaMuCommaLambda
**David tested out some other MO selection algorithms such as SPEA2
[[files/pareto_front_devesh.png|thumb|Pareto front of FPR and FNR curves]]
[[files/generations.png|thumb| Some individual generations of the GP]]

'''Individual notes:'''
*Takes in a population and evolves it in place using an implementation of the VarOr algorithm
*Returns the optimized population and records the statistics of the evolution in the logbook
*Logbook will contain everything from number of generations,  amount of evaluations in each generation
*#Individuals with an invalid fitness are evaluated
*#Evolutionary loop begins by producing children
*#The offspring uses varOr implementation as well
*#When the generations are done, the algorithm returns a tuple with the final population, and the logbook
*Primitives used are add, subtract, multiply, sin, cos, tan


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Group meeting
|Complete
|February 17, 2021
|February 18, 2021
|February 18, 2021
|-
|Implement my algorithm
|Completed
|February 17, 2021
|February 24, 2021
|February 21, 2021
|-
|Integrate with team and prep presentation
|Completed
|February 17, 2021
|February 24, 2021
|February 24, 2021
|}

== February 10, 2021 ==
'''Team Meeting Notes:'''
*Sub-team 5: Devan, Hua, David, Dhruv, and me.
*We will be going to do the data science competition on Kaggle.
*Steps to take:
*#Clean data
*#Split data 
*#Use a model to fir data and make predictions

'''Sub-team notes:'''
*Condense Sibsp and Parch into a single boolean
*Remove unneeded data such as Name, Ticket, and Cabin
*NaN for Age and Fare are set to mean and embarked is set to 0
*Sex is set to 0 and 1
*Embarked is quantified as 1 , 2, 3
*We used cross validation to make sure our results were correct 

'''Individual notes:'''
*Research skl's classification models, other Kaggle submissions, and cross validation
*Decided to use a k nearest neighbors, I tried parameters of 5 and 10 as the tested values
*Observations:
**Changing the number of neighbors will not affect fpr as much as it effects fnr.
**Generating a cluster map is impossible due to the many dimensions 
***Trying to project onto a two dimensional space gives a map that was useless
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Group meeting
|Complete
|February 10, 2021
|February 17, 2021
|February 14, 2021
|-
|Go through skl models
|Completed
|February 10, 2021
|February 17, 2021
|February 16, 2021
|-
|Complete my model
|Completed
|February 10, 2021
|February 17, 2021
|February 16, 2021
|}


== February 3, 2021 ==
'''Notebook Rubric:'''[[files/VIP_AAD_notebook_rubric_Devesh_Kakkar.pdf]]

'''Team Meeting Notes:'''
*A singular objective is inefficient, multiple can be tested at once
*Objective completion scenarios:
**True positive - how many time we labeled a desired object as desired
**False Positive - how many time we labeled an undesired object as desired (Type 1 Error)
**True Negative - how many time we labeled a undesired object as undesired
**False Negative - how many time we labeled an desired object as undesired (Type 2 Error)
**Sensitivity rate: the rate that the algorithm is correct about positives also known as True Positive Rate
**Specificity rate: the rate that the algorithm is correct about negatives also known as True Negative Rate
**False Negative Rate: 1 - Sensitivity
**False Positive Rate: 1 - Specificity
**Objective Spaces:
***Individuals can be evaluated using different metrics such as MSE and FPR
***Multiple axes in the object space are used because of multiple objectives
***Accuracy is the distance from the goals
***Pareto Optimality:
****An individual is Pareto optimal if it is outperforming every other individual for all objectives
****Pareto individuals form the Pareto Frontier
****Selection can be driven by favoring Pareto individuals therefore reducing the area under the Pareto Frontier
'''Lab 2 Part 2 notes:'''
[[files/Lab2.2.png|thumb|Results from Lab 2 part 2]]
*Part 1 of the lab used MSE as the objective through primitive trees. In this part, MSE and size are two objectives we are trying to minimize
*We created a Pareto dominance function to evaluate one individual over the other 
*DEAP's Mu Plus Lambda Evolutionary algorithm is used on the population and we are able to generate a Pareto frontier recognize the necessity to minimize area under the curve
*As the frontier moves to left the area is reduced, to move the frontier to the left we more the individuals to the left minimize the objective on both fronts
*We then try to modify the parameters to minimize the area
*From my testing Area under the Pareto Frontier and mutation probability were correlated, when reducing the chance of mutation AUC went down as well.

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Notes from class
|Completed
|February 3, 2021
|
|February 9, 2021
|-
|Complete Lab 2 Part II
|Completed 
|February 3, 2021
|
|February 9, 2021
|-
|Complete Lab notebook rubric 
|Completed 
|February 3, 2021
|
|February 10, 2021
|}

== January 27, 2021 ==
'''Team Meeting Notes:'''
*What is Genetic Programming
**Natural selection to evolve individuals to solve problems
**DNA properties and Mating practices are used to do this
**Each individual is a gene object
**Each individual represents a function and the results of the functions are evaluated 
* Tree Representations
**Nodes are called primitives
**Each primitive represents a function
**Leaves are terminals and represent parameters
**The tree from lecture: Represents the function (3 * 4) + 1 in Pre-fix notations
***Non tree format is [(3 * 4) + 1] -> [+ (3 * 4) 1] -> [+ * 3 4 1]
**A Crossover is done by:
***Selecting two random points
***Divide the tree into two subtrees from there
***swap the sub-tree as crossover
**Mutation:
***Deleting a node
***Changing a node
***Inserting a node
**Evaluating a tree:
***Input random numbers into the function
***Measure the error between the expected and generated response 
'''Lab 2 Part 1 Notes:'''
*DEAP has the ability to hold primitives an equation representing an equation
*Individuals are trees which have branches of number and operations.
*The objective score is the error from produced value and actual value
'''Results:'''
[[files/Lab2.1.png]]


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Notes from class
|Completed 
|January 27, 2021
|February 3, 2021
|January 31, 2021
|-
|Lab assignment #2
|In Progress
|January 27, 2021
|February 3, 2021
|February 3, 2021
|}


==January 20, 2021==
'''Team Meeting Notes:'''
*Genetic Algorithms are a process in which each new generation is created through mating/mutation of individuals in the previous population, an iterative process to drive change.
**Keywords:
***Individual: One specific part of the population with different properties
***Objective: Trying to maximize or minimize a specific attribute in the population
***Fitness: Relative comparison to other individuals regarding the specific attribute
***Evaluation: A function that computes the objective of an individual
*Selection: Simulating the 'survival of the fittest' allowing the individuals most fit to pass on to the next generation 
**Fitness Proportionate: Weights the chance of being selected using fitness
**Tournament: 1 on 1 competition between individuals 
*Mating/Crossover: Combining the individuals 
**Single Point: Divide the list and combine the sets
**Double Point: Divide the list into three pieces and then combine the pieces to form new individual 
*Mutation: Changing properties randomly to allow new unforeseen properties

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Notes from class
|Completed 
|January 20, 2021
|January 27, 2021
|January 21, 2021
|-
|Install and learn Jupyter Labs Notebook
|Completed
|January 20, 2021
|January 27, 2021
|January 22, 2021
|-
|Complete One-max problem Lab
|Completed 
|January 20, 2021
|January 27, 2021
|January 26, 2021
|-
|Complete N-Queens problem Lab
|Completed 
|January 20, 2021
|January 27, 2021
|January 26, 2021
|-
|}