==Team Member==
[[files/Gabe Wang.jpg|thumb]]

Team member: Gabriel Wang

Email: gwang340@gatech.edu

Cell Phone: 321-987-8936

Interests: Machine Learning, Cooking, Baking, Weightlifting, Friendship

Subteam: [[Modularity]] (Current)

[[Automatically Defined Functions]] ([[Fall 2020 Sub-team Weekly Reports|Current Efforts page]]) (Outdated)

Team members:

[[Notebook Kevin Lin Lu|Kevin Lin Lu]]

[[Notebook Regina Ivanna Gomez Quiroz|Regina Ivanna Gomez Quiroz]]

[[Notebook Bernadette Gabrielle Santiago Bal|Bernadette Gabrielle Santiago Bal]]

[[Notebook Vincent H Huang|Vincent H Huang]]

[[Notebook Angela Young|Angela Young]]

[[Notebook Xufei Liu|Xufei Liu]]

= Spring 2019 =

==January 7, 2019==
https://vip.gatech.edu/wiki/index.php?title=Notebook_Gabriel_Qi_Wang&action=edit
'''Scrum Notes:'''
* Went over a PowerPoint describing genetic algorithms
* Completed the One Max problem with DEAP

'''Lecture Notes:'''
* Genetic algorithms are algorithms that create the next generation from mating/muting individuals until a best individual is created
* Basic process
# Randomly initialize population
# Determine fitness of population
# Repeat the following until the best individual completes the task 
## Select parents from population
## Mate individuals to create new population
## Perform mutation of population
## Determine fitness of population

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start notebook
|Completed
|January 7, 2019
|January 14, 2019
|January 7, 2019
|-
|Join slack
|Completed
|January 7, 2019
|January 14, 2019
|January 7, 2019
|-
|Complete Lab 1
|Completed
|January 7, 2019
|January 14, 2019
|January 14, 2019
|}

==January 14, 2019==

'''Scrum Notes:'''
* Data Visualization: mainly setup, potentially may split into two sub-sub-teams
* EEG: set up meeting times, data collected from Emory patients with partially paralyzed hands
* Deep learning: replacing DEAP with a different framework, using a dimensional graph instead of a tree

'''Lecture Notes:'''
* Genetic Programming
** More restrictive than GA and main shape is a tree
** Nodes are primitives
** Leaves are terminals
* Basic process
** Evaluation
** Fitness computation
** Selection
** Mating
** Mutation
* Single point crossover
** Randomly swap two points from trees
** Mainly used due to GP restrictions
* Symbolic Regression
** Based off Taylor series

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete Lab 2 Part 1
|Completed
|January 14, 2019
|January 28, 2019
|January 28, 2019
|}

==January 28, 2019==

'''Scrum Notes:'''
* Make better notebooks

'''Lecture Notes:'''
* Multiple objectives for genetic programming and algorithms
* Finding criteria for mates that will increase fitness
* Genomes
** GA -> set of values
** GP -> tree structure
* Classification Measures and Evaluation
** True Positive: True object selected
** False Positive: Wrong object selected
** True Negative: True wrong object selected
** False Negative: Wrong true object selected
** Sensitivity: True positive rate
** Specificity: True negative rate
* As long as an individual is not outperformed in every category, they are pareto-optimal
* Main purpose of multiple objectives is that there is no one "best" individual
* Different individuals that excel in different criteria will be selected for specific purposes

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete Lab 2 Part 2
|Completed
|January 28, 2019
|February 4, 2019
|February 4, 2019
|}

==February 4, 2019==

'''Scrum Notes:'''
*Stock: Newly formed, focusing on regression based models or moving average models like ARIMA. Adding new primitives. Potential interest from me.
*EEG: Still organizing and splitting data, need information from Emory.
*Deep learning: Created a tensorblock individual that can run the evolutionary evaluation method. Adding new primitives.
*Caching: Solving new docker dependencies.
*Visualization: Improve UI and get user input. Creating visualizations of parents and children relationships. Works on app, working on TV implementation
'''Team Meeting Notes:'''
* Formed a subteam with Kang Shin, Cedric Chen, and Bek Hovakimian
* Created a slack for communication
* Plan on finish the model by February 10th and sharing results to form pareto front

'''Lecture Notes:'''
* Went over the Titanic Kaggle example

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete Lab 3 Titanic Example
|Completed
|February 4, 2019
|February 11, 2019
|February 11, 2019
|-
|Join subteam slack
|Completed
|February 4, 2019
|February 11, 2019
|February 4, 2019
|}

==February 9, 2019==

'''Progress made:'''
* Tested a few different models from the example and scikit-learn
* Cleaned and manipulated the data based on my judgement
* Linear model performed fairly well, but neural network results were interesting
* May want to test different parameters in the future
* Submitted various models to Kaggle, selected the best score

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete Lab 3 Titanic Example
|Completed
|February 4, 2019
|February 11, 2019
|February 11, 2019
|-
|Submit predictions to Kaggle to receive score
|Completed
|February 4, 2019
|February 11, 2019
|February 9, 2019
|-
|Submit score to Canvas
|Completed
|February 4, 2019
|February 11, 2019
|February 9, 2019
|-
|Create Pareto front and discuss with subteam
|Completed
|February 4, 2019
|February 11, 2019
|February 11, 2019
|}

==February 11, 2019==

'''Scrum Notes:'''
* Deep Learning: Adding new primitives, hoping to run in main.py, so the entire process is completed
* Stock: AR and ARIMA primitives added, discuss parameters and add more primitives
* Caching: Merge launchGTMOEP with grid engine
* Visualization: Have users test UI, add more visualizations for parents and mutations
* EEG: Developing seeds based on new dataset, more data collection in March
'''Team Meeting Notes:'''
* Same subteam as before
* Use GP for Titanic problem

'''Lecture Notes:'''
*  Build off Titanic problem using GP
*  Work day with group

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete Lab 4 Titanic GP
|Completed
|February 11, 2019
|February 18, 2019
|February 18, 2019
|}

==February 18, 2019==

'''Scrum Notes:'''
* Deep Learning: Functionality to feed data in certain sized increments
* Stock: Pushed changes and added primitives, want to implement remaining classical primitives
* Caching: Removed slurm, machine configuration issues
* Visualization: Visualization for time used evaluating individuals
* EEG: Implement new primitives, such as wavelet
'''Team Meeting Notes:'''
* Discuss with each other if there are installation issues

'''Lecture Notes:'''
*  Installation session for EMADE

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Install and run EMADE
|Completed
|February 18, 2019
|February 25, 2019
|February 22, 2019
|}

==February 22, 2019==

'''Help Desk:'''

'''Progress made:'''
* Had some trouble with EMADE installation
* Went to help desk
* EMADE properly installed and running

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Install and run EMADE
|Completed
|February 18, 2019
|February 25, 2019
|February 22, 2019
|-
|Connect to teammates' servers
|In Progress
|February 18, 2019
|March 4, 2019
|N/A
|-
|Solve Titanic problem with EMADE
|Completed
|February 18, 2019
|March 4, 2019
|March 11, 2019
|}

==February 25, 2019==

'''Scrum Notes:'''
* Deep Learning: Can run the entire evolutionary process
* Stock: Setup Google cloud instance
* Caching: Began benchmarking
* Visualization: Testing ancestry fork of individuals
* EEG: Put seeds into EMADE
'''Team Meeting Notes:'''
* Attempt to fix teammate's EMADE issues

'''Lecture Notes:'''
*  Installation session for EMADE
*  Report bugs or issues with EMADE during installation

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Help teammates install and run EMADE
|Completed
|February 25, 2019
|March 4, 2019
|March 4, 2019
|-
|Connect to teammates' servers
|In Progress
|February 18, 2019
|March 4, 2019
|N/A
|}

==March 4, 2019==

'''Scrum Notes:'''
* Deep Learning: Ensured mutation is working as expected
* Stock: Ran code on Google cloud
* Caching: Run stream data
* Visualization: More detailed Google cloud guide
* EEG: Collected new data 
'''Team Meeting Notes:'''
* Discuss plans for presentation next week
* Continue to try and fix server connection issue

'''Lecture Notes:'''
*  Work day for presentations

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Connect to teammates' servers
|In Progress
|February 18, 2019
|March 4, 2019
|N/A
|-
|Create final presentation
|Completed
|March 4, 2019
|March 11, 2019
|March 11, 2019
|}

==March 7, 2019==
'''Help Desk:'''
* Messaged James and Jason about server connection issues
* Issue could not be resolved
* Error message: (2006, “Can’t connect to MySQL server on ‘IP’ (60)“) (Background on this error at: <nowiki>http://sqlalche.me/e/e3q8</nowiki>)

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Connect to teammates' servers
|In Progress
|February 18, 2019
|March 4, 2019
|N/A
|-
|Create final presentation
|Completed
|March 4, 2019
|March 11, 2019
|March 11, 2019
|}

==March 11, 2019==
'''''<u>Presentation Day</u>'''''
* Note: Had to leave early due to a midterm
* Presentation link: https://docs.google.com/presentation/d/1_0pFJ9jPmW7f43jxSMH0T_yPCV3Kx0zAAE0is3Swx8g/edit?usp=sharing
'''Team presentations:'''
* Caching: Focuses on the deep inner workings of EMADE
* Visualization: Visualization for the results of EMADE
'''First Semester Team Notes:'''
* Fix pareto front visualizations
* Include information about individuals and trends among individuals

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix pareto front visualizations
|Completed
|March 11, 2019
|March 18, 2019
|March 13, 2019
|-
|Discuss individuals
|Completed
|March 11, 2019
|March 18, 2019
|March 13, 2019
|}

==March 13, 2019==
'''Help Desk:'''
* Messaged Anthony from the Viz team for their visualization tools
* Ran visualization tools on data to correct previous errors
* [[files/ParetoFrontGroup4Pres.png]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix pareto front visualizations
|Completed
|March 11, 2019
|March 18, 2019
|March 18, 2019
|-
|Discuss individuals
|Completed
|March 11, 2019
|March 18, 2019
|March 18, 2019
|-
|Think about which sub-team to join
|Completed
|March 11, 2019
|March 25, 2019
|March 25, 2019
|}

==March 18, 2019==
Spring break

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Think about which sub-team to join
|Completed
|March 11, 2019
|March 25, 2019
|March 25, 2019
|}

==March 25, 2019==
''Joined visualization sub-team''

'''Scrum Notes:'''
* All teams catch up after spring break
* Get first semester students up to date with projects
'''Team Meeting Notes:'''
* Installed and ran EMADE viz repository
* Got familiarized with the code base
* Think of tasks to try and complete

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Install and run EMADE Viz
|Completed
|March 25, 2019
|March 25, 2019
|March 25, 2019
|}

==March 27, 2019==
''Note: Not present due to time conflicts''

'''Team Meeting Notes:'''
* Data Storage to minimize database queries- Nicole & Beck
* Emade metadata- Jeff
* Graph coloring- Michael
* Hereditary visualization-Will
* Merge our branches - Suraj & Sierra
* User studies - Anthony & Carissa

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Think of tasks to complete
|Completed
|March 25, 2019
|April 1, 2019
|April 1, 2019
|}

==April 1, 2019==
'''Scrum Notes:'''
* Deep Learning: Adding deep learning primitives and functionality
* Stock: Fixed HWES implementation
* Caching: Getting new members to fix image data
* Visualization: New login screen and graphs
* EEG: Planned with first semester students
'''Team Meeting Notes:'''
*  Got caught up from last meeting 
*  Work with Bek and Nicole with pickle caching 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Pickle Caching
|Completed
|April 1, 2019
| -
|April 14, 2019
|}

==April 3, 2019==
''Note: Not present due to time conflicts''

'''Team Meeting Notes:'''
* Anthony - Go through user study feedback and fix stuff
* Carissa - Work on segregating generational from aggregate view
* Jeff - Error checking for empty meta table, fixing auc
* Michael - tinker with color palette a bit, more robust tree parsing
* Sierra - Question mark tooltip
* Suraj - UI updates
* Will - Working on hierarchy visualization

*  Me: Work with Bek and Nicole with pickle caching, reduce calls to database 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Pickle Caching
|Completed
|April 1, 2019
| -
|April 14, 2019
|}

==April 8, 2019==
'''Scrum Notes:'''
* Deep Learning: Two subteams completed their tasks
* Stock: New data parser for training data sets
* Caching: Get new members to read data and get caught up
* Visualization: Hereditary visualizations in progress
* EEG: Four new primitives
'''Team Meeting Notes:'''
*  Work with Bek and Nicole with pickle caching 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Pickle Caching
|Completed
|April 1, 2019
| -
|April 14, 2019
|}

==April 10, 2019==
''Note: Not present due to time conflicts''

'''Team Meeting Notes:'''
* Anthony - finish implementing changes from the user study, export graph pictures
* Sierra - add a specific tooltip icon
* Jeff and Suraj - XML upload functionality and trying other data sources
* Michael and Will - Hierarchy visualization (fixing SQL logging errors)

*  Me: Work with Bek and Nicole with pickle caching, reduce calls to database 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Pickle Caching
|Completed
|April 1, 2019
| -
|April 14, 2019
|}

==April 14, 2019==
'''Team Meeting:'''
*  Worked with Bek and Nicole to finish pickle caching 
*  Pickle caching complete for pareto front for all generations 
*  Will be timed and compared efficiency-wise 
*  Planned pickle caching for recent pareto front for most recent generation 
*  Sent in a pull request 
*  [[files/VIPChanges.png]] 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Recent Pareto Front Caching
|In Progress
|April 14, 2019
|April 22, 2019
| -
|}

==April 15, 2019==
'''Scrum Notes:'''
* Deep Learning: Update framework and enabled regression 
* Stock: Created different models for different networks
* Caching: Collecting statistics and finding better cache invalidation methods 
* Visualization: Tool tips and UI clarity changes
* EEG: Final validations and required primitives 
'''Team Meeting Notes:'''
* 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare for final presentations
|In Progress
|April 15, 2019
|April 22, 2019
|April 22, 2019
|}

==April 22, 2019==
'''Presentation Day:'''
Link to presentation: https://drive.google.com/open?id=1zlmRR45vRG40iu5HKsqU_W2MrBFHMh5DDD1gEG_XOBk

I believe I deserve an A for this class, because I have done the work that was expected of me and documented it.

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Finish Notebook
|Completed
|April 24, 2019
|April 24, 2019
|April 24, 2019
|}




==Labs==

===Lab 1 - Genetic Algorithms with DEAP:===

*'''One Max Problem:'''
**Code works as intended, everything runs correctly
**Simple evaluation which returns the sum of integers, so individuals with more 1s will have a higher fitness and the maximum scores is 100
**The best individual may not always have a score of 100 due to the initial state or mating/mutation process 
**https://github.com/gabriel-q-wang/geneticProgrammingLabs/blob/master/oneMax.ipynb 

*'''N Queens Problem:'''
**Problem is to put N queens on the board in such a way that no queen can take another queen
**Evaluation function was manipulated
**Partially matched crossover method used for mating
**Created and adjusted a new mutation function
**https://github.com/gabriel-q-wang/geneticProgrammingLabs/blob/master/nQueens.ipynb
**[[files/NQueensD.png]]

===Lab 2 - Genetic Programming and Multi-Objective Optimization:===

*'''Symbolic Regression:'''
**Individuals represented in a tree instead of a list, most common data structure used in GP
**GP is finding the best combination of primitives to get a minimum or maximum, more objective focused
**Various GP mutations are used in the evolutionary algorithm
**Results can be changed depending on parameters and primitives
**Added two new primitives (sin and positive)
**Added new GP mutation 
**https://github.com/gabriel-q-wang/geneticProgrammingLabs/blob/master/Symbolic%20Regression.ipynb 
**[[files/NoChangesReg.png|Fitness over Generations graph for default primitives in Lab2]]
***Fitness over Generations graph for default primitives
**[[files/ChangedReg.png|Fitness over Generations graph with new primitives and insert mutation in Lab2]]
***Fitness over Generations graph with new primitives and insert mutation

*'''Multi-Objective Genetic Programming:'''
**Introduces pareto dominance functions
**No individual is inherently better than another unless it is superior in every category
**Evolutionary process tries to optimize both objectives
**Pareto front shows the individuals with very weak desirability
**The lower the area under the curve of the pareto front, the better the performance
**Manipulated primitives in order to lower area under the curve by more than 25%
**https://github.com/gabriel-q-wang/geneticProgrammingLabs/blob/master/Multi-Objective.ipynb

*'''Default Primitives'''
**[[files/DefObjSpa.png]]
**[[files/DefGenFit.png]]
***Best individual is: negative(cos(multiply(add(cos(sin(cos(sin(cos(tan(x)))))), cos(x)), tan(x)))) with fitness: (0.2786133308027132, 15.0)
**[[files/DefParFro.png]]
***Pareto Front Area Under Curve: 2.3841416372199005


*'''Edited Primitives'''
**Removed add, subtract, multiply, negative primitives
*[[files/ChangedObjSpace.png]]
*[[files/ChangedGenFit.png]]
***Best individual is: sin(sin(sin(sin(sin(sin(sin(sin(sin(sin(sin(sin(sin(sin(sin(sin(sin(x))))))))))))))))) with fitness: (0.8520057573415855, 18.0)
*[[files/ChangedParFro.png]]
***Pareto Front Area Under Curve: 1.0982901691790423

===Lab 3 - Titanic Example from Kaggle:===
* https://github.com/gabriel-q-wang/geneticProgrammingLabs/blob/master/GabeW-Titanic%20Example.ipynb
* Based off provided example, Name, Ticket, and Cabin columns were dropped
* Used the entire set of training data instead of just a third
* NaN values were replaced with averages/most common values for the columns, adjustments made to specific categories
** Age: Replaced with NaN with mean, and made age brackets
** Fare: Replaced with NaN mean
** Embarked: Replaced with NaN with mode, and replaced with numeric values for location
** Sex: Replaced with 0 for male, 1 for female
** Pclass: Replaced with exponential values in magnitudes of 10
* Created new features
** Family: Based off SibSp and Parch added together and squared
** Wealth-Age-Fare "Ratio" : Values produced by multiplying Pclass and fare dividing to age, then new values assigned exponentially
* Used sklearn decision tree classifier for the predictions
* Decision Tree Classifier testing score: 0.7904869762174406
* Kaggle score: 0.76555
* Confusion matrix:  
{| class="wikitable"
|-
| True Positive (TP): 250 
| False Negative (FN): 88
|-
| False Positive (FP): 97
| True Negative (TN): 488 
|}
*Link to sub-team page: https://vip.gatech.edu/wiki/index.php/Bootcamp_Sub-team_Spring_2019

===Lab 4 - Titanic with GP:===
* https://github.com/gabriel-q-wang/geneticProgrammingLabs/blob/master/GabeW_GP_Titanic.ipynb
* Based off previous lab
* Used same data cleaning methods
* Used GP as the training method
* Had minor issues, may want to revisit in the future
* Results were roughly the same as the previous lab
* May want to test different data classifications
* Kaggle score: 0.76555
* Confusion matrix:  
{| class="wikitable"
|-
| True Positive (TP): 240 
| False Negative (FN): 94
|-
| False Positive (FP): 102
| True Negative (TN): 487 
|}

= Fall 2019 =
*Link to sub-team page: [https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions]
*Link to the sub-team repo: https://github.gatech.edu/jye72/emade

==August 19, 2019==

'''Scrum Notes:'''
* General Meeting
* Discussed possible subteams
* Joined the Automatically Defined Functions subteam
* Current objective is to read more papers on adfs, understand how EMADE uses them, and how DEAP implements them

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start notebook
|Completed
|August 19, 2019
|September 2, 2019
|September 2, 2019
|-
|Join slack channel
|Completed
|August 19, 2019
|August 19, 2019
|August 19, 2019
|-
|Read papers about adfs
|Completed
|August 19, 2019
|August 22, 2019
|August 21, 2019
|}

==August 21, 2019==

'''Scrum Notes:'''
* Self Work
* Went over some papers discussing adfs and frequent subgraphs
* The hope is that our adfs will be frequent subtrees found in individuals
* Links to papers
** https://link.springer.com/content/pdf/10.1023/A:1021726221443.pdf
*** Summary: Used an Apriori based algorithm. G and the same links between pairs of nodes as in G “support”, “confidence” and an “association rule” for induced subgraphs are defined as  follows.  sup(G) = number of transactions including an induced subgraph G  total number of transactions ,  sup(B ⇒ H) = sup(B ∪ H), conf(B ⇒ H) = sup(B ∪ H)  sup(B) ,  where B and H are induced subgraphs of some graph transactions in the given data, and  B ∪ H is the graph constituted by the unions of the sets of nodes and the sets of links  involved in B and H. B ⇒ H indicates that H is included in a graph transaction under the  confidence con f (B ⇒ H) if B is included in it.  They provide threshold  levels where the mined induced subgraphs and their association rules must have higher  support and confidence values. We call the graph whose frequency exceeds the minimum  support as a “frequent induced subgraph”. Should be similar to what we want to find.
** http://glaros.dtc.umn.edu/gkhome/node/163
*** Summary: An alternate way of modeling datasets using a graph to model the database objects. Presents a computationally efficient algorithm for finding all frequent subgraphs in large graph databases, but involves storing a lot of data from the object that we may not have.
** https://www.ncbi.nlm.nih.gov/pubmed/18238167
*** Summary: Using genetic algorithms to find frequent subgraphs. Had a faster convergence rate, but may be overly complex for this problem. Nested genetic operations seem like a bad idea to me personally. But might be interesting to experiment with in the future.
** http://www.cs.cmu.edu/~christos/PUBLICATIONS/kdd06CePS.pdf
*** Summary: Slightly different since they focus on center-piece graphs, as in finding the most important node. May be an interesting problem to look at, but might not be what we need or want right now.

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start notebook
|Completed
|August 19, 2019
|September 2, 2019
|September 2, 2019
|-
|Review EMADE source code
|Completed
|August 21, 2019
|August 27, 2019
|August 26, 2019
|-
|Read papers about adfs
|Completed
|August 21, 2019
|August 27, 2019
|August 26, 2019
|}

==August 22, 2019==

'''Scrum Notes:'''
* Subteam Meeting
* Discussed what our goals are for the semester
* Discussed why ADFs should improve EMADE
* Brainstormed ideas for potential implementation details
* https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start notebook
|Completed
|August 19, 2019
|September 2, 2019
|September 2, 2019
|-
|Review EMADE source code
|Completed
|August 22, 2019
|August 26, 2019
|August 26, 2019
|-
|Read papers about adfs
|Completed
|August 22, 2019
|August 26, 2019
|August 26, 2019
|}

==August 26, 2019==

'''Scrum Notes:'''
* General Meeting
* Discussed ideas about how to improve EMADE's implementation of adfs
* Need to do more research to get a better understanding of adfs
* Our preconceived definition is not the same as traditional adfs
* May run into issues with hashing and individuals as a global adf pool gets updates and deleted

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start notebook
|Completed
|August 19, 2019
|September 2, 2019
|September 2, 2019
|-
|Review EMADE source code
|Completed
|August 21, 2019
|August 27, 2019
|August 26, 2019
|-
|Read papers about adfs
|Completed
|August 26, 2019
|September 5, 2019
|September 4, 2019
|}

==August 28, 2019==

'''Scrum Notes:'''
* Self Work
* Went over EMADE and DEAP source code
* Found some more articles on adfs
* In particular, an article on Co-evolving adfs was of interest to me
** https://www.researchgate.net/publication/229046942_Co-evolutionary_automatically_defined_functions_in_genetic_programming
** Summary: Co-evolving adfs had better results and converged faster. More importantly, the paper describes how to evaluate adfs, through swapping candidate ADFs and reevaluating the individual. It also answered the question of selecting adfs, where we grab a subtree of evaluated individuals with high finesses using an elitism approach.

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start notebook
|Completed
|August 19, 2019
|September 2, 2019
|September 2, 2019
|-
|Read papers about adfs
|Completed
|August 26, 2019
|September 5, 2019
|August 28, 2019
|-
|Review EMADE source code
|Completed
|August 26, 2019
|September 5, 2019
|August 28, 2019
|}

==August 29, 2019==

'''Scrum Notes:'''
* Subteam Meeting
* Discussed the co-evolving ADF paper
* Realigned some of our definitions and ideas about adfs
* Decided to use a data-mining/frequency approach to adfs instead of the traditional definition
* Current plan is to use an Apriori-based graph algorithm, since most papers did something similar
* https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start notebook
|Completed
|August 19, 2019
|September 2, 2019
|September 2, 2019
|-
|Review EMADE source code
|Completed
|August 29, 2019
|September 5, 2019
| September 4, 2019
|-
|Read papers about adfs
|Completed
|August 29, 2019
|September 5, 2019
| September 4, 2019
|}

==September 4, 2019==

'''Scrum Notes:'''
* Self Work
* Explore Apriori
* Generally used for sets, not trees/graphs
* Most papers used it as a basis, but it's difficult to find source code
* Will basically create associations between objects if they are seen above a certain frequency confidence
* https://www.hackerearth.com/blog/developers/beginners-tutorial-apriori-algorithm-data-mining-r-implementation/

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Research existing python libraries
|Completed
|August 29, 2019
|September 5, 2019
|September 4, 2019
|-
|Review EMADE source code
|Completed
|August 29, 2019
|September 5, 2019
| September 4, 2019
|-
|Read papers about adfs
|Completed
|August 29, 2019
|September 5, 2019
| September 4, 2019
|}

==September 5, 2019==

'''Scrum Notes:'''
* Subteam Meeting
* Discussed more implementation details of what we want to do with ADFs
* Implement a dummy algorithm that returns a random subtree as a sample ADF candidate
* Research subtree counting, compile papers and notes on the subject
* https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Research existing python libraries
|Completed
|September 5, 2019
|September 12, 2019
|September 12, 2019
|-
|Research Apriori
|Completed
|September 5, 2019
|September 12, 2019
| September 12, 2019
|-
|Read papers about adfs
|Completed
|September 5, 2019
|September 12, 2019
| September 12, 2019
|}

==September 9, 2019==

'''Scrum Notes:'''
* General Meeting
* Discussed running Apriori on the population
* Discussed more implementation details
* Hope to be completed by Thursday

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Research existing python libraries
|Completed
|September 5, 2019
|September 12, 2019
|September 12, 2019
|-
|Research Apriori
|Completed
|September 5, 2019
|September 12, 2019
| September 12, 2019
|-
|Read papers about adfs
|Completed
|September 5, 2019
|September 12, 2019
| September 12, 2019
|}

==September 11, 2019==

'''Scrum Notes:'''
* Self Work
* Explore Apriori
* http://rasbt.github.io/mlxtend/user_guide/frequent_patterns/apriori/
* May use mlextend library, depending if it fits our needs
* May need pandas
* Possibly use an adjacency matrix as the dataframe to leverage the library

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Research existing python libraries
|Completed
|September 5, 2019
|September 12, 2019
|September 12, 2019
|-
|Research Apriori
|Completed
|September 5, 2019
|September 12, 2019
| September 12, 2019
|-
|Read papers about adfs
|Completed
|September 5, 2019
|September 12, 2019
| September 12, 2019
|}

==September 12, 2019==

'''Scrum Notes:'''
* Subteam Meeting
* Discussed Apriori and how we could leverage it
* Looked into libraries that can help us with Apriori
* Having some trouble maintaining the tree structure while running Apriori
* Came up with a possible idea of making new individuals from frequently occurring patterns in individuals
* T-Priori: [[T-Priori|https://vip.gatech.edu/wiki/index.php/T-Priori]]
* https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start implementing dummy algo
|Completed
|September 12, 2019
|September 19, 2019
|September 19, 2019
|-
|Review EMADE source code
|Completed
|September 12, 2019
|September 19, 2019
| September 19, 2019
|-
|Experiment with existing libraries
|Completed
|September 12, 2019
|September 19, 2019
| September 19, 2019
|}

==September 13, 2019==

'''Scrum Notes:'''
* Self Work
* Met with the Bloat team to discuss traversing DEAP/EMADE tree structure
* They are doing something similar to loop for bloat
* Main functionality is searchSubtree() function from DEAP
* All individuals are a list of primitives stored depth-first

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start implementing dummy algo
|Completed
|September 12, 2019
|September 19, 2019
|September 19, 2019
|-
|Review EMADE source code
|Completed
|September 12, 2019
|September 19, 2019
| September 19, 2019
|-
|Experiment with existing libraries
|Completed
|September 12, 2019
|September 19, 2019
| September 19, 2019
|}


==September 16, 2019==

'''Scrum Notes:'''
* General Meeting
* Realized Apriori might not be the ideal solution
* Since Apriori is normally run on unordered sets, it does not translate as well for trees
* While many papers use Apriori-based graph algorithms, many do not account for order
* This doesn't work well for EMADE since all the primitives take in data at specific indices
* For now just rely on one iteration of apriori to count the frequency of connections
* https://github.gatech.edu/jye72/emade/tree/dummy_apriori

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start implementing dummy algo
|Completed
|September 12, 2019
|September 19, 2019
|September 19, 2019
|-
|Review EMADE source code
|Completed
|September 12, 2019
|September 19, 2019
| September 19, 2019
|-
|
|
|
|
| 
|}

==September 19, 2019==

'''Scrum Notes:'''
* Subteam Meeting
* Quick meeting to discuss continued tasks from last week
* Went over the the data storage format with Aaron
* https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start implementing dummy algo
|Completed
|September 19, 2019
|September 26, 2019
|September 26, 2019
|-
|Review EMADE source code
|Completed
|September 19, 2019
|September 26, 2019
| September 26, 2019
|-
|
|
|
|
| 
|}

==September 20, 2019==

'''Scrum Notes:'''
* Self Work
* Made quick changes to current algorithm
* Fixed to better work with Aaron's expectations and code

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start implementing dummy algo
|Completed
|September 19, 2019
|September 26, 2019
|September 26, 2019
|-
|Review EMADE source code
|Completed
|September 19, 2019
|September 26, 2019
| September 26, 2019
|-
|
|
|
|
| 
|}

==September 23, 2019==

'''Scrum Notes:'''
* General Meeting
* Again ran into trouble maintaining the tree structure 
* searchSubtree() probably isn't what we want since it doesn't account for the parent & child relationships
* Looked over Jason's code for converting a list into a tree
* Do some exploring into the zss python library for list to tree functionality
[[files/List to tree.png|thumb|Jason's code for list to tree]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start implementing dummy algo
|Completed
|September 19, 2019
|September 26, 2019
|September 26, 2019
|-
|Review EMADE source code
|Completed
|September 19, 2019
|September 26, 2019
| September 26, 2019
|-
|
|
|
|
| 
|}

==September 25, 2019==

'''Scrum Notes:'''
* Self Work
* Not really a fan of Jason's code, a lot of hard coding and involves a separate library
* Maybe can be improved for the future, but for now doesn't seem needed
* Implemented a basic tree traversal that looks specifically at leaf nodes and their parents
* Planned to improve by looking over all subtrees in the future
* https://github.gatech.edu/jye72/emade/tree/dummy_apriori
[[files/Adf-dummy.png|thumb|Current Dummy Algorithm to traverse the population]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start implementing dummy algo
|Completed
|September 19, 2019
|September 26, 2019
|September 26, 2019
|-
|Review EMADE source code
|Completed
|September 19, 2019
|September 26, 2019
| September 26, 2019
|-
|
|
|
|
| 
|}

==September 26, 2019==

'''Scrum Notes:'''
* Subteam Meeting
* Discussed the currently implemented dummy algorithm
* Talked about improvements for the future algorithm
* Tested our code on EMADE, fixed some errors
* Set up some goals before the mid-semester
* https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Test Subtree Traversal
|Completed
|September 26, 2019
|October 3, 2019
| October 7, 2019
|-
|Improve Subtree Traversal
|Completed
|September 26, 2019
|October 3, 2019
| October 10, 2019
|-
|
|
|
|
| 
|}

==September 30, 2019==

'''Scrum Notes:'''
* General Meeting
* Bloat has a similar tree traversal method, connect with them to compare
* Bloat's method doesn't really care about the parent child relationship
* Mainly depends on DEAP's searchSubtree() method
* Probably not what we're going for
* Will reconnect once we get to evaluation and contraction

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Midterm Evaluation
|Completed
|September 30, 2019
|October 4, 2019
| October 4, 2019
|-
|Test Subtree Traversal
|Completed
|September 26, 2019
|October 3, 2019
| October 7, 2019
|-
|Improve Subtree Traversal
|Completed
|September 26, 2019
|October 3, 2019
| October 10, 2019
|}

==October 1, 2019==

'''Scrum Notes:'''
* Self Work
* Looked into the outputs of the algorithm
* Passed off to Aaron to confirm his code can take in the data I parse
* Main concern of mine is the size of the adf_candidate pool, since we are not evaluating anything at the moment
* Currently just taking every possible connection as a candidate
* https://github.gatech.edu/jye72/emade/tree/dummy_apriori
[[files/Adf-dummy-output.png|thumb|Dummy Algorithm's Output]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Midterm Evaluation
|Completed
|September 30, 2019
|October 4, 2019
| October 4, 2019
|-
|Test Subtree Traversal
|Completed
|September 26, 2019
|October 3, 2019
| October 7, 2019
|-
|Improve Subtree Traversal
|Completed
|September 26, 2019
|October 3, 2019
| October 10, 2019
|}

==October 3, 2019==

'''Scrum Notes:'''
* Subteam meeting
* Merged my branch with Aaron's
* Need to change how the dictionary stores the primitives, by name instead of string representation
* Started implementing a stack based traversal previously discussed to replace the current algorithm
* Hope is that larger adfs can be formed though eventual nesting

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Midterm Evaluation
|Completed
|September 30, 2019
|October 4, 2019
| October 4, 2019
|-
|Test Subtree Traversal
|Completed
|September 26, 2019
|October 7, 2019
| October 7, 2019
|-
|Improve Subtree Traversal
|Completed
|September 26, 2019
|October 7, 2019
| October 10, 2019
|}

==October 7, 2019==

'''Scrum Notes:'''
* General meeting
* Tested subtree traversal, works as intended
* Minor change from objects to primitive string representation to work better with Aaron's code
* Continue working on improved traversal algorithm

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|Test Subtree Traversal
|Completed
|September 26, 2019
|October 7, 2019
| October 7, 2019
|-
|Improve Subtree Traversal
|Completed
|September 26, 2019
|October 10, 2019
| October 10, 2019
|}

==October 10, 2019==

'''Scrum Notes:'''
* Subteam meeting
* Finished traversal algorithm 
* Doing further testing to prepare for better pass off to Aaron 
* https://github.gatech.edu/jye72/emade/commit/428b01eabcf3d2b19bfa26a687af2f30759f3952 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|Test Subtree Traversal
|Completed
|October 10, 2019
|October 17, 2019
| October 17, 2019
|-
|Improve Subtree Traversal
|Completed
|September 26, 2019
|October 10, 2019
|October 10, 2019
|}


==October 17, 2019==

'''Scrum Notes:'''
* Subteam meeting
* Prepare for mid term presentations
* Trying to finish a working run before presentations

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Work on Presentation
|Completed
|October 17, 2019
|October 21, 2019
| October 21, 2019
|-
|Get working run
|Completed
|October 17, 2019
|October 7, 2019
| October 19, 2019
|-
|Test Subtree Traversal
|Completed
|October 10, 2019
|October 17, 2019
| October 17, 2019
|}

==October 19, 2019==

'''Scrum Notes:'''
* Hackathon Day
* Got Emade running with our code
* Valid individuals are being produced
* Worked on presentations
* https://docs.google.com/presentation/d/1fPMmlTXOuPC2PACyJzmm3X6htNpVnMZcQhw1Da-9VPo/edit?usp=sharing

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare for presentation
|Completed
|October 17, 2019
|October 21, 2019
| October 21, 2019
|-
|
|
|
|
|
|-
|
|
|
|
| 
|}

==October 21, 2019==

'''Scrum Notes:'''
* Presentation Day
* Automatic preprocessing
** Starting to implement new preprocessing primitives
** Also starting on image data and potentiality image transformations
* ezCGP
** Working on mating for ezCGP
** Idea is that swapping blocks during crossover or mating will lead to good results
** Create blocks in infrastructure to better support this
* ADFs
** https://docs.google.com/presentation/d/1fPMmlTXOuPC2PACyJzmm3X6htNpVnMZcQhw1Da-9VPo/edit?usp=sharing
* NLP
** Mainly using regression
** Split into two subteams, summarization and classification
** Want to branch out past just sentiment classification
* Bloat
** Similar to our methods
** Finding which nodes in an individual are useful or not then removing them
** Based on what the node's inputs are and whether the outputs are the same
* Neural Networks
** Mainly research on dense layer NNs and how to implement in EMADE without large training times
** Starting to make infrastructure changes
* #10

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare tasks for first semesters
|Completed
|October 21, 2019
|October 28, 2019
| October 28, 2019
|-
|
|
|
|
|
|-
|
|
|
|
| 
|}

==October 24, 2019==

'''Scrum Notes:'''
* Subteam meeting
* Discuss future work for first semesters
* Gather resources for first semesters
* Prepare for benchmarks

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare tasks for first semesters
|Completed
|October 21, 2019
|October 28, 2019
| October 28, 2019
|-
|Gather resources
|Completed
|October 24, 2019
|October 28, 2019
| October 28, 2019
|-
|
|
|
|
| 
|}

==October 28, 2019==

'''Scrum Notes:'''
* General meeting
* Recruited two new members 
* Discussed future plans and potential future work 
* Try to fix seeding issue 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare tasks for first semesters
|Completed
|October 21, 2019
|October 28, 2019
| October 28, 2019
|-
|Gather resources
|Completed
|October 24, 2019
|October 28, 2019
| October 28, 2019
|-
|
|
|
|
| 
|}

==October 31, 2019==

'''Scrum Notes:'''
* Subteam meeting
* Introduced new members to the work being done
* Everyone has been tasked
* Investigate seeding issue

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate seeding
|Completed
|October 31, 2019
|November 4, 2019
| November 4, 2019
|-
|
|
|
|
|
|-
|
|
|
|
| 
|}

==November 4, 2019==

'''Scrum Notes:'''
* General meeting
* Work on max adf size/height parameter
* Create an on/off switch for our adf implementation

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Max adf size parameter
|On hold
|November 4, 2019
| -
| -
|-
|ADF on/off switch
|Completed
|November 4, 2019
|November 11, 2019
| November 11, 2019
|-
|
|
|
|
| 
|}

==November 7, 2019==

'''Scrum Notes:'''
* Subteam meeting
* Discussed possibility of using viz code to display results from benchmarks
* Bring in viz code and edit it so it works with our fork

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate Viz code
|Completed
|November 7, 2019
|November 11, 2019
| November 9, 2019
|-
|ADF on/off switch
|Completed
|November 4, 2019
|November 11, 2019
| November 11, 2019
|-
|Max adf size parameter
|On hold
|November 4, 2019
| -
| -
|}

==November 9, 2019==

'''Scrum Notes:'''
* Self work
* Looked into viz code
* Made small adjustments for it to work with our fork
* Will test later for benchmarks once valid individuals have formed
* https://github.gatech.edu/adachille3/emade-viz/commit/4eeb910cd7220b770ef0c3cfce7a47b8a7f8b903

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate Viz code
|Completed
|November 7, 2019
|November 11, 2019
| November 9, 2019
|-
|ADF on/off switch
|Completed
|November 4, 2019
|November 11, 2019
| November 11, 2019
|-
|Max adf size parameter
|On hold
|November 4, 2019
| -
| -
|}

==November 11, 2019==

'''Scrum Notes:'''
* General meeting
* Created the on/off switch for adfs
* Made emade-viz a submodule of our fork
* https://github.gatech.edu/jye72/emade/commit/a310a67a1078326371e8bea3b53942dab90bef0d

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|ADF on/off switch
|Completed
|November 4, 2019
|November 11, 2019
| November 11, 2019
|-
|Max adf size parameter
|On hold
|November 4, 2019
| -
| -
|-
|
|
|
|
| 
|}

==November 14, 2019==

'''Scrum Notes:'''
* Subteam meeting
* Worked on height parameter

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Max adf size parameter
|On hold
|November 4, 2019
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
| 
|}

==November 17, 2019==

'''Scrum Notes:'''
* Subteam work day
* Realized potential fatal issues with overlapping ADFs and indices shifting during removal
* Planned psuedocode and algorithm for fixes
* Began implementation of fixes
* Try to get a run to test fixes as soon as possible
* Max ADF parameter put on hold until fatal errors fixed
* https://github.gatech.edu/jye72/emade/commit/4048493d41e2ae8957026d6f374bb4924184ddaa

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Max adf size parameter
|On hold
|November 4, 2019
| -
| -
|-
|Test overlaperror fix
|Completed
|November 17, 2019
|November 24, 2019
|November 18, 2019
|-
|Test remove error fix
|Completed
|November 17, 2019
|November 24, 2019
| November 18, 2019
|}

==November 18, 2019==

'''Scrum Notes:'''
* General meeting
* Tested overlap and removal indices change
* Potential edge case found when finding adfs where certain instances may not be correctly stored
* After a seeded run of 90 gens, there still appear to be no valid individuals with ADFs
* Still seeing NoneType error with individuals with ADFs
* Look into issue and try to debug by Thursday

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Explore NoneType error
|Completed
|November 18, 2019
| November 21, 2019
| November 19, 2019
|-
|
|
|
|
|
|-
|
|
|
|
| 
|}

==November 19, 2019==

'''Scrum Notes:'''
*Self work
* Looked into NoneType Issue
* Doesn't seem to be an arguments issue anymore
* Appears that the workers don't get passed in the dataPair correctly?
* Possible new issue with recursive ADF names
* Having trouble running fork, unknown if it's a personal issue

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Explore NoneType error
|Completed
|November 19, 2019
| November 21, 2019
| November 21, 2019
|-
|
|
|
|
|
|-
|
|
|
|
| 
|}

==November 21, 2019==

'''Scrum Notes:'''
* Subteam meeting
* Still having NoneType issues, not sure of the cause
* Potential issue with multiprocessing and how workers are handled, ask Jason
* Pivot to looking at viz for our eventual benchmark runs

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Peer Evaluations
|Completed
|November 21, 2019
|December 4, 2019
| December 1, 2019
|-
|Look at viz
|Completed
|November 21, 2019
| December 2, 2019
| November 30, 2019
|-
|Explore NoneType error
|Completed
|November 21, 2019
|December 2, 2019
| November 25, 2019
|}

==November 23, 2019==

'''Scrum Notes:'''
* Subteam Work Day
* Looked into viz
* Not handling our learners correctly 
* Viz parses regex of gp-helper-framework
* Detection processing has updated its gp-helper-framework
* Fixed Viz's parsing to work with our fork
* https://github.gatech.edu/adachille3/emade-viz/commit/bc0d53bfe784eba5e650f03b7520355c4876ba89

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Peer Evaluations
|Completed
|November 21, 2019
|December 4, 2019
| December 1, 2019
|-
|Look at viz
|Completed
|November 21, 2019
| December 2, 2019
| November 30, 2019
|-
|Explore NoneType error
|Completed
|November 21, 2019
|December 2, 2019
| November 25, 2019
|}

==November 25, 2019==

'''Scrum Notes:'''
* General meeting
* Attempt to fix NoneType Issue
* Current hypothesis is that the updated pset with new ADFs is not being properly added to the worker
* After debugging session, found that it wasn't being added to the worker pset mapping and context
* However, this issues seems to be cause by a bottleneck in multiprocessing
* Certain worker functions are called before we update the pset, leading to the issues

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Peer Evaluations
|Completed
|November 21, 2019
|December 4, 2019
| December 1, 2019
|-
|Look at viz
|Completed
|November 21, 2019
| December 2, 2019
| November 30, 2019
|-
|Explore NoneType error
|Completed
|November 21, 2019
|December 2, 2019
| November 25, 2019
|}

==November 28, 2019==

'''Scrum Notes:'''
* Self work 
* Started benchmark runs
* Fixed issues with NonADF runs
* https://github.gatech.edu/jye72/emade/commit/52603145459e0e3e85ffdb92c5a05be5fd90811a

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Peer Evaluations
|Completed
|November 21, 2019
|December 4, 2019
| December 1, 2019
|-
|Look at viz
|Completed
|November 21, 2019
| December 2, 2019
| November 30, 2019
|-
|Start benchmark runs
|Completed
|November 28, 2019
|December 2, 2019
| December 1, 2019
|}

==November 30, 2019==

'''Scrum Notes:'''
* Self Work
* Produced vizualizations from some benchmarks using emade-viz
* Some strange issues with AUC, explore viz code
* [[files/AucError.png]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Peer Evaluations
|Completed
|November 21, 2019
|December 4, 2019
| December 1, 2019
|-
|Look at viz
|Completed
|November 21, 2019
| December 2, 2019
| November 30, 2019
|-
|Start benchmark runs
|Completed
|November 28, 2019
|December 2, 2019
| December 1, 2019
|}

==December 1, 2019==

'''Scrum Notes:'''
* Self Work
* Fixed issues with viz
* Viz now shows proper AUC based on normalized results
* Pareto Front has also been updated to show normalized results
* Added some hard coded solutions to export viz tree visualizations
* https://github.gatech.edu/adachille3/emade-viz/commit/8a11de52b50da5608a77196b48ecd14960bb7b9c

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Peer Evaluations
|Completed
|November 21, 2019
|December 4, 2019
| December 1, 2019
|-
|Prepare presentation
|Completed
|December 1, 2019
|December 2, 2019
|December 2, 2019
|-
|
|
|
|
|
|}

==December 2, 2019==

'''Scrum Notes:'''
* Final Presentations
* Automatic preprocessing
** Seen large improvements, but may be due to random seeding
** Expanded the image datasets with keras transformations
* ezCGP
** Still having parallelization issues
** Mating and crossover working 
** New visualization team
* ADFs
** https://docs.google.com/presentation/d/1o7aoCDuJgwq7mgVcsqZ-5j67A0-Qknx1qza3bkVaNhY/edit?usp=sharing
* NLP
** Had some issues with some primitives not evaluating
** Added many new primitives for solving NLP
** Summarization seemed to have outliers that affected results
* Bloat
** Had difficulty parsing and recreating individuals
** Potentially prevents overtraining/fitting with individuals
** May want to collaborate next semester
* Neural Networks
** New primitive that uses a pickled keras model object
** More support for NNs in the future of EMADE
* #15
* Quick Semester Reflection
** Researched a lot into ADFs and different implementations and algorithms used
** Implemented functionality for finding ADFs and updating individuals with ADFs
** Fixed fatal errors with overlapping ADFs and removing nodes
** Updated emade-viz to work with detection processing
** Ran benchmarks runs and analysis
** I believe I deserve an A for this class

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

= Spring 2020 =
*Link to sub-team page: [https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions]
*Link to the sub-team repo: https://github.gatech.edu/gwang340/emade

==January 6, 2020==

'''Scrum Notes:'''
* General Meeting
* Discussed possible subteams
* Still part of the Automatically Defined Functions subteam
* Had a lecture on statistics and metrics for experiments this semester
* Hopefully, we can write scripts to automate this process and make it easier in the future to run experiments 
* Statistics
** a/b testing
** hypothesis testing
** student t-test
** one tail - cumulative
** 2 tail - checking if distributions aren't equal
** welch's t test
** scipy.stats.ttest_ind
** sf
* Possible metrics
** objective scores
** processing times 
** auc
** number of pareto ind

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start experiments
|Completed
|January 6, 2020
|January 6, 2020
|January 6, 2020
|-
|Consider metrics and stats
|Completed
|January 6, 2020
|January 6, 2020
|January 6, 2020
|-
|Determine subteam meeting time
|Completed
|January 6, 2020
|January 6, 2020
|January 6, 2020
|}

==January 9, 2020==

'''Scrum Notes:'''
* Team Meeting
* Members are tasked
** Aaron and Gabe - work on getting GCP working and kicking off experiments
*** Got access to the GCP bucket and tried to start a run 
** Ruarai and Aryender - work on making a script to run statistics on the data

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get GCP running
|Completed
|January 6, 2020
| -
|January 16, 2020
|-
|
|
|
|
|
|-
|Read papers about adfs
|Completed
|January 9, 2020
| -
|January 21, 2020
|}

==January 13, 2020==

'''Scrum Notes:'''
* General Meeting
* Worked on getting GCP working
* Discussed experiment logistics
* Want to start small GCP runs to make sure everything is working before launching longer runs

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get GCP running
|Completed
|January 6, 2020
| -
|January 16, 2020
|-
|
|
|
|
|
|-
|Read papers about adfs
|Completed
|January 9, 2020
| -
|January 21, 2020
|}
==January 16, 2020==

'''Scrum Notes:'''
* Team Meeting
* Fixed issues with GCP and started small test runs
* Potential Experiments
** adfs on/off  
** ours vs koza  
** koza + adfs vs koza
* Potential Development Ideas 
** adf visualizations  
** koza implementation  
*One thing to note, our implementation is closer to ARLs described in Rosca's paper, whereas ADFs as described by Koza's books are completely different. Granted the two ways to implement modularity are not mutually exclusive, so it would be interesting to see the two work together in tandem, meaning our adfs + koza experiment. Our ADFs on/off experiment means comparing our implementation to a basic genetic programming approach, no modularity whatsoever.

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get GCP running
|Completed
|January 6, 2020
| -
|January 16, 2020
|-
|Read papers about adfs
|Completed
|January 9, 2020
| -
|January 21, 2020
|-
|
|
|
|
|
|}
==January 21, 2020==

'''Scrum Notes:'''
* Self work
* Looked into GCP cluster files
* Runs seem normal, but potentially low valid individuals
** This may be caused by our config file, we started out with a fairly small population
* Read papers on ADFs
** Note: I would like to read more about Koza's description of ADFs, however, the book seems a bit difficult to find
* https://www.researchgate.net/publication/2655092_Evolution_of_Both_the_Architecture_and_the_Sequence_of_Work-Performing_Steps_of_a_Computer_Program_Using_Genetic_Programming_with_Architecture-Altering_Operations
* https://pdfs.semanticscholar.org/a6aa/a962c201ecb9cbe677fc52fc2c9223eb3a3a.pdf
* https://www.researchgate.net/publication/229046942_Co-evolutionary_automatically_defined_functions_in_genetic_programming
* https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=6277495.pdf&bkn=6267488&pdfType=chapter
* 
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| Continue ADF GCP Runs
|Completed
|January 21, 2020
| -
|January 26, 2020
|-
|Continue Non ADF GCP Runs
|Completed
|January 21, 2020
| -
|January 26, 2020
|-
|Find Koza's Second Book on ADFs
|On Hold
|January 21, 2020
| -
| -
|}

==January 23, 2020==

'''Scrum Notes:'''
* Team Meeting
*Continued with runs
*Overall, fairly slow week. Waiting on runs to finish so we can get the data. Analysis scripts seem to be making good progress.

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| Continue ADF GCP Runs
|Completed
|January 21, 2020
| -
|January 26, 2020
|-
|Continue Non ADF GCP Runs
|Completed
|January 21, 2020
| -
|January 26, 2020
|-
|Find Koza's Second Book on ADFs
|On Hold
|January 21, 2020
| -
| -
|}

==January 24, 2020==

'''Scrum Notes:'''
* Self work
* Ran another trial of our experiment on GCP with adfs on
* Everything seems normal

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| Continue ADF GCP Runs
|Completed
|January 21, 2020
| -
|January 26, 2020
|-
|Continue Non ADF GCP Runs
|Completed
|January 21, 2020
| -
|January 26, 2020
|-
|Find Koza's Second Book on ADFs
|On Hold
|January 21, 2020
| -
| -
|}

==January 26, 2020==

'''Scrum Notes:'''
* Self work
* Ran experiment with cache on and adfs off
* Seems that caching does not work with our branch, need to investigate
* Also a small bug with non-adf runs that was fixed and sent in a PR
** https://github.gatech.edu/gwang340/emade/commit/b8801c428b69a7e88f60a72628247e3f1073af74
* Wrote SQL query to calculate average elapsed_time for each generation for metrics later
** <code>SELECT evaluation_gen, AVG(elapsed_time) FROM adf_benchmark_1.individuals GROUP BY evaluation_gen ORDER BY evaluation_gen;</code>
** The hope is to compare the elapsed time with cache on/off with/without our ADFs
** Our theory is that ADFs that are cached would be able to help lower the evaluation time and offset the mild computational overhead

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| Continue ADF GCP Runs
|Completed
|January 21, 2020
| -
|January 26, 2020
|-
|Continue Non ADF GCP Runs
|Completed
|January 21, 2020
| -
|January 26, 2020
|-
|Find Koza's Second Book on ADFs
|On Hold
|January 21, 2020
| -
| -
|}

==January 27, 2020==

'''Scrum Notes:'''
* General Meeting
* Discussed potential of longer runs, determined 50 gens would be enough and we would try to get as many trials as we could
* Took the opportunity to merge some bug fixes and quality of life changes before starting longer runs
* Discussed more potential metrics to collect such as individual size and and auc 'cutoff' for accuracy
* Caching would be a valuable tool to use, as we hypothesized it would have synergy with adfs
* Unfortunately cache does not currently work with our fork, fixes need to be made
* Concerns with low valid individuals shouldn't be an issue, should be fixed with longer runs and a larger initial population

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prune repo branches
|Completed
|January 27, 2020
| -
| February 16, 2020
|-
|Fix caching
|In Progress
|January 27, 2020
| -
| -
|-
|Fix size metric
|On Hold
|January 23, 2020
| -
| -
|}

==January 30, 2020==

'''Scrum Notes:'''
* Subteam Meeting
* Discussed possible development plans while experiments are running
* Cache should be fixed and is a bigger priority than the size metric, so it has been put on hold
* Tried to get Aryender and Rurai connected to GCP
** They have access to the MySQL database but not the bucket

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prune repo branches
|Completed
|January 27, 2020
| -
| February 16, 2020
|-
|Fix caching
|In Progress
|January 27, 2020
| -
| -
|-
|Fix size metric
|On Hold
|January 23, 2020
| -
| -
|}

==February 3, 2020==

'''Scrum Notes:'''
* General Meeting
* I was sick :(

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prune repo branches
|Completed
|January 27, 2020
| -
| February 16, 2020
|-
|Fix caching
|In Progress
|January 27, 2020
| -
| -
|-
|Fix size metric
|On Hold
|January 23, 2020
| -
| -
|}

==February 6, 2020==

'''Scrum Notes:'''
* Subteam Meeting
* Discussed the progess of the current runs and statistics scripts
* Seems that there was an issue with viz where the auc increased at some point even when it shouldn't have
* Need to investigate viz and fix the issue and then pass it off to Rurai
* Runs are making steady progress on both Aaron's local and GCP
* Potential future experiment could be done on the DOTA dataset, as we believe it will benefit more from our changes
* Potentially other datasets that may benefit from our changes are image datasets and pathfinding datasets
* Turns out that runs on GCP cannot be cancelled unless by the person who started the run using scancel
** May just be easier to let Aaron handle all the GCP runs, as the handoff is a bit awkward
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prune repo branches
|Completed
|January 27, 2020
| -
| February 16, 2020
|-
|Fix caching
|In Progress
|January 27, 2020
| -
| -
|-
|Investigate viz
|Completed
|February 6, 2020
| -
| February 13, 2020
|}

==February 10, 2020==

'''Scrum Notes:'''
* General Meeting
* Current GCP run seems to have the workers clogged, so the run can't finish
* Most workers seem to be caught evaluating an SVM, but one worker errored out
** Error Message: slurmstepd: error: _is_a_lwp: open()
** https://github.com/E3SM-Project/E3SM/issues/3138
** Issue either appears to be a very rare occurrence or a nondescript error message that isn't related to the actual error
* Talked with Austin, turns out we forgot to include the timeout fix, individuals taking longer than 2.5 hours should be terminated
* We may just start a different run
* Turns out viz code is a bit outdated and specific for visualizations causing the AUC calculations to be incorrect
* Look into possible postprocessing solutions that correctly calculate AUC

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prune repo branches
|Completed
|January 27, 2020
| -
| February 16, 2020
|-
|Fix caching
|In Progress
|January 27, 2020
| -
| -
|-
|Investigate viz
|Completed
|February 6, 2020
| -
| February 13, 2020
|}

==February 13, 2020==

'''Scrum Notes:'''
* Self Work
* Fixed Viz AUC calculations
* Viz's code originally tried to pull information from a metadata table where max number of false positives/negatives were stored
** Metadata table no longer exists
** Viz also normalized the AUC based on the max fp/fn found in the pareto front, but that isn't an entirely accurate number
** Should be based on the max possible fp/fn from the dataset used
* Looked into how EMADE handles the input dataset
** There is a dataset splitter that splits the original csv into certain number of subsections used for different trials
** Trials based on the Monte Carlo method
** Note: The max fp/fn from the input .csv file is not the same as the max fp/fn that EMADE uses
*** Must be a sum of the different trial datasets
** The eventual fitnesses for the individuals are the average fp/fn over the number of trials
* For the viz fix, I simply hardcoded in the true max fp/fn values  for the dataset we were using and properly normalized the data based on that
** Should look into a more generalized solution  
* Sent PR for Rurai's fork for our use
* https://github.gatech.edu/reo3/emade-viz/commit/06f1b619a0d724e32bbeac54d2b18398fa02f226

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prune repo branches
|Competed
|January 27, 2020
| -
| February 16, 2020
|-
|Fix caching
|In Progress
|January 27, 2020
| -
| -
|-
|Investigate viz
|Completed
|February 6, 2020
| -
| February 13, 2020
|}

==February 14, 2020==

'''Scrum Notes:'''
* Subteam Meeting
* On track to finish experiment runs by the end of the week
* Starting to run basic stats on the current finished runs to make sure our statistics scripts all work
* AUC calculations were rerun to reflect the changes and fixes made
* After this experiment is done we can merge in some other changes like fitness as a heuristic to test if they improve results
* Planning to discuss potential other implementations and ideas for modularization from papers on Monday

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prune repo branches
|Competed
|January 27, 2020
| -
| February 16, 2020
|-
|Fix caching
|In Progress
|January 27, 2020
| -
| -
|-
|
|
|
|
|
|}

==February 16, 2020==

'''Scrum Notes:'''
* Self Work
* Cleaned repo branches
* Exported csv of number of valid individuals, pareto individuals, and average elapsed time per generation
** Valid Individuals: <code>SELECT evaluation_gen, COUNT(*) FROM YOURSCHEMANAME.individuals WHERE error_string is NULL AND evaluation_status LIKE 'EVALUATED' OR evaluation_status LIKE 'WAITING_FOR_MASTER' GROUP BY evaluation_gen ORDER BY evaluation_gen;</code>
** Total Valid Individuals: <code>SELECT COUNT(*) FROM YOURSCHEMANAME.individuals WHERE error_string is NULL AND evaluation_status LIKE 'EVALUATED' OR evaluation_status LIKE 'WAITING_FOR_MASTER';</code>
** Pareto Individuals: <code>SELECT generation, COUNT(*) FROM YOURSCHEMANAME.paretofront GROUP BY generation ORDER BY generation;</code>
* Investigated Cache

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prune repo branches
|Completed
|January 27, 2020
| -
| February 16, 2020
|-
|Fix caching
|In Progress
|January 27, 2020
| -
| -
|-
|
|
|
|
|
|}

==February 17, 2020==

'''Scrum Notes:'''
* General Meeting
* Steady progress on experiments and analysis
* We have a decent amount of data so we can start looking into the statistics
* Talked with Austin about Cache, was told to wait a bit as cache has some bugs that need to be fixed first
** Once the cache branch is fixed, merge in the changes Austin makes before making our own changes
** Until then, fixing cache is placed on hold

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| -
| -
| -
| -
| -
|-
|Fix caching
|On Hold
|January 27, 2020
| -
| -
|-
|Run statistics scripts
|Completed
|February 17, 2020
| -
|February 23, 2020
|}

==February 20, 2020==

'''Scrum Notes:'''
* Subteam meeting cancelled
* Members were busy or could not be present

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| -
| -
| -
| -
| -
|-
|Fix caching
|On Hold
|January 27, 2020
| -
| -
|-
|Run statistics scripts
|Completed
|February 17, 2020
| -
| February 23, 2020
|}

==February 23, 2020==

'''Scrum Notes:'''
* Self work
* Corrected Aryender's statistics notebook to be a Welch's t-test instead of a student's t-test
** https://github.gatech.edu/gwang340/emade/commit/6cc97390fda55f2923180293c23fd0134d9f17dd
* Compared average AUC and final AUC of our experiments 
* So far no significance and a lot more samples would be needed in order to prove significance
** P-values were in the high 0.8-0.9 and would need roughly 100+ more trials to prove significance
* Need to discuss future ideas and how to move forward

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| -
| -
| -
| -
| -
|-
|Fix caching
|On Hold
|January 27, 2020
| -
| -
|-
|Discuss other data to collect
|Completed 
|February 23, 2020
| -
|February 24, 2020
|}

==February 24, 2020==

'''Scrum Notes:'''
* General Meeting
* Discussed results of experiment
* Potentially try a new dataset such as Dota or image classification
* Finish experiment with intelligent ADFs
** Intelligent ADFs is using the fitness based heuristic developed last semester
* Mine for more data from the experiments
** AUC Slope
** AUC cutoff
** Number of valid individuals
** Size (as a sanity check)
** Evaluation time (with caching)

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get size data
| Completed
| February 24, 2020
| -
| February 29, 2020
|-
|Fix caching
|On Hold
|January 27, 2020
| -
| -
|-
|Get valid individual data 
|Completed
|February 24, 2020
| -
| February 29, 2020
|}

==February 27, 2020==

'''Scrum Notes:'''
* Subteam Meeting
* Improved Viz code to automatically format the AUC data into a CSV for our analysis format
* Taking a week to do a literature review
* Linked papers previously in this notebook (Entry from January 21st)

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get size data
| Completed
| February 24, 2020
| -
| February 29, 2020
|-
|Fix caching
|On Hold
|January 27, 2020
| -
| -
|-
|Get valid individual data 
|Completed
|February 24, 2020
| -
| February 29, 2020
|}

==February 29, 2020==

'''Scrum Notes:'''
* Hackathon
* Worked on presentation
* Helped first semesters install EMADE
* Collected data on the sizes of individuals
** Used code from database_tree_evaluator to connect to the database, unpickle the individual, and count the number of nodes
* Finished analysis on certain metrics
** P-values from number of valid individuals produced for non-ADF vs ADF were insignificant 
** However, our ADF runs seemed to have less valid individuals, more investigation is needed
** Contradicts our assumption that ADFs would increase the number of valid individuals
* Discussed ideas on how to conduct primitive analysis in ADFs/Population
** We want to know what our ADFs are actually composed of and which primitives they use
** Currently working on a script that will count all the primitives used in the population and a separate one for ADFs 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get size data
| Completed
| February 24, 2020
| -
| February 29, 2020
|-
|Prepare midterm presentations
|Completed
|February 29, 2020
| March 9, 2020
|March 9, 2020
|-
|Get valid individual data 
|Completed
|February 24, 2020
| -
| February 29, 2020
|}

==March 2, 2020==

'''Scrum Notes:'''
* General Meeting
* Collected more data/metrics
* Ran the P-value test on Size metric for a sanity check
** As expected, results were statistically significant
** Both ADF and Intel ADF populations had smaller individuals
** "Smaller" as in number of nodes without expanding ADFs

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare midterm presentations
|Completed
|February 29, 2020
| March 9, 2020
|March 9, 2020
|-
|Work on primitive count script
|Completed
|February 29, 2020
|
|March 5, 2020
|-
|
|
|
|
|
|}

==March 5, 2020==

'''Scrum Notes:'''
* Subteam Meeting
* Worked on presentation
* Primitive analysis
** Finished scripts, Aaron is now using the data in csv files to make histograms
** https://github.gatech.edu/gwang340/emade/commit/c8840e42d70bfd9c33390d0e5e489ff2046ca190

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare midterm presentations
|Completed
|February 29, 2020
| -
|March 9, 2020
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 8, 2020==

'''Scrum Notes:'''
* Self Work
* Worked on presentation
* Created visualizations for individuals and adfs
** Currently using viz code for individual trees
** ADFs currently have no automated way to visualize their trees, currently making them myself manually
** Ex:
** [[files/Screenshot from 2020-04-27 12-03-56.png]]
* Produced AUC graphs and Pareto Fronts
** Used Viz code
** Ex:
** [[files/Screenshot from 2020-04-27 12-01-38.png]]
** [[files/Screenshot from 2020-04-27 12-02-58.png]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare midterm presentations
|Completed
|February 29, 2020
| -
|March 9, 2020
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 9, 2020==

'''Scrum Notes:'''
* Midterm Presentation Day
* ADF
** https://docs.google.com/presentation/d/1VzJBOXUmKNmMjk3AgiRHe3Uq8gaHrWDserQgtQwZtOo/edit?usp=sharing
** One thing of interest that Jason noticed was that ADFs didn't select filters or DataPair augmenting primitives like standard normalization
* Bloat
** Ran an experiment on speciation with roughly 3 trials 
** Unfortunately no statistical significance, however hopefully with more trials they'll see more results 
** One important thing I noticed, speciation seemed to nearly every individual as it's own species
*** This may be due to how they're classifying species, but for me intuitively, a new species for each type of learner would appear to be a good classification 
*NLP
**Made improvements and new primitives for neural nets and NLP
**Have statistic scripts working waiting on data from runs
**Trying to get data from ICEHAMMER and PACE
**May have a possibility of submitting a proposal to GECCO if they have results
*Time conflict
**Made new primitives for NLP
**Tried running on PACE, but ran into some issues after PACE maintenance
**If possible I'd love to have our code working on PACE as well
**Once they have ironed out their issues, ask them about a how-to guide
*ezCGP
**Large code refactors for transitioning to tensorflow 2.0
**The architecture and pipeline for the project seems to be working well outside of data augmentation
**Interested in the activation blocks optimization, curious to see the results
*First Semesters
**Honestly very impressed with their work
**Much better than my first semester!

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare materials for first semester
|Completed
|March 9, 2020
| -
|March 25, 2020
|-
|
|
|
| -
| -
|-
|
|
|
| -
| -
|}

==March 12, 2020==

'''Scrum Notes:'''
* Subteam meeting canceled
* Resume once Spring Break ends

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| Prepare materials for first semester
|Completed
|March 9, 2020
| -
|March 25, 2020
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 23, 2020==

'''Scrum Notes:'''
* General meeting 
* Resumed after spring break
* New first semesters assigned to subteams
* We had 8 new first semesters
* We expect them to not be super comfortable with EMADE or ADFs
* We'll be preparing another presentation on Wednesday as a way to ease them into our team

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| Prepare materials for first semester
|Completed
|March 9, 2020
| -
|March 25, 2020
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 24, 2020==

'''Scrum Notes:'''
* Self work
* Prepared presentation for first semester students
* Made a survey to gage how comforatable they are with certain topics/tasks
** https://forms.gle/nCLQtX5aNyjuKo6YA
* Wrote the source code sections and references sections in the presentation
* References:
** 
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| Prepare materials for first semester
|Completed
|March 9, 2020
| -
|March 25, 2020
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 25, 2020==

'''Scrum Notes:'''
* Subteam meeting 
* Gave presentation on EMADE and ADFs
* We want all the first semesters to be able to start a seeded run of our EMADE fork
* First semesters should read one of the papers linked in the references
* Only finished half the presentation, finish the rest on Monday
* I reached out to two students who couldn't make this meeting and caught them up
* https://docs.google.com/presentation/d/1nivJn2MfO-Amf-yvODm7LTLPNlpyeGXjzLXxgbbqvD4/edit?usp=sharing

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Finish intro presentation
|Completed
|March 25, 2020
| -
|March 30, 2020
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 29, 2020==

'''Scrum Notes:'''
* Self work 
* Looked at survey results
* https://forms.gle/nCLQtX5aNyjuKo6YA
* Pretty pleased with the distribution
* Good mix of students who appear to want to do development and those who want to analysis

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Finish intro presentation
|Completed
|March 25, 2020
| -
|March 30, 2020
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 30, 2020==

'''Scrum Notes:'''
* General meeting 
* Finished presentation on EMADE and ADFs
* Discussed plans for the rest of the semester
** What does success look like?
** We defined it as finishing another experiment
** Having resources to anayze the results of all our experiments, past, present, and future
* Split subteam into different projects/tasks based on survey results
** https://forms.gle/Yv54WNcsSq17sYHi6
* Determined new meeting times
** I will be a part of the Primitive Analysis group

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| -
| -
| -
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 3, 2020==

'''Scrum Notes:'''
* Subteam meeting 
* Part of the primitive analysis group now 
* Discussed the current plans for the rest of the semester
* Explained in more detail the process for finding and selecting adfs
* Discussed potential ways to analyze the data if given primitive frequency
* Students were less interested in the data collection process and more interested in the actual analysis (as expected)
** I'll be working on collecting the data and giving it to them in a usable form
** Discussed with them potential ideas and directions to explore once given the data
** Students will likely need sql dumps, but getting everyone access to the GCP bucket is tedious

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Collect primitive frequency data
|Completed
|April 3, 2020
| -
|April 4, 2020
|-
|Allocate sql dumps in an easily reached place
|Completed
|April 3, 2020
| -
|April 6, 2020
|-
|
|
|
|
|
|}

==April 4, 2020==

'''Scrum Notes:'''
* Self Work
* Rewrote script for counting primitive frequencies
** Now closer to the database_tree_evaluator script
** Connects to the database, unpacks the pickle node by node in order to get names
** https://github.gatech.edu/gwang340/emade/commit/f2ad31b0dff9e9fe9aaf5f258b60538520688eb9
*Data collected is now in a csv format and stored on Google Drive
**https://drive.google.com/open?id=1VBiObzmIMqsNjNG0PQ3l9Ok9gyyzcxrA

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Collect primitive frequency data
|Completed
|April 3, 2020
| -
|April 4, 2020
|-
|Allocate sql dumps in an easily reached place
|Completed
|April 3, 2020
| -
|April 6, 2020
|-
|
|
|
|
|
|}

==April 6, 2020==

'''Scrum Notes:'''
* General meeting 
*  Some confusion with the Selection Method Team
**  My perceived goal for the Selection Method Team was to modify the selection process for individuals
***  In theory, if ADFs are good, individuals with ADFs should be good, so they should be selected more often
***  Perhaps modify ngas2 or write a new selection method that favors ADFs
***  Reach out to the Bloat team as well, since they have created their own selection method based on speciation
**The confusion was with how ADFs (not individuals) are being selected
***Currently, ADF 'candidates' are being selected after parsing the tree
***The algorithm traverses the individual tree, and stores root-children combinations of height 1 trees
***Then, based on a heuristic such as frequency or fitness, the best candidates are turned into ADFs
***While this method needs more research, and it would be interesting to modify this and analyze the results, given our time constrains this seems more like a goal for next semester
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Guide first semesters on their analysis
|Completed
|April 6, 2020
| -
|April 17, 2020
|-
|Finish plots/analysis on previous experiments
|Completed
|April 6, 2020
| -
|April 17, 2020
|-
|
|
|
|
|
|}

==April 10, 2020==

'''Scrum Notes:'''
* Subteam meeting 
* Got updates on everyone's analysis
** Avni 
*** Wants to look at the primitive distributions and try to classify the primitives into categories 
*** Told her to look into the _methods.py files and try to classify the primitives based on which file they're in 
*** Alternatively running a clustering algorithm like k-means on the primitive distribution may also be interesting 
**Reynold
***Wants to look if there's a correlation between the ADFs in the pareto front and ADFs in non-pareto individuals
***Should look into the database for more info on ADFs and individuals
**Abhiram
***Wants to see how ADFs are affecting the fitness of the individuals
***Is making SQL queries for his analysis
***Making good independent progress
* There was some confusions so we answered some questions 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Guide first semesters on their analysis
|Completed
|April 6, 2020
| -
|April 17, 2020
|-
|Finish plots/analysis on previous experiments
|Completed
|April 6, 2020
| -
|April 17, 2020
|-
|
|
|
|
|
|}

==April 13, 2020==

'''Scrum Notes:'''
* General meeting 
* Get experiments up and running
** Should get roughly 3-4 trials finished before the final presentations 
* Try to get visualizations completed by Friday/Saturday 
* Start working on final presentations 
* Discussed more specific analysis with Reynold
** Turns out there isn't a huge correlation between ADFs, seems to be more like a uniform distribution 
** Gave more direction, the analysis is now more focused on comparing which ADFs appear in pareto individuals and which ADFs never appear in pareto individuals 
** If not many ADFs appear in pareto individuals, it could be a sign that we're not truly selecting good components for ADFs 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Guide first semesters on their analysis
|Completed
|April 6, 2020
| -
|April 17, 2020
|-
|Finish plots/analysis on previous experiments
|Completed
|April 6, 2020
| -
|April 17, 2020
|-
|Finish final presentations
|Completed
|April 13, 2020
| -
|April 20, 2020
|}

==April 17, 2020==

'''Scrum Notes:'''
* Subteam meeting
** Final review of everyone's progress 
** Put vizualizations on the Final presentation 
** Made some comments and gave some feedback on their work, overall very impressed 
** There might be issues with how we're counting the primitives in ADFs which may affect Avni's analysis, investigation is needed 
* Self Work
** Looked into Avni's issue, doesn't seem to be able to be fixed in time, need to overhaul the counting script  
** https://stackoverflow.com/questions/31547003/split-string-that-looks-like-a-python-function-call-to-arguments 
** Produced new visualizations for the presentation, all kept in jupyter notebooks
*** https://github.gatech.edu/gwang340/emade/commit/2664f82967799800f5827a3a5d5a92fd00aa9544 
*** Aggregated Pareto front from all trials 
*** [[files/Screenshot from 2020-04-27 14-22-35.png]] 
*** Mean AUC +/- Std. Dev 
*** [[files/Screenshot from 2020-04-27 14-27-26.png]] 
*** Box and whiskers AUC per generation 
*** [[files/Screenshot from 2020-04-27 14-27-53.png]] 
*** Comparison AUC +/- Std.Dev 
*** [[files/Screenshot from 2020-04-27 14-22-57.png]] 
*** p-value table 
*** [[files/Screenshot from 2020-04-27 14-23-57.png]] 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Guide first semesters on their analysis
|Completed
|April 6, 2020
| -
|April 17, 2020
|-
|Finish plots/analysis on previous experiments
|Completed
|April 6, 2020
| -
|April 17, 2020
|-
|Finish final presentations
|Completed
|April 13, 2020
| -
|April 20, 2020
|}

==April 19, 2020==

'''Scrum Notes:'''
* Presentation Dry-Run
** Need to include experiment setup slide
** Potential imporvement for pareto graph, color code which trial the individuals were from, or increase the size of the points based on the number of individuals with that fitness. My method seems to be a fairly strange way to compress a pareto graph
** Graphs overall need more context, and could improve clarity by making bar graphs horizonal
** Certain axes should be normalized
** Our method of comparing p-values for overall AUC averages is not the best way to describe change
*** Greg and Jason recommended a p-value graph over generations to show different stages of significance at different generations
*** The idea is that while ADFs may not greatly impact the AUC at the final generation, but rather it should help the AUC converge faster. Therefore there should be more significance at certain eariler generations, where the mean AUC's are not equal to the baseline.
* Self-Work
** Wrote code for the p-value over generations graph
** [[files/Screenshot from 2020-04-27 14-23-26.png]]

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Finish final presentations
|Completed
|April 13, 2020
| -
|April 20, 2020
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 20, 2020==

'''Scrum Notes:'''
* Final Presentations 
* ADF : https://docs.google.com/presentation/d/1pM_VSVOVw0l5aHGx5YjvkpRcBvNPixVkjcpAnIzLzPk/edit?usp=sharing 
* Bloat
** NeatGP starts with simple solutions then builds them up. However, in our ADF results, it appears as building bigger components starting from good smaller components doesn't always lead to good results, and in fact were often negative 
** Speciation is based on the topological structure base, and new edits fixed the 1 individual per species issues in the midterm 
** No statistical significance(?) from what I remember in certain experiements for AUC or Bloat   
*NLP
**NN might want to use ADFs in the future to save good layer combinations
**First semesters wrote activation layers primitives
**Hoping to do computer vision work, emphasis on classification, not detection
***They're hoping to implement R-CNN and have bounded box data, similar to some GTRI work
*Time conflict
**Text summarization and new primitives
**Fixed some pace issues
**Need to optimize certain things, training takes longer than 2 hours which may cause issues 
*ezCGP
**Extremely long training times, 12-15 hours, wasn't aware of this previously
**Included preprocessing block after being fixed from the midsemester
**Attempted different architectures of networks with various numbers of convolution blocks based on academic papers such as VGG
**New experiments with fixed data augmentations, such as a black box in the middle of an image
***might try jpeg defense, a paper I've read from a professor at GT
***https://arxiv.org/abs/1802.06816
***https://github.com/poloclub/jpeg-defense
***While the paper is more focused on defending against attacks on neural networks, I've always been interested in using their techniques as a data augmentation method. By having various amounts of compression in the images, it should lead to a more robust model after training.
**Successfully implemented a transfer learning pipeline, where neural networks trained by larger companies can be leveraged

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update notebook
|Completed
| -
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 26, 2020==

'''Scrum Notes:'''
* Final thoughts and future plans
* Wanted to get more feedback from the students, but no one really filled out the survey: https://forms.gle/eXdSfVsCgS98zZJ56
* Semester Reflection
** Very happy with the work done this semester given the circumstances
** Glad to see some significance, meaning that our changes are in fact beneficial
** Need to run more trials to solidify our conclusions
** There are a lot of interesting ways to branch off from here, and with more members there should be more progress and experiments next semester
** Finished a lot of analysis this semester, so we may want to do a writeup/produce more documentation for the future
* Future Plans
** I think it'd be good to do a more formal writeup of our current results and potential future results
** I'd like to do a code refactor over the summer independently, before the fall semester begins
*** This is to allow for an easier merge into EMADE master and allow other teams to more easily use our changes
*** Also fix the "ARL" vs "ADF" naming mistake. 
*** Potentially ease into ARLs (Rosca) + ADFs (Koza) 
**I'd like the team to focus more on modularity in general rather than ADFs or ARLs specifically. Given there was a lot of confusion about this since we "made" ARLs before reading the paper, but that's a sign for me that we should do more literature reviews and looking into what other people have done. There were a few different approaches that I found in my own independant reading which may be interesting to see in the future, so I think a more official shift with a name change to modularity would be good.
**I think Selection Method and Differential fitness had very good results given the small number of trials that were run. I'd like to build off those in the future. Selection Method could do more complex things in their method, given that their simple changes seemed to show some promise. Might be interesting to see a mutation method or something to insert ADFs more frequently into the population. There were more heuristics dicussed in this paper where an indepth analysis was done on ARLs, would be a good starting point for next semester after Differential Fitness: https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=6&cad=rja&uact=8&ved=2ahUKEwiV_oeUpbboAhWqd98KHcvqB3sQFjAFegQICBAB&url=https%3A%2F%2Fpdfs.semanticscholar.org%2F8c61%2F89cdc60b705ab7d61b4f10ff9d85dba83956.pdf&usg=AOvVaw04YkBSGNltukC-EpEESSrq
**Some ideas we had but didn't get to start this semester were entropy informed ADFs, evolving ADFs, and ADF visualization 
**Might be interesting to see the effect ADFs have on different more complex datasets. The next logical step seems to be the DOTA dataset, but our initial thoughts for problems that ADFs might perform best at could be image processing, pathfinding/LIDAR, traveling salesman, etc. given how modularity or divide/conquer concepts may help in those datasets. More of a next semester idea if the students appear to be interested. 
**There are also some bugs and features I'll try to fix/add over the summer
***Fix the size objective/multiobject parts of EMADE. I forgot the reason, but we only have 2 objectives right now since size was broken
***Make our fork compatible with cache
***Implement Partial ADFs / Improve our ADF selection
****Look into better ways to find the "good" parts of an individual
****DataPair manipulations do not seem to be chosen often enough, explore ways to make ADF selection pick these primitives more often without explicitly telling it which primitives to pick
****Also looking to including bigger subtrees as ADFs with improved selection algorithm
****Be wary of computational complexity, this could easily become an O(n!) algorithm if we're not careful
***Figure out a way to seed ADFs 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
| -
| -
| -
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

= Fall 2020 =

==August 17, 2020==
'''Scrum Notes:'''
* Discuss potential new teams and continuing teams
* Currently continuing the ADF subteam
** Will try to be renamed as the Modularity/Abstraction team (name to be determined)
* A few members will be returning this semester
* Need to determine what our goals for this semester will be and meeting times
* Good idea to review what we accomplished last semester and what we can continue/improve
* https://lettucemeet.com/l/k0KrK 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Find a good meeting time for all members
|Completed
|8/17/2020
|8/31/2020
|8/31/2020
|-
|Determine goals for the semester
|Completed
|8/17/2020
|8/31/2020
|8/25/2020
|-
|
|
|
|
|
|}

==August 23, 2020==
'''Self Work:'''
* Created a powerpoint reviewing last semester's work
* Include potential ideas for what to work on this semester
* https://docs.google.com/presentation/d/1IO3LjZZYo4sKHMQILDyWWY-EngNwMHFWmh3ntrWZdh8/edit?usp=sharing

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Find a good meeting time for all members
|Completed
|8/17/2020
|8/31/2020
|8/24/2020
|-
|Determine goals for the semester
|Completed
|8/17/2020
|8/31/2020
|8/25/2020
|-
|
|
|
|
|
|}

==August 24, 2020==
'''Scrum Notes:'''
* Teams have been finalized
* New Meeting times for our Subteam is now Fridays from 4-5 PM EST
* Reviewed our progress from last semester
* Discussed ideas/tasking for the group
* Current priority is getting runs done so we have more data to analyze
* I need to task people on which branches to run

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Try to start an EMADE run on my local
|Completed
|8/24/2020
|8/31/2020
|8/26/2020
|-
|Determine goals for the semester
|Completed
|8/17/2020
|8/31/2020
|8/25/2020
|-
|Find a good meeting time for all members
|Completed
|8/17/2020
|8/31/2020
|8/24/2020
|}

==August 25, 2020==
'''Self Work:'''
* Had a discussion with Dr. Rohling about the direction of the team
* Reviewed the progress from last semester and discussed what to do this semester
* Main Goals
** Get more data/trials and rerun analysis to explain results
** Run our changes on a more applicable dataset not just Titanic, possibly number recognition from images
** Look into how our changes can help other teams/problems
* Potential New Ideas
** Differential Fitness may be useful as an objective, not just the heuristic we use to find ARLs
** Novelty/Exploration, look into different research into how to reward new solutions
** Ancestry, do more between the comparison between parents and children, and possible grandchildren and even age of individuals
** Search Space/Region of interest
*** If there is a particular solution we "want" how can we better approach that solution using ARLs instead of searching throughout the entire space

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Try to start an EMADE run on my local
|Completed
|8/24/2020
|8/31/2020
|8/26/2020
|-
|Determine goals for the semester
|Completed
|8/17/2020
|8/31/2020
|8/25/2020
|-
|
|
|
|
|
|}

==August 26, 2020==
'''Self Work:'''
* Refactoring the repo
* Certain branches need to be tested/deleted if they are new/outdated
* Aaron left some bugs in his branch that need to be fixed, found through my local EMADE run

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Reach out to Jason about GCP
|Completed
|8/26/2020
| -
|9/1/2020
|-
|Try to start an EMADE run on my local
|Completed
|8/24/2020
|8/31/2020
|8/26/2020
|}

==August 28, 2020==
'''Self Work:'''
* Worked with Jason to get GCP running
'''Subteam Meeting:'''
* Assigned runs and literature review

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Reach out to Jason about GCP
|Completed
|8/26/2020
| -
|9/1/2020
|-
|Look for articles for literature review
|Completed
|8/28/2020
|9/4/2020
|9/3/2020
|}

==August 31, 2020==
'''Self Work:'''
* Worked with Jason to get GCP running
* Updated team wiki page
'''General Meeting:'''
* Quick updates on everyone's progress and review

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Reach out to Jason about GCP
|Completed
|8/26/2020
| -
|9/1/2020
|-
|Look for articles for literature review
|Completed
|8/28/2020
|9/4/2020
|9/3/2020
|}

==September 1, 2020==
'''Self Work:'''
* Worked with Jason to get GCP running
* GCP finally working, Selection Method running


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start runs on GCP
|Completed
|9/1/2020
|9/20/2020
|9/20/2020
|-
|Look for articles for literature review
|Completed
|8/28/2020
|9/4/2020
|9/3/2020
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|}

==September 3, 2020==
'''Self Work:'''
* First Selection Method run completed
* Started a second run
* Started debugging Differential Fitness branch
* Looked into GECCO papers on modularity
** Main paper:
*** [https://dl.acm.org/doi/10.1145/2330163.2330276 Tag-based modularity in tree-based genetic programming]
*** The idea behind tag-based modularity is that you have a block of code that is tagged with an arbitrary identifier that permits retrieval based on inexact matching. So whenever something similar to the tagged module is found, you can potentially replace it with the closest tagged block of code that is available. This leads to potentially novel new solutions since it tries different new combinations of similar code blocks. You may also specify the "direction" the tagged module is selected, in the paper they replaced tagged floats with the closest float that was greater than the found float. However, the examples given in the paper focus on more traditional genetic programming problems such as the Lawnmower problem or the Bit Parity problem and have more simplistic returns and primitives, with floats being the main focus. This does not particularly align with the model search/optimization goals that EMADE does. While it may be interesting to see how this would look as a mutation option, where we have more informed mutations based on similarity and tagging instead or randomly selected primitives that are compatible. It may also be interesting to see how it would affect the model hyperparameters, as it might better tune them with a more informed "direction" while searching. However, overall I don't think this is necessarily the direction we'd want to look at. The results of the paper weren't fantastic and overall the methodlogy is very diffferent from EMADE's.
** Will read the following papers
*** [https://dl.acm.org/doi/10.1145/2739482.2768472 Exploiting the Relationship Between Structural Modularity and Sparsity for Faster Network Evolution] 
*** [https://dl.acm.org/doi/10.1145/1569901.1570037 Functional modularity for genetic programming]
*** [https://dl.acm.org/doi/10.1145/2001576.2001776 Constraining connectivity to encourage modularity in HyperNEAT] 
**** Might want to work with NLP team


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs on GCP
|Completed
|9/1/2020
|9/20/2020
|9/20/2020
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Look for articles for literature review
|Completed
|8/28/2020
|9/4/2020
|9/3/2020
|}

==September 4, 2020==
'''Subteam Meeting:'''
* Reviewed the papers discussed by everyone
* Some interesting ideas to come out of the discussion
** Find a way to mate ARLs
*** At this point it starts to become more similar to ADFs
*** If we have a global collective pool of "good" subtrees and are able to mate and mutate within that pool it might lead to interesting results
*** Similarly, it might be interesting to be able to seed ARLs and "merge" ARLs together
** One paper discussed something similar to early stopping, reseeding, then starting again
*** Might be interesting just for the sake of better results, but not exactly the point of EMADE
** Another interesting metric we could create for finding ARLs is the time since mutation
*** If a pareto individuals has a very long age or has not been modified in a long time it may be a candidate for finding ARLs
* Since GCP is expiring on September 20th, we've assigned everyone to get our fork running on an alternative cloud
** Options are PACE and Colab
** I'll be trying to run on IceHammer


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs on GCP
|Completed
|9/1/2020
|9/20/2020
|9/20/2020
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|}

==September 7, 2020==
'''General Meeting:'''
* There's been some progress being made on getting our fork on Pace and Colab
* Created a branch and pull request for CacheV2
** If in the future we wanted to merge into the main branch
** Hopefully by the end of the semester
** https://github.gatech.edu/gwang340/emade/pull/8


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs on GCP
|In Progress
|8/17/2020
|8/31/2020
| -
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|}

==September 11, 2020==
'''Subteam Meeting:'''
* Busier week, not too much progress all around
* Steady progress on tasks


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs on GCP
|In Progress
|8/17/2020
|8/31/2020
| -
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|}

==September 12, 2020==
'''Self Work:'''
* Finished some GCP runs of Selection method
* Now have more than 10 trials so performing analysis and create graphs
* Using previous analysis code from last semester
* [[files/SelMetAUCUpdate.png]]
* [[files/SelMethP-valueUp.png]]
* Seems to have some early gains before being approximately similar to the baseline
* Nothing statistically significant as of yet
** Makes sense given the fairly simplistic change we made


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs on GCP
|In Progress
|8/17/2020
|8/31/2020
| -
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|}

==September 14, 2020==
'''General Meeting:'''
* Fairly standard progress
* Hoping to get PACE and Colab working by next general meeting
* Helped Regina Debug and get EMADE running on her machine


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs on GCP
|In Progress
|8/17/2020
|8/31/2020
| -
|-
|Repo Refactor
|In Progress
|8/26/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|}

==September 16, 2020==
'''Self Work:'''
* Icehammer run
** Icehammer doesn't seem immediately compatible with our fork
** Seems to call on an illegal operation
** May need to merge in CacheV2 changes faster than expected
* Differential Fitness bugs
** https://github.gatech.edu/gwang340/emade/commit/8d7628f2aafa69e929d18373e1c26bf75360d7e1
** Some quick fixes for typos and other small errors that Aaron left
** Still getting some strange "Cannot connect to mysql database while querying" errors
** Unsure of cause or if it's affecting the process


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|-
|Investigate Pace issue
|In Progress
|9/18/2020
| -
| -
|}


==September 18, 2020==
'''Subteam Meeting:'''
* Rurai has made the EmadeData Pair check, however attempting to run on Differential Fitness leads to some errors
** Need to investigate the issues further with Differential Fitness
* People having issues with Colab
** The mysql website seems to be down?
** Currently trying to see if it'll connect to the server hosted on our local machines
* Trying to fix some issues with Pace
** templates/inputSchema.xsd seems to be incorrect/outdated


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate Differential Fitness Issues
|In Progress
|9/18/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|-
|Investigate Pace issue
|In Progress
|9/18/2020
| -
| -
|}

==September 19, 2020==

'''Self Work:'''
* Asked the NLP team about the pace issue
** Seems that they added some fields to the inputSchema.xsd file on the nn branch
*** https://github.gatech.edu/emade/emade/blob/nn/templates/inputSchema.xsd
** Will need to connect with Kevin to see if the the diffs solve the issue
** If not need to talk with the NLP team again


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate Differential Fitness Issues
|In Progress
|9/18/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|-
|Investigate Pace issue
|In Progress
|9/18/2020
| -
| -
|}

==September 21, 2020==
'''Reflection Rubric:'''

[[files/Notebook reflection.png]]

'''General Meeting:'''
* I want to try to prepare the MNIST dataset for future experiments
** http://yann.lecun.com/exdb/mnist/
** One of our goals for the semester was trying to run on a different non trivial dataset
** May be able to get more interesting results due to the primitives in signal and spatial methods


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate Differential Fitness Issues
|In Progress
|9/18/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|-
|Investigate Pace issue
|In Progress
|9/18/2020
| -
| -
|}

==September 25, 2020==

'''Subteam Meeting:'''
* Asked the NLP team about the pace issue
** Seems that they added some fields to the inputSchema.xsd file on the nn branch
*** https://github.gatech.edu/emade/emade/blob/nn/templates/inputSchema.xsd
** Will need to connect with Kevin to see if the the diffs solve the issue
** If not need to talk with the NLP team again


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate Differential Fitness Issues
|In Progress
|9/18/2020
| -
| -
|-
|Get our fork running on icehammer
|In Progress
|9/4/2020
| -
| -
|-
|Investigate Pace issue
|In Progress
|9/18/2020
| -
| -
|}

==September 27, 2020==

'''Self Work:'''
* Had a work session on the weekend to fix cloud issues
* Set an AWS RDS server to host the MySQL database for Colab
* Wrote a modified version of Jacob and Anish's colab notebooks
** Can now connect to my AWS server and easier to manually upload files
** Current recommended way of running is to run a bash script that copies emade, removes excess datasets, and upload it to google drive
** https://colab.research.google.com/drive/1i_niAH2dxqdsdA-SMU3tYXCOW0DMRUXK?usp=sharing
* Worked with Kevin to try and fix PACE issues
** Seems to be having an issue with the sep package and cpython
** Maybe something wrong with the C compilier? gcc might not be properly installed?
** Less of a priority now that Colab is running
* Worked with Regina to fix various issues and get her colab working
** Waiting for her to run Differential Fitness to see if the server issue was only on my local
* Merged in CacheV2 into a branch
** Needs to be tested
** Hoping can properly run on Icehammer
** https://github.gatech.edu/gwang340/emade/commit/c7719b548497db1eabd6508aa797368df1b73844


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate Differential Fitness Issues
|In Progress
|9/18/2020
| -
| -
|-
|Get our fork running on icehammer
|On Hold
|9/4/2020
| -
| -
|-
|Investigate Pace issue
|On Hold
|9/18/2020
| -
| -
|}

==September 28, 2020==

'''General Meeting:'''
* Seems the NLP team had similar PACE issues with sep
** At the moment, running on PACE isn't as big of a priority since Colab is now working
** Issue can be put on hold
* Similarly, Icehammer issues will also be put on hold as we have a working cloud running
** Want to get back and fix it eventually, but not a major priority
* Want to start more runs and make sure Colab works for everyone
* Rurai found an issue with the EmadeDataPair ARLs
** Appears that any ARL with "ARG" in it is automatically ignored and not created
** This was an intentional design choice when the team was first created, but I don't remember why
** Needs to be investigated
* Differential Fitness runs seem to be working
** Issues seem to be from MySQL operational error, but I don't think I can fix that
** Sometimes it seems EMADE can't connect to the server or the server goes down
** For now, put the issue on hold as it doesn't happen consistently


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate ARG issue and reason for implementation
|In Progress
|9/28/2020
| -
| -
|-
|Investigate Differential Fitness Issues
|Completed
|9/18/2020
|9/28/2020
|9/28/2020
|-
|Get our fork running on icehammer
|On Hold
|9/4/2020
| -
| -
|}

==October 2, 2020==

'''Subteam Meeting:'''
* Fairly quick meeting
* Keep trying to do runs on Colab
* Appears to be a 30 minute idle limit for Colab, even though there is a 12 hour advertised time
* General advice is to setup an autoclicker
** https://stackoverflow.com/questions/54057011/google-colab-session-timeout
* Helped Jacob and Kevin with various issues they had
** Some byte issue with Jacob and the MNIST dataset
** Kevin had some cloning issues with Colab


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate ARG issue and reason for implementation
|In Progress
|9/28/2020
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==October 5, 2020==
'''Self Work:'''
* Investigated ARG issue
** Was an intentional design choice from previous semesters
** The idea is that we take the DEAP individual tree and convert the node names into strings, then let DEAP convert those strings into their proper function forms
** That function is then added to the toolbox/mapping and is treated as a lambda
** However, having "ARG0" in the ARL does not allow DEAP to properly unpack and convert it into a lambda
** DEAP itself creates the ARG0 inputs when running gp.compile and creating the individual
** Since the string "ARG" doesn't map to anything, when creating/modifying individuals with ARG in an ARL it does not properly point to the EmadeDataPair
** Current idea to fix is to create a "partial" ARL where if it sees an ARG in a child node, it now requests an ARG as an input instead of the hardcoded string trying to be converted to a lambda
** Would explain why data augmenting primitives weren't very common in our previous runs, because they would not show up until very late generations where the individuals became more complex

'''General Meeting:'''
* Fixing the ARG issue is the main priority right now, as it appears we won't get any good results until its fixed
** Runs are put on hold until this is fixed
** May need to rerun some experiments once this is fixed
* Kevin and Regina appear to be having issues with seeding
** Says our seeding file is not a proper input? Never seen this issue before
** Needs to be investigated


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Think and experiment with new ARL structure to handle ARGs
|In Progress
|10/5/2020
| -
| -
|-
|Investigate ARG issue and reason for implementation
|Completed
|9/28/2020
|10/5/2020
|10/5/2020
|-
|Investigate Seeding issue
|Not Started
|10/5/2020
| -
| -
|}

==October 6, 2020==
'''Self Work:'''
* Arg fix
** Simply removing the check for "ARG" causes the same issue we had earlier where if isn't properly defined
** Currently thinking of a way to "restructure" the ARL once we find and ARG in it
** Probably going to need to take in ARGs as an argument into ARLs
** Somewhat similar to the partial ARL idea we had before, but specific to ARGs
** Really we're rearranging the primitive tree to condense the ARL nodes and then removing the ARG node, and readding it as a child node to the ARL
** At least this is my current plan for the type of infrastructure I'm planning on implementing

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Think and experiment with new ARL structure to handle ARGs
|In Progress
|10/5/2020
| -
| -
|-
|
|
|
|
|
|-
|Investigate Seeding issue
|Not Started
|10/5/2020
| -
| -
|}

==October 7, 2020==
'''Self Work:'''
* Arg fix
** Currently implementing the structure I described above
** Also making some changes to the adf table in the database
** Trying to store the pickled nodes as well

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Think and experiment with new ARL structure to handle ARGs
|In Progress
|10/5/2020
| -
| -
|-
|
|
|
|
|
|-
|Investigate Seeding issue
|Not Started
|10/5/2020
| -
| -
|}

==October 8, 2020==
'''Self Work:'''
* Arg fix
** The convoluted structure of the adfs.py file is pretty confusing
** I need to refactor it properly after I finish the Arg fix
** Overall pretty happy with the initial idea about infrastructure change
*** Not too big of a change, but useful
** There is difficulty implementing the change from "searching" and finding candidates to actually creating the ARLs in function form

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Think and experiment with new ARL structure to handle ARGs
|Complete
|10/5/2020
|10/8/2020
|10/8/2020
|-
|Implement the "partial" ARL idea for ARGs specifically
|In Progress
|10/8/2020
| -
| -
|-
|Investigate Seeding issue
|Not Started
|10/5/2020
| -
| -
|}

==October 9, 2020==
'''Self Work:'''
* Arg fix
** Continue on implementation and testing
** Getting close

'''Subteam Meeting:'''
* Currently waiting on my ARG fix refactor
* Scheduling a work session for the weekend


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement the "partial" ARL idea for ARGs specifically
|In Progress
|10/8/2020
| -
| -
|-
|Test the "partial" ARL idea
|In Progress
|10/8/2020
| -
| -
|-
|Investigate Seeding issue
|Not Started
|10/5/2020
| -
| -
|}

==October 10, 2020==
'''Self Work:'''
* Fixed Arg issue
** Now functional and ARLs can be formed with Args properly
** Seems to still be some issues with nested ARLs but that seems like a fairly small edge case
** ARLs appear to be of higher quality already
** https://github.gatech.edu/gwang340/emade/commit/01e5ef41613de7b1486f4403b5d12dde99db57e0
* Found the IceHammer issue
** Was something about memory requests
** Memory requested was too large, causing an illegal operation error on IceHammer
** Actually still sometimes happens at work
** Still not much a priority as most of our runs will be done on Colab anyways
** This way more of the team will be involved
** However, icehammer can be leveraged if we ever need to speed up runs in the future

'''Subteam Meeting:'''
* Helped debug any Colab issues
* Since everyone is now running on Colab, I've decided to put IceHammer on standby
** Still a good resource to leverage, but I'd prefer having everyone on a unified platform
* Helped with MNIST dataset
* Seeding issues seemed to be fixed?
** Not sure of the original cause or the reason it was fixed
** I never had any issues on Linux
** Issues on both Mac and Windows


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement the "partial" ARL idea for ARGs specifically
|Completed
|10/8/2020
|10/10/2020
|10/10/2020
|-
|Test the "partial" ARL idea
|Completed
|10/8/2020
|10/10/2020
|10/10/2020
|-
|Investigate Seeding issue
|Completed
|10/5/2020
|10/10/2020
|10/10/2020
|}

==October 12, 2020==
'''Self Work:'''
* Investigated edge cases with the Arg fix and did more testing
* In some cases, ARLs nest around each other without adding any complexity whatsoever
** May need to make a check to make sure new nodes are being added
* Might be a larger issue than originally thought and may involve some architecture changes
* ARLs are all technically lambda functions, but some EMADE functions such as Learner assume that there are certain attributes available to the children
* May want to rearchitecture ARLs to better match what they actually are, i.e. small primitive trees
* Will need to restructure the database
* May actually be able to seed in ARLs if this change is made
* Will likely need to be a larger time investment into this

'''General Meeting:'''
* Merge in Arg fix into the experiment branches
* Try to finish runs of Data Pair limit experiments and Selection method experiments
* Want to complete as many runs as possible before presentation
** Note: Sample size will likely be very small
* Start adding to the presentation slides


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Finish experiment runs for Selection Method
|In Progress
|10/12/2020
| -
| -
|-
|Start working on presentation slides
|Not Started
|10/12/2020
| -
| -
|}

==October 15, 2020==
'''Self Work:'''
* Created alternate gmails for Colab experiment runs
* EMADE is already cloned onto the drive
* Includes a copy of the Colab notebook we're using
* Alt Info
** Username: [mailto:vipmodularity1@gmail.com vipmodularity1@gmail.com]  Password: #Password1  Username: [mailto:vipmodularity2@gmail.com vipmodularity2@gmail.com]  Password: #Password2  Username: [mailto:vipmodularity3@gmail.com vipmodularity3@gmail.com]  Password: #Password3  Username: [mailto:vipmodularity4@gmail.com vipmodularity4@gmail.com]  Password: #Password4

* Added slides to the presentation


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Finish experiment runs for Selection Method
|In Progress
|10/12/2020
| -
| -
|-
|Start working on presentation slides
|In Progress
|10/12/2020
| -
| -
|}

==October 16, 2020==
'''Self Work:'''
* Added slides to the presentation
* Created analysis graphs
* [[files/DataPairLimitMidterm.png]]
* [[files/AlternativeSleectionMidterm.png]]
* Also made P-value graphs, but since the sample size was so small we couldn't glean anything useful from it
'''Subteam Meeting:'''
* Go over the midterm presentation
* Assign slides for everyone
* Get everyone to finish their runs and upload their sql dumps to the google drive

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Finish experiment runs for Selection Method
|Completed
|10/12/2020
|10/16/2020
|10/16/2020
|-
|Start working on presentation slides
|Completed
|10/12/2020
| -
| -
|}

==October 17, 2020==
'''Self Work:'''
* Presentation
* Added suggestions and fixes from advisors

'''Subteam Meeting:'''
* Practice Presentation with Dr. Zutty and Dr. Rohling


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|
|
|
|
|
|-
|Update presentation slides based on feedback
|In Progress
|10/12/2020
| -
| -
|}

==October 18, 2020==
'''Self Work:'''
* Presentation
* Added suggestions and fixes

'''Subteam Meeting:'''
* Practice Presentation 
* Practiced timing and getting everyone comfortable with their parts


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|
|
|
|
|
|-
|Update presentation slides based on feedback
|In Progress
|10/12/2020
| -
| -
|}


==October 19, 2020==
'''Self Work:'''
* Added final touches to the presentation
* Had another practice presentation

'''General Meeting:'''
* Midterm Presentations
* '''''NN'''''
** Rebranding themselves as the NN team, not just the NLP team
** They want to encompass more neural network functionality in EMADE 
** Their current work has all been on text data, such as toxicity, where they have seen similar success
** However, the paper they were originally based off also did tests on a chest x-ray dataset
** So, they want to expand some computer vision primitives and functionality for neural nets
** One way they are looking to approach the chest x-ray problem is by using YOLO to both detect and classify the regions in the picture of the diesease
** They are also running into some issues where individuals aren't really improving and are just at the same poorer accuracy for a while
** Some ideas to improve this are a mutation function which try to encourage individuals performing better than the average fitness of a generation
** Looking into more about elitism and the elite pool to encourage the good individuals more
** Another possible idea is to continually "seed" the population with smaller individuals that perform fairly well  each generation to again encourage and propogate the good individuals in the population
*** Very similar to our ARL implementation, might want to collaborate on this, we might get some good ideas from this
* '''''EzCGP'''''
** Have both a research team and an implementation team, an interesting split
** Finally getting able to test some of their work
** Working on running on PACE
** Implemented some new neural network architectures
** Added some threshold/non-linear blocks
** Want to add more objective/evaluation blocks in the future
* '''''Stocks'''''
** Expanding EMADE regression capabilities
*** Only had 6 learners originally
** Looking for technical indicators in stocks, using trend analysis
** Potentially expand neural network capabilities
** CEFLANN architecture
** Have they worked with the NN team?
** Looking into using something called a genetic label
** More of a classification problem which they will somehow apply to the regression
* '''''First Semesters'''''
** Made a lot of intensive analysis and changes during the runs
** Almost every group was successful in getting a run done
** Some groups still had issues connecting with one another to run as workers
** But overall did good analysis on the inidivduals, why they act they way they act, etc
** Much better than I did as a first semester


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Think of resources to teach first semester students
|Not Started
|10/19/2020
| -
| -
|-
|Update presentation slides based on feedback
|Completed
|10/12/2020
|10/19/2020
|10/19/2020
|}

==October 23, 2020==
'''Self Work:'''
* Looked into the old presentation we used to introduce the students last semester
* https://docs.google.com/presentation/d/1sDmxdZmbImsM4Ke4gE5EYrINyj_S9Jf7c21Xs4bEsBM/edit?usp=sharing

'''Subteam Meeting:'''
* Think of resources for the first semester students


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Prepare resources to teach first semester students
|In Progress
|10/19/2020
| -
| -
|-
|
|
|
|
|
|}

==October 26, 2020==
'''Self Work:'''
* First semester presentation work

'''General Meeting:'''
* Returning students continue doing runs and experiements
* Gave a lecture to the first semesters about EMADE
* Focus was just on EMADE in general, did not get to explain our work completely
* Explained seeding
* Tasking was to clone our fork and start a seeded run


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Prepare resources to teach first semester students
|Completed
|10/19/2020
|10/26/2020
|10/26/2020
|-
|
|
|
|
|
|}

==October 29, 2020==
'''Self Work:'''
* Got a notification of data limits on AWS?
* Investigated
** Doesn't seem to be space issue, we aren't using too much space or computation
** Seems that the free tier allocates the exact number of hours needed in a month
** Hopefully won't affect any runs
** UPDATE: It will break runs in process if they are running at the end of the month

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Investigate AWS Data Limits
|Completed
|10/29/2020
|10/29/2020
|10/29/2020
|-
|
|
|
|
|
|}

==October 30, 2020==
'''Self Work:'''
* Prepared lecture materials

'''Subteam Meeting:'''
* Continued lecture for the first semesters
* This time focused more on the database and ARLs
* Need to make more documentation for ARLs


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Teach first semester students
|Completed
|10/30/2020
|10/30/2020
|10/30/2020
|-
|
|
|
|
|
|}

==November 2, 2020==
'''Self Work:'''
* Made analysis graphs
* [[files/AltSelectionAUC.png]]
* [[files/AltSelectionPVal.png]]

'''General Meeting:'''
* Found significance for the selection method experiment
* Still unsure if it was caused by the data pair change or the actual selection method
** Needs more analysis
* Worried about exploration vs exploitation
** More analysis needed
* Continue doing runs for other experiments
* Help first semesters set up our fork and debug various issues
** Potentially an issue with MySQL 8 compatibility?
** MySQL 5.7 is recommended for EMADE but a python package on Mac requests certain aspects of MySQL 8


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Continue runs for Data Pair Restriction
|In Progress
|11/2/2020
| -
| -
|-
|Analyze Selection Method Results
|In Progress
|11/2/2020
| -
| -
|}

==November 3, 2020==
'''Self Work:'''
* Work session with Jacob to discuss the MNIST dataset
* Explained the overall process for how EMADE loads and processes data
* Discussed whether we wanted to use the imagedata format or some other format
* Hoping to leverage the existing load functions and data formats
* Reached out to Ford about loading image datasets into EMADE
** He uses a slightly different load function and format
** Look into .npz file formats


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Continue runs for Data Pair Restriction
|In Progress
|11/2/2020
| -
| -
|-
|Analyze Selection Method Results
|In Progress
|11/2/2020
| -
| -
|}

==November 6, 2020==
'''Subteam Meeting:'''
* Gave a demonstration of running on Colab for the first semesters
** https://colab.research.google.com/drive/1i_niAH2dxqdsdA-SMU3tYXCOW0DMRUXK?usp=sharing
* Made sure everyone could run Colab and connect to the server
* Explained the worker and master processes 
* Debugged any issues they had on their local
* Set up some time to connect with Jacob to finalize the MNIST dataset work


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|Not Started
|10/12/2020
| -
| -
|-
|Continue runs for Data Pair Restriction
|In Progress
|11/2/2020
| -
| -
|-
|Analyze Selection Method Results
|In Progress
|11/2/2020
| -
| -
|}

==November 9, 2020==
'''Self Work:'''
* Cleaned some of the alternate gmails for more clarity when doing runs
** Removed all unnecessary input templates and files
** May want to make some more
* Work Session with Jacob
* Provided the load function that Ford has been using and explaining how to organize the MNIST dataset
* Hopefully will see results by the end of the week
* Set up group chats to coordinate experiement runs

'''General Meeting:'''
* First Semesters
** Hoping to use them to finish up some runs and then do analysis
** Get them used to the entire experiment pipeline/process

* Experiment Runs
** Assigning everyone to runs to hopefully be more consistent about finishing experiements before the finals
** Differential Fitness
*** Me, Aryender, Vincent, Krithik
** Data Pair limit
*** Ruarai, Ivanna, Weiyao, Bernadette
* Arguments Refactor/Edge cases
** Causing more errors than expected in Kevin's runs
** Will try to fix by the end of the week
** Now a higher priority
* Selection Method
** Basic analysis shows that there is little to no difference between the baseline and the current selection
** Possible that we simply aren't biasing the selection enough or that selection methods is not the best way to propagate ARLs throughout the population
** Possibly think of a mutation method to help introduce ARLs, back to one of our original ideas
** Need a sanity check to show the probabilities of selecting an individual with ARLs
* MNIST
** Take the code changes from CacheV2 and cherry pick into our branch
** Start running the split/fold scripts on the original dataset
** Try loading into EMADE once in the right format and the updated load function


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|In Progress
|10/12/2020
| -
| -
|-
|Continue runs for Data Pair Restriction
|On Hold
|11/2/2020
| -
| -
|-
|Analyze Selection Method Results
|Complete
|11/2/2020
|11/9/2020
|11/9/2020
|}

==November 10, 2020==
'''Self Work:'''
* Started run of Differential Fitness
* Master process on my local and worker process on Colab
* Krithik and Vincent also joined as workers
* Ran to about 45 gens
* Took a little longer than 12 hours
* Some individuals were killed early, but were mainly SVMs so probably won't affect the results too much
* Planning another run in the coming days


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|In Progress
|10/12/2020
| -
| -
|-
|Continue runs for Differential Fitness
|In Progress
|11/9/2020
| -
| -
|-
|
|
|
|
|
|}

==November 13, 2020==
'''Subteam Meeting:'''
* Data Pair limit runs appear to be taking longer than expected
* Current hypothesis is that we are creating more valid individuals and therefore will take longer to evaluate
** Needs to be confirmed
** Some old analysis tools from last semester might be helpful here
* May want to look into making more alternate gmails for Colab runs
* Instead of splitting the group into multiple groups for each run, just focus all our resources on one run at a time
* Make running on Icehammer a priority again
** Should definitely be faster than Colab
** While less interactive for the other team members, it will get us our results faster


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|In Progress
|10/12/2020
| -
| -
|-
|Continue runs for Differential Fitness
|In Progress
|11/9/2020
| -
| -
|-
|Run our fork on icehammer
|Not Started
|11/13/2020
| -
| -
|}

==November 16, 2020==
'''General Meeting:'''
* Again, runs are taking a bit too long for my liking
* Started working on getting fork working on icehammer
** Still getting the "Illegal Instruction" error from icehammer
** Says something is wrong with the bash script at the line where we are running the python file
** Unsure what's causing this, as it is nearly identical to the one I use at work
* Made more alternate gmails for Colab
** Total of 7 now, would have made more but Google hard limited me
** Login info and status included below
** https://docs.google.com/spreadsheets/d/14QViMvS_Y_2uEU0aFmbyAJwNP1soN384TYyX3Nca49A/edit?usp=sharing
** Could be useful for any other team using colab, as long as the accounts have storage on google drive
** Hopefully can be used by the rest of the team to speed up some runs
* Edge case fixes have been put on hold
** Might require more infrastructure changes and testing, a lengthy process
** At the moment, doesn't appear to be doing too much damage
** Current priority is doing runs


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate edge cases for ARG fix
|On Hold
|10/12/2020
| -
| -
|-
|Continue runs for Differential Fitness
|In Progress
|11/9/2020
| -
| -
|-
|Investigate the "Illegal Instruction" error on Icehammer further
|Not Started
|11/13/2020
| -
| -
|}

==November 19, 2020==
'''Self Work:'''
* Worked with Jason to fix the Icehammer issue
** A previous line got commented out which was very important
** Must be run on a machine that supports AVX instructions on icehammer
** The commented line had excluded those machines
** Need to actually update the branch at work as well
* Started 3 runs of Data Pair Restrictions
** Hoping to see results within 24 hours to start more runs


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs for Differential Fitness
|In Progress
|11/9/2020
| -
| -
|-
|Fixed the "Illegal Instruction" error on Icehammer
|Completed
|11/13/2020
|11/19/2020
|11/19/2020
|-
|Continue runs for Data Pair restriction
|In Progress
|11/19/2020
| -
| -
|}

==November 20, 2020==
'''Subteam Meeting:'''
* Everyone is continuing their runs
* Spent the time going over the visualization and analysis tools we use
** Realized very quickly this should be better documented for preservation and clarity's sake
** Basic overview of the process
*** Use emade-viz to connect to the database and calculate values for AUC over every valid generation
*** Those AUC values are exported as CSV files
*** Using those CSV files, use the scripts in the PrimitiveAnalysis branch of our fork to get P-values and graphs
*** Notebook for getting p-values at every generation: https://github.gatech.edu/gwang340/emade/blob/PrimitiveAnalysis/notebooks/P-value-Stats.ipynb
*** Notebook for plotting the AUC comparison graphs: https://github.gatech.edu/gwang340/emade/blob/PrimitiveAnalysis/notebooks/GroupParetoViz.ipynb
*** Everything is a jupyter notebook so just replace some file names and should do the rest for you
*** However, there are a lot of extraneous examples I used, which should be removed for clarify's sake
* Plan to clean code, write more documentation, and possible record it running
** Multiple teammates had asked for a recording, unforunately I didn't have permissions in the Bluejeans call at the time
** Will be noted for next semester
* Also asked for feedback from first semester students for future reference
** Overall were expecting it to be a bit more source code writing
** However, they did appreciate the lectures and tutorial sessions
** Will try to take this feedback for next semester


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs for Differential Fitness
|In Progress
|11/9/2020
| -
| -
|-
|
|
|
|
|
|-
|Continue runs for Data Pair restriction
|In Progress
|11/19/2020
| -
| -
|}

==November 21, 2020==
'''Self Work:'''
* Finished earlier 3 runs of Data Pair Restriction
* Started 7 more runs of Data Pair Restriction on icehammer
* Hoping to finish over the weekend and get results by Monday
* Want to finish Differential Fitness runs after this as well


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs for Differential Fitness
|In Progress
|11/9/2020
| -
| -
|-
|
|
|
|
|
|-
|Continue runs for Data Pair restriction
|In Progress
|11/19/2020
| -
| -
|}

==November 22, 2020==
'''Self Work:'''
* Finished runs of Data Pair restriction
* Started 5 Differential Fitness runs
** There were some issues with some of the runs from icehammer
** Got some MySQL errors
*** Error Code 2013 Operation error
** Appears that in some cases the runs couldn't properly communicate with the server? 
** EMADE does not recover from this error 
*** If the master process error on this, the whole run is basically dead
*** Unsure what happens if the worker errors out
** Unsure of how to fix this, as some runs were affected and other were not
** Our changes occasinally read and write to the database, but I wouldn't expect this to break things?
*** Also happened in the Data Pair restriction runs, which don't read or write to the database outside of what EMADE normally does
** I'm going forward with the assumption that this is simply a server/hardware issue and that our source code isn't causing this
** If this continues and isn't a fluke, maybe bring it up with Jason
* Made a survey for students to get some feedback https://forms.gle/EBNV9ZYzjRUc91oRA
* Started the final presentation slide deck https://docs.google.com/presentation/d/1KU-tlra_DXV93JOS6NjQ5RB24Urj0-M8F99U3YsQQ70/edit?usp=sharing


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Continue runs for Differential Fitness
|Completed
|11/9/2020
|11/22/2020
|11/22/2020
|-
|Work on the Final Presentation Slides
|Not Started
|11/22/2020
| -
| -
|-
|Continue runs for Data Pair restriction
|Completed
|11/19/2020
|11/22/2020
|11/22/2020
|}

==November 23, 2020==
'''Self Work:'''
* Made the analysis graphs from the Data Pair and Differential Fitness runs
* [[files/DataLimitAUCN4Fix.png]]
* [[files/DataPairPValN4.png]]
* Didn't get any statistical significance, but the experiment did not meet up with baseline expectations at the later generations
** Exciting as it may prevent some of the issues we were afraid of
** Overall still appears to be a positive change
** Most of the ARLs created were Filters and learners as expected, which is intutively better
** Maybe the random float changes were useful for the hyperparameter tuning?
*** It's strange that other methods got significance but this one didn't
* Differential Fitness had some runs that were cut short, did analysis on all the data that was cut short, but also with those runs removed so we could see all the generations
* [[files/DiffFitN10.png]]
* [[files/DiffFitPValN10.png]]
* [[files/DiffFitN7.png]]
* [[files/DiffFitPValN7.png]]
* In both cases there were significance, despite having the ARG issues that weren't fixed
* I'd be very excited to see how this would look with the ARG fix or the Data Pair restriction
* Compared the ARLs created by all the different runs
** Baseline
*** [[files/DefaultARL.png]]
** Differential Fitness
*** [[files/DiffFItnessARL.png]]
** Data Pair restriction 
*** [[files/DataPairARL.png]]
** As expected, the baseline had a lot of passes and float changes, with some Modifies which appeared to help
** Differential Fitness had some more interesting primitives from ARLs like FFT and Threshold for data pair manipulations
** Data Pair restriction ARLs are exactly what we want, but maybe wrapping around each other too much?
** However, pareto individuals from the baseline and differential fitness tended to use pass primitives, not the data manipulating primitives
** Haven't looked at the data pair restriction pareto individuals
** Need to look into this, if ARLs are "useful" why aren't they being used?
'''General Meeting:'''
* Focus on finishing any final runs
* Kevin wants to merge in the data pair restriction and selection method to run another experiment
* Prepare analysis and visualizations of results
* Add to final presentation
* Schedule a practice dry run with Dr. Zutty and Dr. Rohling
* Schedule a work session on the weekend to work out any issues and finalize presentation


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Analyze results from Differential Fitness
|In Progress
|11/23/2020
| -
| -
|-
|Work on the Final Presentation Slides
|In Progress
|11/22/2020
| -
| -
|-
|Analyze results from Data Pair restriction
|In Progress
|11/23/2020
| -
| -
|}

==November 27, 2020==
'''Subteam Meeting:'''
* Quick meeting for updates, holiday szn
* Admin stuff like reminding everyone of work sessions and scheduling presentation practice dry runs
* Clarified some questions for the group
'''Self work:'''
* Tried to debug some MNIST issues
** Can be loaded into EMADE but individuals are having issues evaluating
** error(**********Found array with 0 feature(s) […])
** This is because all learners (sklearn models) expect feature data
** Tried using Stream-to-Feature primitives like RMSHole or StandardNorm to convert the image data to feature data for evaluation
** Still doesn't appear to be working?
** New error involves different number of instances vs labels
** Unsure why
** For now did a hacky solution where we flatten the images and pull it from the stream data
** Individuals can be evaluated this way, but I'm not sure if this is right
** Need to connect with Dr. Zutty on the "proper" EMADE way to handle this
** Why do learners only take in feature data?
** Why are the stream-to-feature primitives not working for this?

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Debug MNIST Issues
|"Completed"
|11/27/2020
| -
| -
|-
|Understand how EMADE handles STREAM data
|Not Started
|11/27/2020
| -
| -
|-
|
|
|
|
|
|}

==November 28, 2020==
'''Self Work:'''
* Work session with the team for the presentation
* Guided some first semesters on what they could talk about
** Unfortunately, they didn't have any individual deliverables to present per say
** Most of their constributions were helping with our existing experiements
** I wanted them to focus on future work and next semester
** Helps me understand what they might be interested in working on if they plan to continue
** Helped lead them into certain directions and give context for some areas we could research
* Returning semesters were assigned to the areas they were working this semester and polished stuff up


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Analyze results from Differential Fitness
|Completed
|11/23/2020
|11/28/2020
|11/28/2020
|-
|Work on the Final Presentation Slides
|Completed
|11/22/2020
|11/28/2020
|11/28/2020
|-
|Analyze results from Data Pair restriction
|Completed
|11/23/2020
|11/28/2020
|11/28/2020
|}

==November 30, 2020==
'''Subteam Meeting:'''
* Gave a practice presentation to Dr. Zutty and Dr. Rohling
* Gave the following feedback
** Spend more time explaining the concepts not the results
** Add diagrams/pictures to better highlight the concepts
** Code snippets may be helpful as well, as they generally aren't very long
** Combine some graphs on some slides and make graphs a bit more standalone
** Spend more time explaining why we get significance, not just that we get significance
** Maybe include a table to highlight what our experiments will focus on, especially with what baselines
*** In a previous semester we had a similar table where we compared all the runs to each other
*** However, this semester we mainly seeked to improve the baseline which is why we didn't use the same table
* May be running out of genetic material
** Originally I thought EMADE made a set amount of new individuals per generation, but apparently not
*** New individuals are only made through mating, mutation, and headless chicken probabilities
*** Original ARL paper made new individuals using the ARLs at the end of the generation
*** The team had assumed that if EMADE already made the individuals, just adding them to the pset would allow ARLs to propagate more
*** However since this is not the case, we will likely do what the original paper did and make new individuals from ARLs
**** Also maybe increase headless chicken probabilities or just make random individuals at the end of the generation anyways
*** But since ARLs didn't have the original intended effect, why are they performing better than our baselines?
**** Intuitively locking some components makes sense, as we are exploiting them more, but this very quickly limits the diversity of the population
* MNIST issues
** Now understand how EMADE handles some of the streaming data now
** Our MNIST data format is the same as GTRI's work but that means it's multiclass work
** Our fork has not merged in the multiclass changes, need to merge in CacheV2
** Normal Stream-to-Features got size mismatches due to the multiclass nature of the problem
** Need to make Stream-to-Feature seeds for next semester, still need to better understand what a "normal" individual for image data looks like
'''General Meeting:'''
* Update slides to reflect feedback from practice presentation with Dr. Zutty and Dr. Rohling before final presentation
* Polish presentation

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Final Presentation Slides based on feedback
|In Progress
|11/22/2020
| -
| -
|-
|Understand how EMADE handles STREAM data
|"Completed"
|11/27/2020
|11/30/2020
|11/30/2020
|-
|
|
|
|
|
|}

==December 1, 2020==
'''Self Work:'''
* Sql Dump Issues
** There seem to be version mismatch/OS issues when exporting/importing data
** ERROR 1273 (HY000) at line 25: Unknown collation: 'utf8mb4_0900_ai_ci'
** https://github.com/drud/ddev/issues/1902
** Solved by replacing “'''utf8mb4_0900_ai_c'''i” with “'''utf8mb4_general_ci'''“ appeared to fix it
** Likely need a more unified approach to exporting/importing EMADE runs
** May want to write more documentation for this
** Find a more permanent home for sql dumps
*** Current home: https://drive.google.com/drive/folders/1ENXKnytnomutFTB8U6tSPj-Wt9zIWbHd?usp=sharing
* Made diagrams for the final presentation to explain the ARL process/implementation
** [[files/IndividualExample.png]]
** [[files/ARLCandidateImg.png]]
** [[files/Selected ARLs.png]]
** [[files/AbstractedIndiv.png]]
** [[files/DataPairRestrictExample.png]]


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Update Final Presentation Slides based on feedback
|In Progress
|11/22/2020
| -
| -
|-
|Understand how EMADE handles STREAM data
|"Completed"
|11/27/2020
|11/30/2020
|11/30/2020
|-
|
|
|
|
|
|}

==December 2, 2020==
'''Final Presentations:'''
* '''''NN'''''
** Added DistilBERT as a encoder primitive for NLP purposes
** Acts similar to a feature extractor, put in the beginning of a network, then connect it to a fully connected layer 
** Near state of the art results for toxicity dataset
** Added a adaptive mutation function
*** If an individual performs better than the average fitness for the generation, reduce the probability of mutating
*** If less than optimal, increase the probability of mutation
*** Ideally, we don't want to mutate good individuals, and want to mutate bad individuals
** Also expanding computer vision capabilities as the original paper also ran on a chest x-ray dataset
** Added new thresholding primitives, instead of the global values they are now adaptive based on region which helps with lighting
** Used YOLO for bounded boxes on chest x-ray data, doesn't seem to be part of the branch yet, external to EMADE
*** Using YOLO for classification mainly, bounded boxes are a bonus
** An EMADE NN run for computer vision produced very small individuals
*** EMADE didn't seem to improve the model whatsoever
*** Bruh moment 
** Comparing with CoDeepNeat for another neural architecture search methodology
*** Ran some runs on MNIST and CIFAR-10
*** MNIST was pretty accurate
*** CIFAR-10 was not
** Added the Amazon sentiment dataset
** Might be trying some coevolution stuff
** Didn't end up implementing the seeding small individuals idea
* '''''EzCGP'''''
** Focused on objective scores such as accuracy, recall, and f1 scores
** Genome seeding
*** Save a set number of individuals at a certain generation
*** Used it for a warm start for future runs
** For runs on CIFAR-10
*** Very good fitness scores
*** However, diversity is lacking in later individuals
*** Since transfer learning is leveraged, most individuals just grab the big transfered individuals and add a few layers at the end
**** This seems to be expected right?
** Not too much change after generation 1
*** May be caused by low initial population
*** Also may be caused by transfer learning primitives overperforming
** Diversity methods
*** Aging evolution
*** Old individuals eventually die
*** Increases diversity by pruning individuals that get lucky early
*** Also prevents individual from dominating too much
*** Maybe useful for ARLs as well
** Experiment between block structure vs typical genome experiments
* '''''Stocks'''''
** There were some inconsistencies with the initial paper with their set rules and results
** Switched to genetic labeling, where a model is trained on labels at certain time points in the data
*** Acted too much as an oracle, where it wouldn't generalize well and took advantage of the given rules
*** Tended to sell more as it was assumed that it started with a certain number of shares
** Created a new fitness function for time windows
** Added technical indicator primitives which basically given the time data, try to find indicators of how the prices are doing and reveal trends
** Developed some of their own primitives not in the initial paper 
** Think their model from the initial paper was a fluke
*** Haven't been able to recreate their results
*** Some positive results, but nowhere near the paper's results
*** Used feature data
** Later did runs with stream data
*** Had some better results, but still not close to the paper's
*** Ran out of money very quickly


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==Goals for Before Spring 2020==
'''Self Work:'''
* Integrate all changes together: Differential Fitness, Data Pair restriction, and Selection Method
** Make a new branch, prepare for experiements next semester
* Make more documentation
** ARLs in general should be better documented both on the Wiki and in the code
** Viz/Analysis tools should also get a wiki page/recording explaining how we use them
** Similarly, might be good to record some of the presentations we've given to the first semesters
* Prune/Document certain branches
** Want to preserve almost all the branches as they were used for experiments at some point in time
** Improve naming scheme and set a better standard
*** Prevent names like "new selection" or "better selection" or "intelligent arls"
** Document what the names are/mean
** Any unused branches should be removed
** Think of how to preserve the fork after I leave
*** Our fork of emade-viz was transfered ownership to me, something similar could work with out fork
*** When I leave I could pass ownership to another member or Dr. Zutty
** Aaron attempted to refactor some things last semester
*** Try to test these changes before merging in
*** Also refactor some other issues we've been having
**** Certain architecture changes need a little more testing and fixing for edge cases
*** ADF vs ARL naming
* Test CacheV2 merge / merge NN / integrate with up to date EMADE
** CacheV2 was technically merged in, but I never tested it
** https://github.gatech.edu/gwang340/emade/tree/CacheV2
** Kinda want to see how our changes might help neural architecture changes
** Merge in NN as well and run tests
** Important to think about how to handle ADFs from the original branch
** If this ever wants to be integrated with master EMADE, we should have both ARLs and ADFs
** This is something we're thinking of researching next semester anyways, but it'd be nice to have the basic strcture ready before starting
* Look into adding more genetic material at the end of the generations
** Make more individuals using ARLs
** Make random individuals at the end of the generations
** Make a copy of the individuals the ARL are modifying, both allowing the original to grow and mutate, but also allow ARLs to modularize the individuals
*** Might run into diversity issues
** Increase the headless chicken parameter


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==Goals for Spring 2020==
'''Self Work:'''
* General feedback from survey (https://forms.gle/EBNV9ZYzjRUc91oRA)
** Want to make a deeper dive into the EMADE source code/make bigger changes
** I should clean/comment the code to be more understandable before this happens
* Run experiments on MNIST
** Expecting filters and data pair manipulations to be more impactful on images
** Make a new seeding file to better handle this data
** Better integrate with the proper EMADE method
* Look into how similar the individuals in the final generation are to each other
** Want to understand if we are limited the search of EMADE
** Maybe use something like KNN to measure similarity
** Want this to be ''quantifiable'' in someway
** Want this to be generalizable 
*** Multiple teams at the final presentations brought up the concept of/issues with diversity
*** If possible, might be nice to have as an EMADE Objective
* Look into more heuristics building off differential fitness' success
** NN team has done something comparing an individual's fitness to the average individual's fitness in a generation
** Possibly implement these heuristics as objectives and see their impacts
** Maybe start working with other subteams to see how our changes will affect other applications/problems
* Think of other ways to help propagate ARLs through the population
** Selection Method doesn't appear to be doing what it's intending
** Possibly introduce a mutation to replace data modifying primitives with an ARL
*** NN team had an interesting mutation
** Look into ways to reward novelty to prevent limiting the search
* Look into integrating both ARLs and ADFs
** Need to compare the effects ADFs have on EMADE as well
** Our current baselines are without ADFs or ARLs
** Would be interesting to see the effects of having both in EMADE
** Would be a more time consuming project


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

= Spring 2021 =

==January 25, 2021==
'''General Meeting:'''
* First meeting of the semester
* I'll be leading the Modularity team again
** Two interested students appear to be from other subteams
** Should prepare resources to get them up to speed
* A bit unclear about the underlying goals of the semester, hoping to discuss with interested students to gauge where their interests lie
* Last semester we had some small successes with our infrastructure, there a lot of different directions we could go from here
** Diversity
** ADF integration
** Selection Method Expansion
** Mutation function
** ARL complexity
** More analysis into ARL composition
* As a general note, should produce more documentation this semester, in hopes that anyone continuing this work will have an easy time getting integrated


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Schedule a sub-meeting time
|Completed
|1/25/2021
| -
|1/31/2021
|-
|Review goals/unfinished projects from last semester
|Completed
|1/25/2021
| -
|1/31/2021
|-
|
|
|
|
|
|}

==January 31, 2021==
'''Subteam Meeting:'''
* Had a meeting with all interested students in the Modularity team
* Discuss expectations for what the students want to work on and the direction they want to take the team
** Some students have a fairly solid idea and desire to work on some type of work
*** In particular, there was strong support for the following
**** Selection Method
**** Diversity
**** ARL Complexity
*** The remained of the students were either happy to support the previous work or current work
*** Some students may not be comfortable enough to start forming their own idea of where the team should go
**** I want the team to persist after I leave so put more emphasis on understanding both concepts and codebase this semester
* Discussed how I can provide resources to help with understanding
** Given the virtual nature of everything now, recorded lectures may be beneficial as a resource for everyone
** Also aggregate together resources and explanations for the work done so far
** Many parts of our work are a bit scattered and not as well documented as they should be
** Many students want to read more papers to understand more of the fundamentals of modularity and ARLs
* Set our subteam meeting times for Sunday 2:00 PM EST


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create slides/lecture for Modularity intro
|Completed
|1/31/2021
|2/8/2021
|2/1/2021
|-
|Create slides/lecture for EMADE intro
|In Progress
|1/31/2021
| -
| -
|-
|Create slides/lecture for Source code intro
|In Progress
|1/31/2021
| -
| -
|}

==February 1, 2021==
'''General Meeting:'''
* Discussed semester goals for the team
* What underlying questions do we want to answer?
** Current ARL architecture works and has shown small improvements over a baseline run without ARLs
** However, our current ARL implementation is very basic and works off some assumptions/design choices at the team's founding
** We suspect that by expanding the complexity of ARLs we will be able to get better results
** Other areas of research may also help with the improvement of ARLS
** Particularly continuing selection method work
** Diversity objectives our heuristics within EMADE or as standalone tools would be useful to have and work on
** Look towards experiments on other datasets such as MNIST once our architecture is more mature
* Tasking is to perform a literature review for the week
** Students still aren't very set on what they'd like to do and require more understanding of the existing literature and concepts
** Everyone will find a paper that interests them, then they will bring it to the next subteam meeting where we'll discuss the paper
** Think about concepts that may be interesting or how their application can be applied to EMADE
'''Self Work:'''
* Recorded bluejeans "lecture" to help explain basic modularity concepts and potential ideas of where to start researching
* Planning to make more lecture for explaining EMADE's source code and the modularity team's code base
* https://bluejeans.com/s/GaOjlZ5qu3P
** Note: I'm not sure how long these recording will persist
** Maybe the recording will get deleted after a set amount of time or after my GT account gets deleted? Not sure
** Videos can be downloaded so may find a more stable repository for these resources


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create slides/lecture for EMADE intro
|In Progress
|1/31/2021
| -
| -
|-
|Create slides/lecture for Source code intro
|In Progress
|1/31/2021
| -
| -
|-
|Read and summarize a paper for the subteam meeting
|Completed
|2/1/2021
|2/7/2021
|2/6/2021
|}

==February 6, 2021==
'''Self Work:'''
*Literature Review
*Found a paper related to neural network modularity concepts and summarized it
** [https://link.springer.com/article/10.1007/s10462-019-09706-7 A review of modularization techniques in artificial neural networks]
*** Amer, M., Maul, T. A review of modularization techniques in artificial neural networks. ''Artif Intell Rev'' '''52,''' 527–561 (2019). https://doi.org/10.1007/s10462-019-09706-7 
*** The focus is more on modular neural networks (MNNs) which have a more graph structure compared to EMADE's tree structure, but still has some interesting ideas that we can glean a lot from, and the concept of MNNs may be useful for neural architecture search for the teams that are focused on that research
*** The paper classified modularization techniques into four major classes, where each class represents the neural network attribute manipulated by the technique to achieve modularity, so the following MNN operations are split into the following four classes:
***# Domain: this is the input space or the data an MNN operates on, which in turn defines and constrains the problem we are trying to address.
***# Topology: this corresponds to an MNN’s architecture, which reflects the family of models that an MNN expresses.
***# Formation: this is how an MNN is constructed and what process is used to form its components.
***# Integration: this is how the different components of an MNN are composed and glued together to form a full network.
***# [[files/A review of modularization techniques in artificial neural networks.png]]
*** Modularization techniques operating on the domain tend to act by finding a good partitioning of the input data, to which different modules can be assigned. This is the most similar with what we are hoping to achieve with EMADE in regards to data manipulating primitives
**** We might be able to take this step further by finding good combinations of domain modifying primtives and learners that perform well in the domain
*** Topology will likely just be finding the types of the learners that perform well in the domain, again, our modularization technique would likely combine the domain and topology step
*** The formation step should just be traditional GP tree structures, not expecting too much change here
*** Integration may be interesting as when we are forming individuals, we can use mutations to help integrate certain modules into individuals
*** Neural networks are directed graphs, so most research in regards to modularization neural networks is how to cluster or partition the nodes into modules, where each module has dense connectivity between its nodes and sparse connectivity with nodes in other modules
**** While this may not be the best comparison with our work due to the tree structure of EMADE, it is worse thinking about other ways to find possible modules outside of our current methodology
**** Could do more research into graph partitioning, and subsequent research on subtree partitioning
**** However, sociological approaches have focused more on the problem of community structure detection, which consists of the analysis of a network in an attempt to detect communities or modules, where the algorithm does not pre-specify the number or size of groups
***** Has shown more success in a neural network context
**** Another paper written by Newman, (need to find), introduces a modularity measure and was used to either guide the detection process towards the best graph division or evaluate the quality of the resulting partitioning. The logic behind the formula is that a good network division is one that places most of the network edges within groups, whilst minimizing the number of edges between groups
* Look into the Newman paper and the potential of numerically measuring modularity

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create slides/lecture for EMADE intro
|In Progress
|1/31/2021
| -
| -
|-
|Create slides/lecture for Source code intro
|In Progress
|1/31/2021
| -
| -
|-
|
|
|
|
|
|}

==February 7, 2021==
'''Subteam Meeting:'''
* Went over literature review with everyone
** Everyone discussed the papers they found and put their summaries on the subteam update
** Angela- [https://www.sciencedirect.com/science/article/pii/S0020025520302632 Asymptotic resolution bounds of generalized modularity and multi-scale community detection]
** Xufei- [https://ieeexplore.ieee.org/abstract/document/7748328 A Survey of Modularity in Genetic Programming]
** Vincent- [https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.152.9427&rep=rep1&type=pdf A Brief Overview of Population Diversity Measures in Genetic Programming]
** Kevin- [https://link.springer.com/chapter/10.1007/978-3-540-88906-9_54 Mutation Only Genetic Algorithms]
** Ivanna- [https://www.researchgate.net/profile/Michael_Emmerich/publication/235412985_On_Quality_Indicators_for_Black-Box_Level_Set_Approximation/links/0c960514cad7fc4ead000000.pdf On Quality Indicators for Black-Box Level Set Approximation]
** Bernadette- [https://dl.acm.org/doi/pdf/10.1145/3376916 Indicator-based Multi-objective Evolutionary Algorithms: A Comprehensive Survey]
* After the literature discussion we discussed our feelings on the direction of the team and what everyone's expectations were
** Surprisingly everyone wanted to focus on the ARL architecture and expanding its complexity
** While there was obviously interest in other research areas like diversity and selection methods, we felt that the architecture should be expanded more before we look into those
** So for the coming weeks, likely until the midterm, the entire subteam will be focused on expanding the ARL architecture
* Students requested a place to document our future ideas, even though we're focusing on architecture right now, they want to gather resources and write down descriptions on what they hope to work on in the future, look into making a new wiki page for our team like we used to have for the ADF team


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create slides/lecture for EMADE intro
|In Progress
|1/31/2021
| -
| -
|-
|Create slides/lecture for Source code intro
|In Progress
|1/31/2021
| -
| -
|-
|Create a better wiki page for Modularity work
|Completed
|2/7/2021
| -
|2/8/2021
|}

==February 8, 2021==
'''General Meeting:'''
* Spend the week reading over everyone's papers
** Want a greater understanding of the literature, the discussion session wasn't really enough since not everyone read the same papers
** Still encouraging looking for more papers
* Intro to Sphinx for documentation
** Sphinx is an automated way to create easy documentation for our code
** Makes API like docs for all methods and gives us the option to create guides and example for using our code
** Based on restructured text and the package
** An example of this would be on the ATR-Records branch on the master EMADE
** Possibly cherry-pick commits into our fork or just copy the folder
** Need to spend time exploring how to use it, as no one on the team is currently familiar with it
* Look into CoDeepNeat, as it has some interesting modularity concepts in it
** If any questions reach out to the NN team as they spent the previous semesters implementing a basic version of CoDeepNeat but not with a focus on modularity
'''Self Work:'''
* Created the [[Modularity]] subteam page as an aggregation spot for our work
* Sphinx will still likely be our source of documentation for our codebase
** Since we're creating documentation and it allows for members of the team to become more familiar with the codebase, I think Sphinx in general will be more useful than just recorded "lectures"
** Lectures will probably be put on hold until the first semester join then, as I think they'll still be useful just not as much at the moment
* The subteam page will be a source of resources, literature, and better description of out team goals

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create slides/lecture for EMADE intro
|On Hold
|1/31/2021
| 2/8/2021
|2/8/2021
|-
|Create slides/lecture for Source code intro
|On Hold
|1/31/2021
| 2/8/2021
|2/8/2021
|-
|Explore Sphinx
|In Progress
|2/8/2021
| -
| -
|-
|Read teammate papers
|In Progress
|2/8/2021
| -
| -
|-
|Read CoDeepNeat
|Completed
|2/8/2021
| -
|2/9/2021
|}

==February 9, 2021==
'''Self Work:'''
* Read the CoDeepNeat paper
** Summary: TBA
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|Explore Sphinx
|In Progress
|2/8/2021
| -
| -
|-
|Read teammate papers
|In Progress
|2/8/2021
| -
| -
|}

==February 12, 2021==
'''Self Work:'''
* Added our current literature to the [[Modularity]] team page
** Not fully complete, hoping for it to be a proper annotated bibliography at some point
* Also added our previous semester presentations and recordings to the team page
* Notebook reflection
* [[files/SelfReflectGwang2021Feb.png]]
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|Explore Sphinx
|In Progress
|2/8/2021
| -
| -
|-
|Read teammate papers
|Completed
|2/8/2021
| -
| 2/12/2021
|}

==February 13, 2021==
'''Self Work:'''
* Added to the Modularity Subteam Page
** Added an indepth description of our team and goals
** Added current, previous members wiki links and our meeting links
** Expanded the descriptions of our current tasking and goals
** Put brief descriptions of some potential future work for this semester 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|Explore Sphinx
|In Progress
|2/8/2021
| -
| -
|-
|
|
|
|
|
|}


==February 14, 2021==
'''Subteam Meeting:'''
* Review of codebase and exploration of Sphinx
* Explored the codebase more, specifically the adfs.py file
** Explained the current methods in the code and the general process for ARLs 
** Discussed the weaknesses of the existing architecture and brainstormed some ideas for how we could fix it
** Thought of other solutions that may be able to add more complexity to ARLs
* [https://bluejeans.com/s/MkVzKyIhA0q Recorded Session]
'''Self Work:'''
* Repository Cleanup
** Deleted some old unused branches in the github fork
** We have a lot of branchs on the fork, but most of those are from old experiments so I'd like to preserve them
** But having so many is still confusing so I should properly document them somehow

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Brainstorm ideas for complexity for ARLs
|In Progress
|2/14/2021
| -
| -
|-
|
|
|
|
|
|-
|Explore Sphinx
|In Progress
|2/8/2021
| -
| -
|-
|
|
|
|
|
|}

==February 15, 2021==
'''General Meeting:'''
* Kevin is focusing on the complexity problem
* Everyone else is getting familiar with Sphinx and our codebase
* Scheduing a work session on the weekend to try and finish the sphinx documentation

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Brainstorm ideas for complexity for ARLs
|In Progress
|2/14/2021
| -
| -
|-
|
|
|
|
|
|-
|Explore Sphinx
|In Progress
|2/8/2021
| -
| -
|-
|
|
|
|
|
|}

==February 19, 2021==
'''Self Work:'''
* Explored Sphinx functionality and prepared basic materials for work collaboration session
* Added in the guides example from ATR-Records
** https://github.gatech.edu/gwang340/emade/commit/b4fdf7b052c408c1f077343d222dac3a6546e9ef
* Added a basic template for the ARL guide that we'll eventually create 
** https://github.gatech.edu/gwang340/emade/commit/a319d5b316e26355a414857642de93a4d9d53dcb
* All the methods in the adfs.py file need proper docstrings to work with Sphinx

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Brainstorm ideas for complexity for ARLs
|In Progress
|2/14/2021
| -
| -
|-
|
|
|
|
|
|-
|Explore Sphinx
|Complete
|2/8/2021
| -
| 2/19/2021
|-
|Finish documentation using Sphinx
|In Progress
|2/19/2021
| -
| -
|}

==February 20, 2021==
'''Subteam Work Session:'''
* Sphinx Collab
* Assigned methods for everyone present based on importance and difficulty
* EMADE related methods like update_representation were my responsibility, as well as smaller helper methods
** diff_adf_pools
** clean_population_info
** update_representation_with_adf_pset
** update_representation
** find_height
** init
** register_database
* Documentation should be done by Monday, hopefully

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Brainstorm ideas for complexity for ARLs
|In Progress
|2/14/2021
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|Finish documentation using Sphinx
|In Progress
|2/19/2021
| -
| -
|}

==February 21, 2021==
'''Subteam Meeting:'''
* Discussed and reviewed documentation that was written
* Since documentation is nearly completed, now we move on implementing the architecture changes we discussed
* Split into groups based on tasking interests 
** One group will be focused on adding complexity to ARLs
*** Adding greater depth trees
*** Adding "partial" subtrees instead of complete subtrees
*** Kevin, Vincent, Bernadette, and Xufei
** Other group will be focused on database-focused changes
*** We want to be able to store the ARL expressions as the picked tree object instead of relying on lambda functions
*** Ideally, if we see an ARL node while evaluating, we'll replace the node with the subtree (expansion) then after evaluation is done, we contract it back into the ARL form again
*** If we store the tree format in the database, they effectively become tiny individuals
*** We can then treat it as a second evolutionary problem and can do some interesting things with the ARLs like mating, mutation, co-evolution, etc.
*** Gabe, Ivanna, Angela
'''Self Work:'''
* '''Genetic duplicates''' - came up with the idea after the meeting. ARLs themeselves are a convergence tool, we find useful portions of an individual and exploit the fact that we know they are useful. However, since we are "locking" portions of the individuals and preventing them from being changed, we worry that we are limiting the searching capabilities of EMADE. Particularly in smaller individuals, if we continue to abstract away portions of the individual, we may reach a point where some individuals can simply not be modified anymore. This scenario is "running out of genetic material" as we constricted the gene pool too much, a genetic bottleneck as you will. So this idea is stating that instead of replacing the individual in the population with a version compressed using ARLs, we keep both versions, the original complete individual tree as well as the abstracted ARL version. This is effectively a "genetic duplicate" as the functions themselves are effectively the same. However, the original individual can continue to mate and mutate freely like before, whereas the ARL version can exploit the existing discoveries and prevent destructive changes fro occurring. Hopefully this will mitigate our worries of running out of genetic material and allow the best of both worlds, greater exploration and exploitation. However, I expect more computation required, as we are adding more individuals to the population. 
* '''New genetic material insertion''' - A similar idea to the above. Currently, EMADE only creates "new" individuals using the primitive set when creating the initial population, and never again. The main way new individuals are created is using mating and mutation. However, mating doesn't really create new genetic material, as all of the material was initially created by the parents, so no real new genetic material is created. Mutation on the other hand, does allow for random portions of the individual to be replaced with something new, however, the mutation probability is generally low because we don't want our changes to be too destructive. There is another method, called Headless Chicken, where I believe that random individuals in the population are replaced with a new randomly created individual, like how the initial population was initialized. Our worst fear with ARLs is overexploitation and running out of genetic material. So I propose that we create a certain number of new individuals after every generation to allow more genetic material to be introduced, and to allow for ARLs to better propagate through the population, as they are primitives themselves. The original literature did something similar, where at the end of every generation they would create new individuals that used the ARLs they created. 
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Brainstorm ideas for complexity for ARLs
|In Progress
|2/14/2021
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|Finish documentation using Sphinx
|In Progress
|2/19/2021
| -
| -
|}

==February 22, 2021==
'''General Meeting:'''
* Discussed how we wanted to architecture finding the ARLs
** Jason mentioned that frequency is likely very important as they'll likely be "good"
*** Why we agree and disagree. Fitness is a good indicator of usefulness, which is why our original architecture only used frequency. However, in our past experiments, only using frequency tended to favor very small ARLs, which is the opposite of what we want. Also, in the only architecture, it favored pass functions and generally not very useful primitives, as they showed up the most frequently. The original literature also supports this, which is why they used differential fitness as a heuristic instead of frequency. However, this does not account for our new restriction that forces ARLs to be the input and output of every ARL. So it's worth investigating, as our results will likely change as now we likely won't get bloat in our ARLs anymore.
** Multi-objective Weighting function
*** We want to encourage larger ARLs but also frequent ARLs. Our current method uses a similar method, where the probability of an ARL candidate being selected is based on the average fitness of the individuals its found in, as well as the frequency the ARL appears in the population. But if we want to encourage larger ARLs, then we should include the size of the ARLs in the weighting probability function
** Edit distance may be another useful metric to include in the search function or the weighting functions to measure similarity between trees
'''Self Work:'''
* Added more to the Modularity Wiki page with a section dedicated to the names and descriptions of all the branches in our fork currently
* Finished my documentation, reviewed others' documentation, and pushed up changes
** https://github.gatech.edu/gwang340/emade/commit/b1920efc802e382dddff868936fd4d5142dc5189

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Brainstorm ideas for complexity for ARLs
|In Progress
|2/14/2021
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|-
|Finish documentation using Sphinx
|Completed
|2/19/2021
| -
|2/22/2021
|}

==February 28, 2021==
'''Subteam Meeting:'''
* Discussed specific tasking and progress
** Depth problem group has specific tasks ready, just needs to be implemented
** The database team is still a bit confused, need to explain things more conceptually and point them to the correct places in the source code
*** Spend time discussing the reasoning behind why we want to store things differently in the database, why we'd want genetic duplicates, and we we're afraid of running out of genetic material in smaller individuals, so we can try adding more individuals at the end of the generation
'''Self Work:'''
* Looked into a Database tree evaluator issue, I believe the cause is that I pulled in some sql_connection_orm changes from CacheV2 and the tree evaluator is still expecting the old version. But it could also be how we changed the evaluate function with our ARLs. Not fully sure why yet, should be completed before the week ends

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Brainstorm ideas for complexity for ARLs
|Complted
|2/14/2021
| -
|2/28/2021
|-
|Fix Database tree evaluator
|In Progress
|2/28/2021
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 1, 2021==

'''General Meeting:'''
* Continue working on the tasks we set out to do last week 
** Depth problem
*** Everyone appears to be tasked with a specific portion of the process
*** Finding ARL candidates in the population - Kevin
*** Selecting ARLs based on our weighting formula based on frequency, fitness, size, and potentially others
*** Generating ARLs into the lambda function
** Genetic duplicates - branch and TODOs created for Angela
** Database storage - branch and TODOs created for Ivanna
** Finish documentation and get feedback
** Expecting implementation for all tasks to be done and testing to occur on Sunday
'''Self Work:'''
* I'll be responsible for the task of inserting new genetic material at the end of each generation
** I'll try to create a certain number of new random individuals every generation (like the initial population)
** Planning to set the parameter in the xml templates
** Might be interesting to have it automatically increase or decrease based on diversity, but that's far future work
* Added more to the Sphinx guides, awaiting feedback
** https://github.gatech.edu/gwang340/emade/commit/94982e9e93293c68c7fe02e3bd0f0bddcf4c3cdc
* Created proper TODOs in the correct files for Angela and Ivanna
** Should help them understand where to edit
** Database storage of ARLs: https://github.gatech.edu/gwang340/emade/commit/c982e47d2cb180e076685793701dc68c7cc71570
** Genetic Duplicates: https://github.gatech.edu/gwang340/emade/commit/cadd56e96a0b71796c0fd911f6e795e65cc76443

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement new individual insertion
|Not started
|3/1/2021
| -
| -
|-
|Fix Database tree evaluator
|In Progress
|2/28/2021
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 7, 2021==
'''Subteam Meeting:'''
* Continue working on the tasks assigned
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement new individual insertion
|Not started
|3/1/2021
| -
| -
|-
|Fix Database tree evaluator
|In Progress
|2/28/2021
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 8, 2021==
'''General Meeting:'''
** Got feedback on Sphinx Documentation, need to add more guides on Differential Fitness and Selection Method work
** Depth Problem
*** All individual components are written, needs to be merged and tested
*** Basically finding candidates, selecting candidates, converting to lambda, and contracting ARLs should all work individually
*** Once testing is finished, we can hopefully run some experiments
** Genetic Duplicates
*** Looking into an easy way of duplicating rows in the database so we don't have to re-evaluate the duplicates, if not we'll rely on the prewritten insert methods
** Database Storage
*** Designing the architecture for this

'''Self Work:'''
* Added genetic insertion
** https://github.gatech.edu/gwang340/emade/commit/c50e431e37c06a01283995a971b5cfe742151c90
** Added new parameters to insert new randomly created individuals at the end of every generation
** ARLs can also be in these newly created individuals since they're in the primitive set
** Functionality appears to be working
** Not sure if I should update the History table? Would I run into divisible by 4 errors if something happened?
* Dropped the database tree evaluator task as it for proper testing with ARLs we would need to be able to seed arls but that functionality isn't added yet

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement new individual insertion
|Completed
|3/1/2021
|3/8/2021
|3/8/2021
|-
|Fix Database tree evaluator
|On Hold
|2/28/2021
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 14, 2021==
'''Subteam Meeting:'''
* Continued the assigned tasking
* Prepare for midterm presentations
* Try to start runs if the ARL restructuring is complete

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare midterm presentation slides
|Completed
|3/14/2021
|3/22/2021
|3/22/2021
|-
|
|
|
| 
|
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 15, 2021==
'''General Meeting:'''
* Work on presentation slides
* Planning on scheduling a practice presentation with Dr. Zutty and Dr. Rohling

'''Self Work:'''
* Minor bug fix
* https://github.gatech.edu/gwang340/emade/commit/3288018e856d7378a30fc759e2322e224400cf4a

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare midterm presentation slides
|Completed
|3/8/2021
|3/22/2021
|3/22/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 20, 2021==
'''Self Work:'''
* Added slides to the presentation
* https://docs.google.com/presentation/d/1iaC5dHYX7G-NWuCAFjjVVzKHMm7NUCk_kHP72tQmZc4/edit?usp=sharing

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare midterm presentation slides
|Completed
|3/8/2021
|3/22/2021
|3/22/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 21, 2021==
'''Subteam Meeting:'''
* Practice Presentation Session
* General feedback is less text
* Include more visualizations
* Make the slides more standalone

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare midterm presentation slides
|Completed
|3/8/2021
|3/22/2021
|3/22/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 22, 2021==
'''Midterm Presentations:'''
* Modularity
** https://docs.google.com/presentation/d/1iaC5dHYX7G-NWuCAFjjVVzKHMm7NUCk_kHP72tQmZc4/edit?usp=sharing
* Stocks
** Made technical indicator primitives
** KNN was the best non-seeded individual
** Inconsistent but good results
** Doesn't use technical dataset
** New price datasets
** Seeded individuals were custom regression models with technical indicators
* EzCGP
** Improved Neural architecture search
** Diversified population
** Transformers as primitives
** RNN models
** Different architectures
** Removing augmentation/preprocessing blocks
** Tended to perform better
*** Invert, blur, rotate
* NLP
** Focusing more on NLP and exploring why there are trivial solutions produced
** New dataset, amazon reviews sentiment analysis, text data, but binary classification
** Balanced dataset
** Got benchmark results for LSTM and fasttext
** Lots of primitives are failing
** Not finding good solutions off unseeded runs
** Want to try pytorch integration 
* Bootcamps
** Feature selection
** Tried different selection methods
** "Blended" sklearn models together
** Tried modifying objective functions

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare resources for first semester students
|Completed
|3/22/2021
|3/29/2021
|3/29/2021 
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 28, 2021==
'''Self Work:'''
* Feedback forms
* Returning students: https://forms.gle/heZ94qqmEezg3fqB9
* First semesters: https://forms.gle/CL4yF1njg6ahT7dK6

'''Subteam Meeting:'''
* Prepare resources to prepare first semester students
* Prepare to do MNIST benchmarks

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare MNIST runs
|Completed
|3/28/2021
|4/1/2021
|4/1/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 29, 2021==
'''General Meeting:'''
** Starting Benchmark runs of MNIST
*** Multiclass False Positives/Negatives seem to be outdated?
** Quick literature review to determine what's feasible to complete before the semester ends
** Depth Problem
*** Continue Testing
** Start introducing first-semester students to the team

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare MNIST runs
|Completed
|3/28/2021
|4/1/2021
|4/1/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 30, 2021==
'''Self Work:'''
* MNIST exploration
* Prepare dataset and splits for EMADE, done preliminary testing
* Didn't like the previous implementation where the labels had to be one hot encoded

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare MNIST runs
|Completed
|3/28/2021
|4/1/2021
|4/1/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==March 31, 2021==
'''Self Work:'''
* Continue explaination of our team to the first semester students

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare MNIST runs
|Completed
|3/28/2021
|4/1/2021
|4/1/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 1, 2021==
'''Self Work:'''
* Modified the 'image_data' EMADE type
* https://github.gatech.edu/gwang340/emade/commit/13c6545bcd7b689a1faff55c986159fa20f8c4aa
* https://github.gatech.edu/gwang340/emade/commit/3071b0bb625afe051099281899a323b08e3576aa
* Colab Notebook update
* More clear instructions to prepare for MNIST
* https://colab.research.google.com/drive/1i_niAH2dxqdsdA-SMU3tYXCOW0DMRUXK?usp=sharing 

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Prepare MNIST runs
|Completed
|3/28/2021
|4/1/2021
|4/1/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 3, 2021==
'''Self Work:'''
* Colab Windows problem
* Issue with Windows line endings vs UNIX line endings
* Worked with Rishit 
* Run the following lines to quickly convert from windows line endings to Unix endings, when run on a unix machine
** sudo apt install dos2unix
** find . -type f -print0 | xargs -0 dos2unix

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Do exploratory MNIST runs
|Completed
|4/3/2021
|4/5/2021
|4/5/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 4, 2021==
'''Subteam Meeting:'''
* Continue running exploratory MNIST runs to see what we can learn from the dataset
* Continue to try to fix the Depth problem as soon as possible
* Discussed goals for the remainder of the semester


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Do exploratory MNIST runs
|Completed
|4/3/2021
|4/5/2021
|4/5/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 5, 2021==
'''General Meeting:'''
** Continue Benchmark runs of MNIST
*** As people continue to do runs, do some analysis on the results, as this is our first attempt using streamdata and multi-class classification
*** Multiclass False Positives/Negatives seem be bugged according to Alex and Anish, currently using F1 score and Accuracy score as objectives
** Rest of semester will be focused on doing experiments and doing analysis
*** Team didn't want to start a larger project like diversity due to time constraints
** Depth Problem
*** Continue Testing
*** Work session today

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Do exploratory MNIST runs
|Completed
|4/3/2021
|4/5/2021
|4/5/2021
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 7, 2021==
'''Self Work:'''
* Fixed changed up to contracting the ARL
* They are being properly found and generated 
* https://github.gatech.edu/gwang340/emade/commit/aa08c16cd47eca763d86beefae385d1012c7544c

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 9, 2021==
'''Self Work:'''
* Work session to fix architecture for ARL depth
* https://github.gatech.edu/gwang340/emade/commit/e64ab0d782221b46ed87e5f4d589767eefe3fcf4
* https://github.gatech.edu/gwang340/emade/commit/12a3cd2fad063af044e37d6f29fba0891aae9cde
* https://github.gatech.edu/gwang340/emade/commit/78c289e241fc58f22c1b10583e71cbbfd673befb

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 11, 2021==
'''Subteam Meeting:'''
* Members were having issues with the database restructuring
** Basically had no idea how to start and needed a more detailed explanation
* Not many valid individuals from MNIST
** Explore the cause
* Depth problem is still being worked on


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 12, 2021==
'''General Meeting:'''
** Current findings from MNIST
*** Not too many valid individuals appear to be created
*** Current setup has ~4 seeded individuals, with a Stream-to-Features primitive acting on the datapair
*** Best run had about 15 valid individuals out of 900+
*** Any good multiclass objectives? Currently using F1-score, and accuracy score happened to be identical.

**Depth Problem/Added complexity
*** Functions are properly being found and lambdas are being created
*** Currently working on contracting those ARLs in individuals and integrating genetic duplicate code
*** Question about learnerType, they don't appear in the primitive mapping. Are they treated as terminals? Or some other type? Where are they stored and how are they propagated?
**** Might be causing a bug with the original architecture too
** Added more members to database restructuring tasking
*** Lots of unintentional confusion, need more indepth discussion on structure and tasking, discussion plan taking place later this week


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 17, 2021==
'''Self Work:'''
* Presentation on Database restructuring
* More people are now tasked with this project
* There is now a better understanding of the project and goals
* However, with the remaining time left in the semester I doubt it will be finished by then


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 18, 2021==
'''Subteam Meeting:'''
* Still not getting too many valid individuals on MNIST
* Possible ways to improve this
** Better seeded individuals from the ones we found in exploratory runs
** Better objectives so we can use the elite pool
** Nonequal objectives
** Tasked first semester students with this
'''Self Work:'''
* Work session with Kevin and vincent
* Fixed up to contraction
* https://github.gatech.edu/gwang340/emade/commit/da4c41b32d56ee3c8ed14ff818879a3f8a734e55

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 19, 2021==
'''General Meeting:'''
** Current findings from MNIST
*** Still not consistently getting too many valid individuals, though possible
**** Likely due to identical/poor objectives and poor seeds
*** First semesters have been assigned to creating new objectives for multiclass classification problems with non-encoded truth
*** First semesters also assigned with finding better individuals to seed with

**Depth Problem/Added complexity
*** ARLs are properly being created, added to the database and primitive step
*** Appear to be some edge cases that need to be addressed during creation, i.e. single nodes turning to ARLs
*** Some other edge cases with contraction in the population
*** Planning to fix those bugs today, start runs this week

** Database restructuring tasking
*** Everyone tasked and looking into the correct sections of EMADE

** Final presentation goals
*** Get seeding/objectives done ASAP
*** Start runs on IceHammer ASAP
*** Clean analysis tools
*** Prepare documentation
*** Prepare for final presentations and present findings from new architecture and MNIST

'''Self Work:'''
* Work session with Kevin and Vincent
* Generated ARLs have some minor issues
* https://github.gatech.edu/gwang340/emade/commit/4fa8a5ab43503c508cd715cb5af1cdd0d91d4337
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 25, 2021==
'''Subteam Meeting:'''
* New objectives and seeds have been merged
* Start more official runs with the new stuff
* First semester students will focus on baseline runs
* Returning students will focus on runs with our old architecture
* Kevin and I will fix our new architecture and do runs
'''Self Work:'''
* Work session with Kevin to fix ARLs
* Better contraction 
** https://github.gatech.edu/gwang340/emade/commit/367f0efa8d7d4872295a259cac37d8ab06bb1f51
* Cherry Picked MNIST seeding file and objective
** Did not merge the branch as someone committed large files, along with their changes
** https://github.gatech.edu/gwang340/emade/commit/229195d3416c956fce7811aa6c03bb799391a4d5
** https://github.gatech.edu/gwang340/emade/commit/5a00ac766ede595556c7eb6149ed0c9e7d28a6dc

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 26, 2021==
'''General Meeting:'''
* Wrap everything up
* Get presentations ready
'''Self Work:'''
* Work session with Kevin

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix the ARL depth bugs
|Completed
|4/5/2021
|4/28/2021
|4/28/2021
|-
|
|
|
| 
| 
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 28, 2021==
'''Self Work:'''
* Final implementation testing for ARLs
* https://github.gatech.edu/gwang340/emade/commit/83c9be85e9a0b879fd5855bc52ced6cf2df9d632
* https://github.gatech.edu/gwang340/emade/commit/909b7971491e5fc13b4b06e94ce520d9ba5582e7
* https://github.gatech.edu/gwang340/emade/commit/67f3ab8f84150a21df58940e293a759e7c1c179a
* https://github.gatech.edu/gwang340/emade/commit/13d07c54a833dd1af7181fd7184c55c800c94a23



'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Start runs with new ARLs
|Completed
|4/28/2021
|4/30/2021
|4/30/2021
|-
|-
|-
|-
| -
| -
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 29, 2021==
'''Self Work:'''
* Practice presentation session
** Really just provided more guidance and tasking for what I expect on the presentation
* Icehammer runs
** MNIST runs with new ARLs
** Titanic runs with new ARLs


'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Finish runs on Icehammer
|Completed
|4/28/2021
|4/30/2021
|4/30/2021
|-
|Finish Presentation slides
|Completed
|4/30/2021
|4/30/2021
|4/30/2021
|-
|
|
|
|
|
|-
|
|
|
|
|
|}

==April 30, 2021==
'''Self Work:'''
* Presentation practice session
** Timed things and gave feedback
* Added slides, rearranged things for better flow, produced final graphs
* Realized I forgot to merge in the data pair check in the mnist branch
* Had to speed run 3 trials on MNIST
* Produced the AUC graphs
** Opted not to include p-values as there weren't enough trials
* https://github.gatech.edu/gwang340/emade/commit/6172833c8ffcfe781aa4ff719e13ae32bbf14781
'''Final Presentations:'''
* Modularity
** https://docs.google.com/presentation/d/1SLLHwjsy-ZHV4OqAXDBclBeTzqrSbyCNCJNRZs0a8Kc/edit?usp=sharing
* NLP
** Focused on the Amazon Dataset, with binary classification for text
*** Small subset of the data due to storage issues
** Redid some of the architecture for NNLearners
** No longer getting trivial solutions
** Chose not to focus on multiclass or multilabel data

* EzCGP
** Removed preprocessing blocks such as blurs, inverts, and rotates
** Actually leads to better accuracy, surprisingly also does not appear to be over-training much
** Validation accuracy is comparable to training accuracy
** One weakness is that there are no linear layers in the architectures at the moment
** Not much diversity individuals in the population, may be caused by the transfer learned individuals overperforming
** Want the neural architecture search to also produce comparable results
** Added dense layers, which added better results, but not state of art
** Researching mating and mutations with CGP

* Stocks
** Utilized an opensource package for implementing technical indicators as primitives
** Also implemented some primitives outside of the package

==VIP Feedback==
If the goal of the VIP is to be more research focused and start producing publications I think these are some ways that could help. Unsure of how feasible they are though. Also includes a lot of thoughts over this semester and accumulation over all the semesters.
* I feel that generally the teams a bit too large, and because of this the work becomes a bit unfocused and difficult to manage. I think we on average have 40-60 students per semester, at the end of the semester that's roughly 10+ students per subteam. At least in my experience and what I've heard from other student researchers, 10 people alone could be the size of a small lab. Also, for publications, I think it'd be rare if there were 10+ students contributing to a paper. I think smaller groups of less than 6 students can better focus on specific problems and research questions. While I think it's fine to keep the same subteam structure to help guide overarching questions and research areas, I think the subteams should be further refined down to these smaller groups, and I don't think the students are very good at focusing down to these smaller groups by themselves. Very rarely do I think students can be independent enough to task themselves or others with specific research questions, myself included. 
* Unfortunately, I think there aren't enough resources to accommodate this many people (40+), unlike a lab where there would likely be people like grad students or post-docs, or like in a class where there are teaching assistants. I'm not sure if that's because the past 3 semesters have been virtual, maybe it's better in person, I don't remember what normalcy is like anymore. But typically a lot of students don't have much experience, which isn't necessarily a bad thing, but makes things more difficult. When they are confused, their options are to either struggle independently or ask for help. While luckily most the teams have more experienced team members like Anish, Alex, Rodd, me, etc. to help out, I think having more resources for general help and allowing the more experienced members to focus on research would be a better allocation of resources. I know there's the Piazza and the Slack to ask for help, but typically they aren't very active and I don't know how to make it more approachable for people. I think having more experienced people to help is the way, like Austin or James used to, but a more formal role like an official TA. Another option is to have a more formal research source as a basis of the team. I'm actually very impressed at the way the Stocks team conducts themselves, reading and implementing research papers, and it appears that there is a large related works and research that they can reference if they need help. It also helps with keeping the team focused. Better documentation might also help, like encouraging Sphinx more for code related issues.
* People come in with varying amounts of familiarity as well. VIP groups technically should be sophomore and up, which would hopefully mean that people would be a bit more qualified. But I came in as a freshman, and so did Anish and Mohan. Problem with that is that for some people, this is their first introduction to machine learning and research, so there's a steep learning curve. Since our VIP group is fairly popular every semester we may be able to afford being a bit more selective. I think projects and subteams often get bogged down with issues, teaching new students, or are over optimistic and that leads to lost focus over the semester. I'm the optimistic type, so I set some very optimistic goals for the team over this semester. Unfortunately we ran into issues with implementation being slower than expected, confusion and lack of understanding of some concepts, having to explain things. Similarly, I think every semester we have some group that runs into PACE issues that slows development. I think at this point, a lot of the teams have matured enough to where some members can afford to spend time on doing runs and analysis on working architecture, while others work on implementations and new areas. I also think first semesters could use a longer introduction to a lot more concepts, so maybe continue the bootcamp beyond the midterm as well. Maybe Wednesday sessions continue to provide more background, while the first semesters also join the Monday meetings to work with their subteam. But this involves a lot more work and responsibility all around. Overall I think there should be more clear expectations and goals between the varying semester students. 
** First Semesters (Learning focused)
*** Some core concepts that I think first semesters lack even after the bootcamp
*** Statistics, I think giving the lecture every semester would be helpful to better guide research and experiments
*** EMADE in general
**** Source code things, like master worker algorithms, evaluating individuals, objective functions, dataloaders
**** Where primitives are located/how to write them
**** What individuals look like or mean
**** Data formats, Stream vs Features, etc
**** Seeding, everyone should be familiar with this to be honest
**** Running bash reinstall after making source code changes, surprisingly many people don't know or forget this step
*** Machine learning in general
**** Honestly explain some individuals in EMADE like KNN, SVM, etc and give ideas for model types for certain types of basic problems
**** Draw the distinction between the GP covered in the bootcamp, and autoML
*** Research and literature reviews
**** I think if we want the class to be more research focused, members should be more familiar with reading/writing research papers
**** Having them be able to write literature reviews
**** If the GECCO conference is recorded this summer, maybe show them what actual research is like and the expectations from that 
*** Running EMADE on clusters
**** PACE, Colab, etc.
**** Having them be familiar with this beforehand will be helpful once runs and experiments start, compared to running locally in a group like in the bootcamp
*** Conducting/Designing experiments
**** What statistical tools should be used?
**** What are we aiming for? Show that EMADE can utilize autoML to reproduce state of the art models? Our new architecture produces statistically significant results? EMADE can find good data preprocessing primitives on this dataset?
**** Letting first semesters be able to understand  what types of research questions we should be asking and how we should be answering them.
** Second Semesters (Implementation focused)
*** I think second semester students should be more focused on implementation and modifying EMADE architecture.
*** This allows them to gain more familiarity with how EMADE works and gives them the freedom to make changes that they want and explore areas that they want to explore. 
*** Ideally this will let them play with things like loading data, modifying the genetic process, writing new primitives, finding good individuals, reading on related research, implementing papers, etc.
*** Hopefully this will allow them to become a bit more independent and gain more understanding of EMADE's inner workings and the research area focus they have selected
** Third Semesters (Research Focused)
*** They form smaller groups and try to answer a focused research question, with the goal of a publication in mind.
*** Perform runs and analysis, with the goal of statistically showing that they have made some positive change. 
*** Maybe another session outside the general meeting, like the first semester bootcamp, but like a third semester research progress report
* I guess the vision of my head would be something like this. For example, let's say the NN/NLP team is has about 8 members at the start of the semester, 4 third-semesters and 4 second-semesters. After the midterm, 8 more first semester students start to get integrated with the work. At the beginning of the semester, the third semester students will focus on answering a specific research question/application. This involves having a working architecture already ready to run, likely from previous work, then doing runs, experiments, and analysis on datasets that are already prepped. They write progress reports, related works, and prepare a document in the form of a formal research paper. So the group of 4 uses the existing NN branch to focus on EMADE's neural architecture search capabilities, and runs experiments and analysis on the CIFAR-100 and PascalVOC dataset to show they can reproduce state of the art models for image classification and object detection. The second semester students are working on implementing transformers like BERT and new layers in EMADE, with a greater focus on NLP tasks, and are trying to implement a new text dataset as well. First semester students "join" the team and are slowly integrated with the team specific goals and tasks, while still attending the bootcamp to learn more concepts on EMADE specific architecture and how to design experiments. 
* Main reason is that I felt more like a TA or manager this semester compared to previous semesters. I feel like I didn't do as much research or implementation, and there were times when there were things that only I could do, i.e. runs on Icehammer, but couldn't accomplish too much due to time constraints or blockers. Spent a lot of time lecturing or explaining concepts to other members, then assigning tasking and then struggling to keep up with their progress. Then answering questions or trying to fix issues other members were having throughout the week instead of my own tasking. It was also difficult as some people were at varying levels of competency/comfort. First semesters obviously always have a lot to learn and get introduced to, and unfortunately I don't think I could keep up with all of them this semester for whatever reason. Honestly not sure what some of them did, but I'll take responsibility for that. Some second semester students transitioned into our team, so we had to spend time going over our fork, the modularity concepts, etc. Didn't want to give people too much pressure since it's been a difficult year. But at the same time, I felt that some students wanted to do more and I couldn't give them enough tasking, or they were capable of doing more but needed some extra context. I tried assigning some third semesters to lead some more focused topics/tasks and it worked with varying degrees of success. Communication was difficult, as people tended to be optimistic at first said they could handle things, then once implementation started they realized there were a lot more issues than they expected, independent exploration occurred to a certain extent, before coming back to ask questions and context, then running out of time. Maybe a more software development driven schedule might help, with tickets/issues and set deliverable deadlines. But we all know how good we are at that. Not sure if this was just an issue on my end or if other members feel similar. Might just be my leadership issues.
* The main advantage of VIP is that it is very student driven, but unfortunately it is also one of its weaknesses. Some students can be very independent and make great progress. Others would benefit from a more structured approach. More independent students will likely be more suited for research, while other students might be better software developers and perform better with set sprints and deadlines.
* Also might be interesting to have a feedback form at the end of the semester instead of just writing in the notebook like this. I know some students had some questions on more research focused and they might have thoughts/suggestions as well. There isn't really a great place to do it, since peer evals are people specific not generalized to the VIP in general, same thing with the CIOS, which I think goes to Dr. Rohling not Dr. Zutty.