== Team Member ==
[[files/GeorgiaTechBuzz.jpg|thumb|123x123px]]
Team Member: Jacob Y. Wang

Email: jywang@gatech.edu
Cell Phone; 617-485-4525

Interests: Machine Learning, Basketball, Python

= Fall 2020 =
Link to subteam weekly reports: [[Fall 2020 Sub-team Weekly Reports#Modularity|Fall 2020 Sub-team Weekly Reports/Modularity]] 

Link to substeam repo: https://github.gatech.edu/gwang340/emade

== December 2, 2020 ==
'''Final Presentations'''

Our presentation: https://docs.google.com/presentation/d/1KU-tlra_DXV93JOS6NjQ5RB24Urj0-M8F99U3YsQQ70/edit?usp=sharing

Notes:
* <u>Stocks</u>
** Goal how emade can make a training AI
** inconsistencies in base research paper
*** way in which trading signal was calculated did not match with researchers’ rules
*** inconsistency in data 
** novel method training
*** genetic labeling
*** label each time point
*** compare profit between time points, gave 30 day head start
** Developed technical indicator primitives
*** reveal trends + gives insight on stock
** Did runs to compare with paper’s runs and EMADE 
*** think paper it is a fluke
**** got a negative profit value using their values
*** Also did a stream data run as well
**** used primitives from paper and own scaling method
**** EMADE did not normalize the data as they assumed, their best individuals underperformed because of it
**** did better later on, but indv ran out of money quickly
*** Future
**** granularity
**** run stream_to_feature on normalized data
**** improve genetic labeling
**** find new consistent paper
** Time tables?
** Lots of comparison to a paper, not much on the paper itself, Dr. Zutty suggests going over it more to set the stage for rest of comparisons
* <u>NLP</u>
** Neural architecture 
*** uses performance and complexity as objectives
*** Paper - ‘Evolutionary Neural AutoML for Deep Learning’
**** toxicity and chest X-ray dataset
**** they use AUROC for objectives
***** difference between objectives between paper and theirs?
** Use BERT, widely used in NLP
*** specifically use DistilBERT
*** run results don’t have DistilBERT
** 2 new mating functions
*** why did they need new mating funcs
** also made new mutation function 
** Significant amount of time working on PACE cluster
*** 3 main issues, conda permissions etc
** added new CV primitives
*** Adaptive mean thresholding
*** adaptive Gaussian Thresholding
**** For images, + shadowing
*** Otsu’s Binarization
** Ran binary classification on wikidetox dataset
*** 24 generations
** Ran data on chest X-ray chest rays
*** 112,120 images
*** Ran bounded box, issues on bounding data correctly
*** 665 generations, error rate ~46%
*** only one individual in pareto front, came from beginning ben
*** small and large model runs,
**** small only predicts one class
** compare with another neural architecture
*** CoDeepNeat
** also worked on amazon product review dataset
*** textual reviews
** Future 
*** multi task learning for multi label
*** BERT layer value in any pos in tree
*** More datasets
*** Coevolution
* <u>EzCGP</u>
** cleaning up OpenCV primitives
*** thresholding, normalize, blur, filtering
** Objective scores - precision, recall
*** previously used accuracy and f1 score
** Worked with PACE-ICE GPU
*** only 8 hour runs
*** *have user guide
**** <nowiki>https://www.notion.so/PACE-ICE-GPU-for-Ez-CGP-8be7a2e57c6649229f36505d093952dd</nowiki>
** Experiments- CIFAR10 data set
*** best indv. ~0.979 precision, ~0.975 recall
*** current SOTA results are 99.7% with EffNet-L2
**** trying to replicate without transfer learning and break plateau of randomness
*** Research - super convergence, tensor flow has add-on for cyclical learning rates, aging evolution, early termination
** want to work on block structure
*** accelerate convergence
** Using MNIST dataset
** Future
*** continue block, neural architecture search experiment, mate EzCGP and EMADE
Dr. Zutty informed us that the FP's and FN's were really just testing for what should have been 0 and wasn't, and what should have been 1 and wasn't 
* valid individuals wrongly evaluated
* check eval_methods.py future reference
'''Self Goals for Next Semester'''
* Correct issues with MNIST
** Fix evaluation objectives
** Add multi class so data doesn't have to be flattened
* Run more experiments on MNIST (including previous, i.e. DataPair)
* Create optimal seeding file(s) for MNIST
* Get better code-based understanding of EMADE 
* Look more into selection and/or pruning of ARLs (possibly selecting ADFs too)
** Possibly look into reuse of individuals and ARLs between runs

== November  30, 2020 ==
'''Self Actions'''
* Ran EMADE over night, got to 49 generations
** only about 80 valid individuals generated
*** many individuals are similar, contain 1+ ARL(s)
** only 28 ARLs generated
*** nearly half of ARLs are ModifyLearners, some pass Tri/Quad-state, some myIntMult
** Assume low number of valid individuals is due to individuals needing to take in feature data
** Ran much slower than titanic despite the majority of individuals evaluating instantly with invalid primitive error
**[[files/Screen Shot 2020-11-30 at 6.36.05 PM.png|none|thumb]]
**[[files/Figure MNIST pareto.png|none|thumb]][[files/Screen Shot 2020-12-01 at 3.00.18 PM.png|none|thumb]]
**Evaluation time graph and pareto individuals per generation graphs made with scripts from emade-viz, final pareto front graph was my own script (just found pareto individuals from population and plotted a post-step plot with matplotlib)
**In the Evaluation Time graph above, the gap between 1 and 24 generations is due to very few individuals generated
***Also few individuals in the pareto front (maximum of 4 in final generations), due to few individuals generated
****(although there looks like the pareto graph shouldn't have the top right corner due to domination, there is actually one individual slightly sticking out from there)
***AUC of pareto front about 0.088
****definitely overtrained on pixel data
*****most likely due to us flattening the image data since Ford’s data is multi class and we haven’t merged those changes yet
*****Goal for next semester to look more into multi class
*Continued working on final presentation
**https://docs.google.com/presentation/d/1KU-tlra_DXV93JOS6NjQ5RB24Urj0-M8F99U3YsQQ70/edit?usp=sharing
'''Group Meeting:'''
* Met with Dr. Zutty and Dr. Rholing to practice presentation
** Dr. Zutty clarified that individuals needing feature data is intentional
** Overall Feedback:
*** Spend more time explaining the concepts (not just results)
*** Add diagrams/pictures alongside some concepts
*** Combine some graphs on some slides + make some graphs more standalone
*** Spend more time explaining why we get significance, not just that we get significance
*** Could add code snippets if they are not too long
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Final Presentation Slides
|Complete
|November 28, 2020
|December 1, 2020
|November 30, 2020
|}

== November  29, 2020 ==
'''Self Actions'''
* Met with Gabe after team meeting Friday
** talked about issue of Learners expecting feature data and how to change our stream data to feature data
** experimented seeding with different spatial and signal methods/primitives
*** kept running into "ValueError: invalid literal for int() with base 10: ‘get_data_items'"
*Work Session Saturday
**Gabe altered get_numpy() in data.py to turn each stream into feature data and made new 'mnist' branch on our fork
**Had issues when running mnist on larger dataset due to a mislabeled variable when originally splitting mnist test images 
**Got mnist running in EMADE with some valid individuals
***seems to initially have trouble creating individuals with valid primitives
****seeded with seeding_titanic_benchmark file to check validity of our conversion of stream to feature data
***trying to get one run with 40+ generations for final presentation
*Working on final presentation
**https://docs.google.com/presentation/d/1KU-tlra_DXV93JOS6NjQ5RB24Urj0-M8F99U3YsQQ70/edit?usp=sharing
'''Group Meeting:'''
* Worked on final presentations
** my slides are on my MNIST work and one filler slide transitioning into future work
** first semesters tasked with coming up with some future ideas and interests
** set up works session for saturday at 5pm for presentation and other work
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete an mnist run in emade 
|Complete
|November 12, 2020
|November 29, 2020
|November 28, 2020
|-
|Final Presentation Slides
|In Progress
|November 28, 2020
|December 1, 2020
|
|}

== November 23, 2020 ==
'''Self Actions:'''
* Had issue with Emade running the correct load method
* Made some small changes in Emade.py and in input_mnist.xml
** changed the data type to pickledata in input_mnist.xml (later changed back to imagedata) 
** set image loading method to load_pickle_from_file in buildClassifier() in EMADE.py
* Ran data through Emade successfully
** created many individuals, all with invalid primitives or other errors
** consistently running into issue of no feature data in individuals
*** planning on adding new seeding file
'''Group Meeting:'''
* Continued doing runs + analysis for other branches
* Talked about final presentations and future ideas
*** Integrate all changes together: Differential Fitness, Data Pair restriction, and Selection Method
*** Run new/previous experiments on MNIST
**** Filters and data pair manipulations should be more impactful on images
*** Look into how similar the individuals in the final generation are to each other
**** See if ARLs are limiting the search of EMADE
*** Look into more heuristics building off differential fitness
**** NN team has compared individuals' fitness to the average individual's fitness in a generation
**** Possibly implement these heuristics as objectives and see their impacts
*** Filled out lettucemeet for work session availability
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete an mnist run in emade 
|In Progress
|November 12, 2020
|November 29, 2020
|
|-
|Add new seed file (maybe for next semester)
|In progress
|November 23, 2020
|
|
|}

== November 16, 2020 ==
'''Self Actions:'''
* Discovered Ford's load method takes in data differently than how I had split it in my script
** Label data had to be in the form of an array, not an int, so instead of 7 label data had to be in the form [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
***[[files/Screen Shot 2020-11-30 at 5.55.16 PM.png|none|thumb]]
** also npz files needed title 'arr' added "arr= ..."
*** ex. np.savez("train_" + str(i) + ".npz", arr = arr[i*f_size:(i+1)*f_size])
* Reworked script to reformat the images and labels as above^
* Replaced previous load_pickle_from_file in data.py with Fords load method
MNIST Data Splitting Script: https://drive.google.com/file/d/1VMFsY_izejrftL1kiiDYo_cIxDVDxrUq/view?usp=sharing

Ford's Load Method:
[[files/Screen Shot 2020-11-30 at 6.03.04 PM.png|none|thumb]]

'''Group Meeting:'''
* Continued doing runs for other branches 
** DataPair, New Selection
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Reformat data for Ford's load method
|Complete
|November 10, 2020
|November 16, 2020
|November 12, 2020
|-
|Test mnist in emade 
|In Progress
|November 12, 2020
|
|
|}

== November 9, 2020 ==
'''Self Actions:'''
* Had work session with Gabe
** Went through how EMADE loads data
** Decided to look at Ford's npz load method from GTRI
** Slack messaged Ford about it with Gabe
* Got data splitting script to work and format images into np arrays and jpegs
** Decided on using np arrays for data in EMADE
** Code for unpacking MNIST gzip files:[[files/Screen Shot 2020-11-30 at 5.38.18 PM.png|none|thumb]]
*** magic number is initial value to make sure data is unpacked correctly
*** middle snippet is for testing, shows the image as a png and prints as array in terminal
***[[files/Tmptkcjkhyu.png|none|thumb]][[files/Screen Shot 2020-11-30 at 5.45.30 PM.png|none|thumb]]
*** (Top image is the png of the handwritten 0, bottom image is of the terminal output)
* Added folds on smaller subset
** 500 total, 100 per fold (both train and test had 500 respectively)
'''Group Meeting:'''
* Ran through our Colab scripts with the first semesters
* Weird results from selection method, the number of ARLs were almost identical to the benchmark (regular ARL runs)
* Continuing DataPair Limit Runs
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Turn byte data into images/arrays
|Complete
|November 1, 2020
|November 7, 20220
|November 3, 2020
|-
|Add Ford's image loading method
|Complete
|November 3, 2020
|November 9, 2020
|November 4, 2020
|-
|Add folds to mnist splitting script
|Complete
|November 3, 2020
|November 9, 2020
|November 7, 2020
|}

== November 2, 2020 ==
'''Self Actions:'''
* Spent some hours figuring out how MNIST was being stored in the gz files
** Dataset downloaded from http://yann.lecun.com/exdb/mnist/
* have intermediate script for parsing the bytes in the label and image files
** example of what I have been doing to look at the data:[[files/Screen Shot 2020-11-30 at 5.28.16 PM.png|none|thumb]]
** prints out:[[files/Screen Shot 2020-11-30 at 5.27.59 PM.png|none|thumb]]
** Can see individual byte values of pixles, but not sure how to change into image format yet
* looked through other datasets' template files for reference for making mnist template file 
'''Group Meeting:'''
* Had a lecture on Emade and ARLs on wednesday and friday for the new members
* More analysis was done on Selection branch, can bee seen on team page
* Continuing DataPair Limit Runs
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Understand MNIST data format further
|Completed
|October 19, 2020
|November 2, 2020
|November 1, 2020
|-
|Turn byte data into images/arrays
|In Progress
|November 1, 2020
|November 7, 20220
|
|}

== October 26, 2020 ==
'''Group Meeting:'''
* Got four new members in the Modularity team now
** mainly introduced ourselves and started brining them up to speed on our group
** got part way through slides from previous semester on EMADE and ARLs/ADFs
** first semesters tasked with cloning our fork and doing local run
*** plan on them helping as workers on our Colab runs soon
** plan on extra meeting Wednesday during the first semester time slot to go over Modularity in greater detail
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Understand MNIST data format further
|In Progress
|October 19, 2020
|November 2, 2020
|
|}

== October 19, 2020 ==
'''Midterm Presentations'''

Our presentation: https://docs.google.com/presentation/d/1ZTS5ij1kNA8cymFyIYWU1fkuJe3PuNVl_H2IyzB22RQ/edit?usp=sharing 
* <u>Stocks</u>
** First semester group
** How can use Emade for regression on time series data + to optomize market trading algorithms
** split into research and implementation group
** chose regression problem, want more stable stocks, and technical indicator
** CEFLANN Architecture - computationally efficient functional link artificial neural network
*** much faster than mlp
** added more regression learners: multi-layer perceptron, gausian process, ridge regression
** try to predict next day trading model
** not performing well atm, some problem -> 11% loss
* <u>bootcamp group 3</u>
** used mlp nn, logistic regression, random forest, svm, decision tree
** 0.2 auc
** used GCP mysql
** emade balanced objectives better than gp
* <u>bootcamp group 1</u>
** dropped name + ticket, age -> mean, emarked -> mode
** used random forest, naive bayes, logistic regression
** wrote a few queries = fitness valid individuals, fitness pareto front
** .0052 auc
** gp best accuracy 81%, ML 80%, emade 96.5%
* <u>NN(formerly nlp)</u>
** datasets: toxicity and chest x-rays(disease labels)
** ^objectives - auroc and number parameters, they use accuracy and number parameters
** NNLearner - emades tree structure, use layer primitives a/ keras layers, NNLearner fits
** new concatenate layers
** adaptive mutation method - reduce mutations of good individuals per-layer mutations drastically affect fitness
** primitives for chest X-ray,  filters for images, cv2 func wrappers
** problems: PACE update, switched to colab
** next steps: pretrained langueage models, shuffleing layers mutation, transformer primitive
* <u>bootcamp group 2</u>
** dropped titles, cabin, name, parch, embarked, fare\
** 0.2125 ml auc, gp 0.2258
** emade issues - worker process, connection, fixed with campus vpn
** ran 30 generations, init and headless chicken
** emade 0.2436
* <u>ezCGP</u>
** graph based structure instead of tree, node reuse, active + inactive nodes
** creating own primitives and data types
** block structure [data augmentation, data preprocessing, transfer learning, neural network]
** new structure using mainly cifair10
** research goals - find techniques and info to add to ezCGP after, read ~5 in depth papers and present now
*** noisy training, aging evolution, reduce computation time - early termination, super-convergence runtime reduction
** future framework working on pace
* <u>bootcamp group 4</u>
** 200 generations 
** ml 0.25614, gp .16
** emade - num elements, fp rate, fn rate
*** auc 0.0277, 28 gen

== October 12, 2020 ==
* Had group work session over weekend 3pm - 6pm
** Worked on the datapair stuff and parsing MNIST 
'''Self Actions:'''
* Worked on adding MNIST dataset
** running into issues parsing data to format into images
'''Group Meeting:'''
* Start working on presentations for new members
** My slides are on future work for this and next semester
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Make slides
|In Progress
|October 12, 2020
|October 17, 2020
|
|-
|Format MNIST data
|In Progress
|September 28, 2020
|October , 2020
|
|}

== October 5, 2020 ==
'''Self Actions:'''
* Finished connecting AWS RDS server to mySQL workbench with emade 
** added input rule for security group that allowed all traffic from any source 
** made name in template name of RDS connection
*Started working on adding MNIST dataset to emade
**created template, but still need to make python script to configure data
'''Group Meeting:'''
* EmadeDataPair having issues
** Due to previous design choices Arg0 cannot be part of an ARL
** Preventing useful ARLs from being created, may introduce "partial" ARLs
** Raurai + Gabe still working on debugging/refactoring
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Connect Google Colab with AWS
|In Progress
|September 25, 2020
|October 2, 2020
|October 1, 2020
|-
|Format MNIST data
|In Progress
|September 28, 2020
|October 10, 2020
|
|}

== September 28, 2020 ==
'''Self Actions:'''
* Got colab script polished up 
** each time has to import drive, bash reinstall.sh, and install mysql client, sep,  deap, and some other packages
** Made AWS RDS mysql server
*** issues with connecting it to mysql workbench and script run in colab
'''Group Meeting:'''
* trying to get past cloud service issues —> actual testing and projects
* plan to work on running ADFs with new dataset (MNIST)
** http://yann.lecun.com/exdb/mnist/
* Raurai worked on generating ADFs only with data pairs
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Connect Google Colab with AWS
|In Progress
|September 25, 2020
|October 2, 2020
|
|-
|Add new dataset in EMADE
|In Progress
|September 28, 2020
|October 10, 2020
|
|-
|Peer Eval
|Completed
|September 28, 2020
|October 2, 2020
|September 29, 2020
|}

== September 20, 2020 ==
'''Self Eval:'''[[files/SSVIPNotebookSelfEval.png|none|thumb]]'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get EMADE running on Google Colab
|In Progress
|September 4, 2020
|September 18, 2020
|
|-
|Self Eval
|Completed
|September 14, 2020
|September 21, 2020
|September 20, 2020
|}

== September 18, 2020 ==
'''Subteam Meeting:'''
* Continued conversations about updating selection methods
* PACE basically working for Kevin, gabe still working on diff fitness
'''Self Work:'''
* Worked on running EMADE through Colab, have short script to run slection branch:
** from google.colab import drive  drive.mount('/content/gdrive')  %cd gdrive/My Drive/emade/  !python src/GPFramework/seeding_from_file.py templates/input_titanic_ADF_Selection.xml seeding_titanic_benchmark  !python src/GPFramework/launchEMADE.py templates/input_titanic_ADF_Selection.xml
* Ran into drive issue, EMADE takes up too much space
* Questions to bring up in meeting:
** What database should I be using? Still local?
* Will most likely upload without most datasets
** MUST REMEMBER DO NOT COMMIT EVERYTHING WITH DATASETS MISSING
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get EMADE running on Google Colab
|In Progress
|September 4, 2020
|September 18, 2020
|
|-
|Self Eval
|In Progress
|September 14, 2020
|September 21, 2020
|
|}

== September 11, 2020 ==
'''Subteam Meeting:'''
* Got a bunch of runs on Selection method
* Want to do more on differential fitness
* Thinking about ways to improve our selection method for individuals and ARLs
** Improve our tournament select modification from last semester 
** Limiting ARLs to only return an EmadeDataPair
'''Self Work:'''
* Fixed issues with my laptop (at least temporarily)
* Deleted some .plst files and stopped some apps from opening on startup
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get EMADE running on Google Colab
|In Progress
|September 4, 2020
|September 18, 2020
|
|}

== September 6, 2020 ==
Met with Ruarai for an hour and a half yesterday to fix the python issues in my computer
* Eventually found there was an extra line in my bash_profile which kept resetting my path
** export PATH=/usr/bin:$PATH
NEW computer problems today :(
* many of my applications(including finder) will not open, or stay frozen indefinitely forcing me to continually restart my computer
* cannot do more than use chrome for short periods of time
* assume it has to do with bad reaction to new MacOS update
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix python and EMADE issues in my computer
|Completed
|September 4, 2020
|ASAP
|September 5, 2020
|-
|Fix MacOS issues
|In Progress
|September 6, 2020
|ASAP
|
|-
|Get EMADE running on Google Colab
|In Progress
|September 4, 2020
|September 18, 2020
|
|}

== September 4, 2020 ==
'''Subteam Meeting:'''
* Discussed and shared summaries of our papers
* GCP up and running
EMADE has stopped working on my machine, Ruarai will help me over the weekend

'''Recurring issues:'''
* “WARNING: Skipping GPFramework as it is not installed.” 
** its trying to install on main pip, but I need it to be using conda environment
* Also getting issues that I don't have certain packages downloaded when I definitely do, some even multiple times through pip, pip3, and conda 
* I assume it is something to do with which python is being run, but I am not sure yet as to why it is using different pythons and pips
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Fix python and EMADE issues in my computer
|In Progress
|September 4, 2020
|ASAP
|
|-
|Get EMADE running on Google Colab
|In Progress
|September 4, 2020
|September 18, 2020
|
|}

== September 3, 2020 ==
'''Self Work:'''

Preparing for literature review tommorrow

Skimmed a bunch of GECCO papers, not many I understood or was interested (want to find something selection related)

My paper: https://pdfs.semanticscholar.org/a7e2/ace6b06463a3de828590a9a4770894371f3d.pdf
* '''Dynamic Decomposition of GP''' - decomposition of current problem, find sub problem solutions, merge sub solutions -> final solution
* uses Error Change to keep track of best individual - if no change in fitness after x gen, saves best indv, initiates new run
* Possible options to explore with Dynamic Decomposition in EMADE/ADFs

** could select for specific/fewer features, or specific accuracies (FP/FN/TP/TN/total)
** do diff runs like Wave GP(takes best individuals from different runs to make final population to run) and just add best indv/adfs to new set

** combine, crossover, or use adfs as individuals or starts of indv(generate new indv with learner adfs)
** change how we generate and/or use adfs after fitness starts to plateau (see bloat)

** bloat control with adfs — keep average fitness stored w/ adfs, remove from all if bad for multiple gen.s
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Find paper for literature review
|Completed
|August 24, 2020
|September 4, 2020
|September 3, 2020
|}

== August 31, 2020 ==
'''General Meeting:'''
* Brainstormed some more
* Literature review for subteam meeting on Friday
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get EMADE running on own machine
|Completed
|August 24, 2020
|August 31, 2020
|August 29, 2020
|-
|Find paper for literature review
|in progress
|August 24, 2020
|September 4, 2020
|
|}

== August 24, 2020 ==
Our first meeting of the semester!

'''General Meeting:'''

NAME change to Modularity
* Decided to have weekly subteam meeting at 4pm on Fridays
* Brainstormed new ideas for Modularity/use of ADFs to explore for the semester
* Trying to get more runs in before GCP runs out
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get EMADE running on own machine
|in progress
|August 24, 2020
|August 31, 2020
|
|-
|Find paper for literature review
|in progress
|August 24, 2020
|September 4, 2020
|
|}

= Spring 2020 =

== April 20, 2020 ==
Presentation Day

Ours presentation: https://docs.google.com/presentation/d/1pM_VSVOVw0l5aHGx5YjvkpRcBvNPixVkjcpAnIzLzPk/edit?usp=sharing
* Research Fundamentals
** Goal: Bloat reduction
** Bloat Metric - measure of size verse impact on fitness in individuals
** Speciation - species assigned based on shared topological structure
** Measured hypervolume and bloat with speciation of 0.15, but nothing statistically significant
*** but there is a statistically significant increase in both with speciation of 0.3
**Statistically sign. increase in hypervolume for Neat Crossover too, but not bloat
**Got PACE running - 8x runs taking 6-8 hours to run 30 gens
***created script to install and run
*NLP
**Added primitives: relu, ELU, SeLU, Linear, Attention(not implemented yet) activation layers, Dropout, GloVe Embeddings,  and Conv2D
**Toxicity dataset problems (MultiLabel problems) — fixed accuracy issue
**Integrated Chest X-Ray data into EMADE
**Text Classification - IMDB movie reviews, with new primitives 
***vectorization of text
***Stematizer - reducing words
**Working on: Adding new/improve primitives, concatenate layers, incorporate ADFs to save permutations of layers that work, computer vision primitives
*Time Conflict NLP
**Text Summarization in EMADE
**Testing Summarization Primitives
**Automated running tests on PACE, cut a lot of running time, but created many issues
***has a guide to using PACE-ICE
**Working with multi-dimensional data
***defining summarization data
***added different classification functions
****Num Named Entities: greater number of entities in a par, greater data/importance it has
****TFISF Primitive - way of assigning numeric value for each sentence, rarity = more important
***Working on optimizing TFISF to improve its evaluation speed, add documentation for adding primitives, use external MySQL database
*EzCGP
**CIFAR dataset
**New Semesters: finding contemporary CNN architectures and ran on tensorflow 
**Data augmentation with EzCGP - generates new pieces data
**Transfer learning - adapt pre-trained + valid neural networks but on a dataset to use on a new but similar dateset
***use other companies processing power
**CIFAR -> Data Augmentation -> transfer learning -> neural network -> classification
**Wrote new tensorflow primitives
**Tried running PACE, switched to Google Cloud since TensorFlow couldn't detect GPUs on PACE
**Future work: automate deployment on GCloud, integrate MapReduce Distributed File System for data collection across instances

== April 18, 2020 ==
* Wrote script for comparing the AUCs of our new selection method code to our benchmark runs
[[files/AUCs of selection-benchmarks.png|none|thumb]]
* Tried to also write own method for a t test, but having some difficulty
** got t = -0.4546
** ran online t test calculator and got t = 0.6906 and p = 0.5041
*** definitely not statistically significant
* Variation in AUCs is most likely due to our new selection method having more individuals randomly chosen
** increased randomness from the direct choice based on both crowding distance and number of ADFs
*** some ind that would previously be chosen because of a better crowding distance are now not if they have less adfs than the other ind in the tournament
**Still would like to get more data to make a better conclusion 
{| class="wikitable"
!Task
!Current Status
!Date Resolved
|-
|T test and graph of AUCs
|finished
|4/18
|-
|Touch up/finish slides
|in progress
|
|}

== April 17, 2020 ==
Met with selection method sub group
* decided on presentation tasks
** mine is to compare AUCs from runs our selection method and other benchmark runs
* shared methods of finding average number of ADFs per individual per generation in SQL
{| class="wikitable"
!Task
!Current Status
!Date Resolved
|-
|T test and graph of AUCs
|in progress
|
|-
|Presentation slides
|in progress
|
|}

== April 10, 2020 ==
Sub team selection method meeting
* Our group decided to use the selection method code I wrote:
[[files/Screen Shot 2020-04-10 at 3.48.30 PM.png|none|thumb]]
Just added a way to count the number of ADFs and weighed it equally with the crowding distance when choosing an individual.
* Dominating individuals should have the highest chance of mating, but then after that I wanted to see if adding an emphasis on number of ADFs in each individual would improve the selection. 
** Individuals must have a higher crowding distance and an equal or greater number of ADFs to be directly chosen
* This may increase the number of individuals chosen randomly though.
{| class="wikitable"
!Task
!Current Status
!Date Resolved
|-
|individual new selection method
|completed
|4/8
|-
|script to count average adfs
|starting
|
|}

== April 6, 2020 ==
* We misunderstood what our new selection method was for and are reevaluating plan moving forward
** originally thought selection method was for choosing ADFs to be created
** Actually selection for which individuals will more one
* Brainstormed ways which we could improve our selection method/tournament
** thought about size of individuals and number of adfs
** decided on num adfs
* We wil each try to write own selection method and will choose best next meeting
{| class="wikitable"
!Task
!Current Status
!Date Resolved
|-
|individual new selection method
|
|
|}

== April 3, 2020 ==
* ADF broke into subgroups
** now part of the selection methods group
** started looking through the code for selecting ADFs in our branch and a previous differently weighted method
{| class="wikitable"
!Task
|-
|Familiarize more with selection methods
|}

== March 28, 2020 ==
python3 src/GPFramework/launchEMADE.py templates/input_titanic.xml

python3 src/GPFramework/seeding_from_file.py templates/input_titanic.xml seeding_titanic_benchmark
* Fixed errors by downgrading tensorflow to 1.15 and reinstalled sep and spectral
* used drop + create in mysqlworkbench to clear the database before seeding
** used seeding_titanic_benchmark

== March 25, 2020 ==
* Group info Presentation: https://docs.google.com/presentation/d/1nivJn2MfO-Amf-yvODm7LTLPNlpyeGXjzLXxgbbqvD4/edit#slide=id.g720ad7ae25_2_94
* Worked on downloading ADF emade fork
* Kept getting different tensorflow errors

== March 23, 2020 ==
* First meeting with main group
** Also first distance meeting due to corona/online instruction
* Joined ADF team
* Set up time to meet on Wednesday to learn more about ADF/group work

== March 9, 2020 ==
Presentations:
* ADFs
** Use repeating tree structures/branches in successful individuals into own nodes
* Natural Language Processing (NLP)
** IMDB movie reviews
** working on:
*** PACE ICE
*** Larger data set
*** Submit paper
*** etc
*Bloat Control
**Bloat: Increase size without corresponding fitness improvement
**Restricted vs Unrestricted mating
*ezCGP
**improved GP within EMADE
**image recognition
*NLP Time Conflict
**text classification
**Testing summarization primitives
Our Presentation: https://docs.google.com/presentation/d/1XAhszW_1XZNIei0VixClj5FC9dHq_TpkVtQBTuIp3cI/edit#slide=id.g52d216d280_5_17

== March 7, 2020 ==
* Met with group in culc
** combined all our pareto fronts
** Started presentation

== March 6, 2020 ==
* Ran EMADE for over 6 hours
** reached generation 25
* Tried resuming work multiple times with reuse 1, but the current evolution year (generation) kept restarting at 0
** Still kept existing individuals though

== March 5, 2020 ==
* Went to help desk
** Got Emade set up and running
** Talked about seeding and 
* Met with group at 7
** Tried running EMADE as group, unable to
** Decided to run individually and then combine all data at end
** Tried to seed data, but was unable to, ran into error with the seed individual types
** Set goal of at least 30-40 generations per person
** Set meeting for Saturday

== March 3, 2020 ==
* Continuing attempts to fix errors, but having a lot of difficulty
* Teammates said each person has different errors
* Will go to help desk

== February 29, 2020 ==
* Group met at 'hackathon' to work on connecting emade and to other peer's server
** Couldn't make it due to family matters in Boston
** Told they spent a lot of time fixing errors in emade
* tried fixing some errors on own, got stuck early on

== February 26, 2020 ==
* Downloaded mySQL 5 instead
* Need to redownload datasets due to not having git lfs when cloning emade

== February 25, 2020 ==
* Downloaded mySQL server(8) and workbench
* Downloaded homebrew and git lfs

== February 20, 2020 ==
* Downloaded Anaconda
* Cloned emade
* tried to go to help desk, but couldn't due to other matters

== February 19, 2020 ==
<u>EMADE</u> — Evolutionary Multi-Objective Algorithm Design Engine
* Combines multi-objective evolutionary search with higher-level primitives to automate process of designing machine learning algorithms.
Start run of EMADE:
* navigate to top level directory + run: 
** python3 src/GPFramework/launchGTMOEP.py templates/input_titanic.xml
* see ppt for instructions on configuring MySQL connection
EMADE can run across multiple data sets (ex. different folds)
* Each train and test file create a DataPair object in EMADE
* reuse = 0, starts over each time (else, use reuse = 1)
* vectorization - create multiple columns for features within variables
** one hot encoding 
** makes each feature of a variable linearly independent of other features in variable —> no relationships between them
*Suggest use mySQL database to look at output
**Connect via command line: mysql -h hostname -u username -p
**select database: database_name 
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Download/get running EMADE
|In Progress
|February 19, 2020
|
|
|-
|Titanic Problem Through Emade
|
|February 19, 2020
|
|
|-
|Familiarize self with SQL
|In Progress
|February 19, 2020
|
|
|}

== February 12, 2020 ==
<u>Presentation</u>

Different approaches from other groups
* First group 
** added trig functions as primitives
** Used gengrow() for greater variance
** Used NSGAII to get points with higher crowding distances
* Second Group
** Averaged ages with titles (Dr., etc)
** GP made small tree, basically said women and children survival 
* Third Group
** combined SibSo and Parch to make FamSize column
** replaced NaN ages with randomly selected age from available pool
** Found their GP was slightly more accurate compared to ML 
* Fourth Group
** boxed ages to classify age groups (ex child, senior)
** also combined SibSo and Parch
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Peer Evals
|Completed
|February 17, 2020
|February 21, 2020
|February 18, 2020
|}

== February 5, 2020 ==
'''Sub Team Meeting Notes - Making Evolutionary Algorithm'''
* Primitives to use:
** greater than (wrapped to return bool)
** Less than (wrapped to return bool)
** square (wrapped to return bool)
** add
** subtract
** multiply
** negative
*Evaluate returns fitness in terms of (sum fp, sum fn)
*Pareto front made from copying population and removing if found dominating individual
*Chance of mating: 0.65
**0.75 if on pareto front
**Offspring has 0.3 chance of mutation
***used gp.mutUniform to mutate
*Pareto Front for GP algorithm:
[[files/Screen Shot 2020-02-17 at 6.05.41 PM.png|none|thumb]]
<u>Presentation:</u> https://docs.google.com/presentation/d/1Ua2wgkX03OrGl3nXhy6C6K-CST-cDyyKyDBDAIvVCnQ/edit?usp=sharing

<u>Code:</u> https://github.gatech.edu/schoudhury40/TitanicProjectGroup1/blob/master/deaptitanic.py
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Titanic Lab with DEAP
|Completed
|February 5, 2020
|February 12, 2020
|February 10, 2020
|}

== February 1, 2020 ==
'''Sub-Team Meeting Notes (for Titanic Problem)'''

https://github.gatech.edu/schoudhury40/TitanicProjectGroup1

Created Slack Channel - Group 1

<u>Group Decisions:</u>
* Decided to do 2 folds
* Focussing on features:
** class, sex, age, sibsp, parch, and fare
*** Filled NaN values for age and fare to be the average of each category.
* using passenger id as index
<u>Individual Work:</u>
* My ML classifier = KNeighborsClassifiers()

* Specifically used 9 neighbors, produced lowest total number of false results
* Weights: uniform, Algorithm: auto
* My Confusion Matrix:
True Negatives: 464

False Positives: 132

False Negatives: 85

True Positives: 210

<u>Our Pratero Frontier</u>
[[files/Screen Shot 2020-02-10 at 9.09.07 PM.png|thumb|none]]

'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Titanic Lab - ML
|Completed
|January 26, 2020
|Feb 5, 2020
|Feb 2, 2020
|}

== January 22, 2020 ==
'''Team Meeting Notes:'''
* <u>Multiple Objectives</u>
** Lecture focus: translating vector of evaluation scores to fitness value
*<u>Gene Pool</u>: set of genome to be evaluated during current generation
**<u>Genome</u>: genetic description of individuals (DNA, GA, GP/tree structure or string)
**<u>Search Space</u>: set of all possible genome/algorithms
**<u>Evaluation</u> of a genome associates a genome/ind. with a set of scores
***Ex. True Positive, False Positive, etc
***<u>Objectives</u>: Set of measurements each genome is scored against, "Phenotype"
****Objective space = set of objectives
***Evaluation maps genome/ind. from search space —> objective space
*<u>Classification Measures</u>[[files/Screen Shot 2020-01-22 at 11.35.33 PM.png|thumb|400x400px|none]]

** <u>Sensitivity/True Positive Rate (TPR)</u>: TPR = '''TP/P''' = TP/(TP+FN)
** <u>Specificity (SPC) / True Negative Rate (TNR)</u>: TNR = '''TN/N''' = TN/(TN+FP
** <u>False Negative Rate (FNR)</u>: FNR = '''FN/P''' = FN/(TP+FN) = 1-TPR
** <u>Fallout / False Positive Rate</u>: FPR = '''FP/N''' = FP/(FP+TN) = 1-TNR = 1-SPC
** <u>Precision / Positive Predicted Value (PPV)</u>: PPV = '''TP/(TP+FP)'''
** <u>False Discovery Rate (FDR)</u>: FDR = '''FP/(TP+FP)''' = 1-PPV
** <u>Negative Predicted Value (NPV)</u>: NPV = '''TN/(TN+FN)'''
** <u>Accuracy (ACC)</u>: ACC = '''(TP+TN)/(P+N)'''

* <u>Pareto Optimality</u>
** An ind. is <u>Pareto</u> if no other ind. in pop. out performs(dominates) it in all objectives
** <u>Pareto Frontier</u>: set of all Pareto ind.s
** <u>Nondominated Sorting Genetic Algorithm II (NSGA II)</u>
*** pop. separated by ranks of domination/nondomination (pareto ranks)
*** Ind. selected using binary tournament
**** lower Pareto ranks beat higher, ties broken by crowding distance(sum of distance to all ind.s in pop, higher wins(prioritizes "unexplored areas))
** <u>Strength Pareto Evolutionary Algorithm 2 (SPEA2)</u>
*** Each ind. given strength S = # of ind. it dominates
*** Each ind. receives rank R = sum of S's of the ind.s who dominate it
**** R = 0 for Pareto ind.s
**** Fitness = R + 1/(ß^k + 2) where ß^k = distance to the nth nearest neighbor
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Lab 2: Mult. Objective
|Completed
|Jan 22, 2020
|Jan 29, 2020
|Jan 26, 2020
|-
|Visit DEAP Documentation
|Continuing
|
|
|
|-
|Finish notes
|Completed
|Jan 22, 2020
|Jan 29, 2020
|Jan 22, 2020
|}

== January 15, 2020 ==
'''Team Meeting Notes:'''
* <u>Genetic Programming</u>
** individual is func/runs
** <u>Tree Representation</u>
*** Nodes = Primitives, represent functions
*** Leaves = Terminals, represent parameters
***evaluate trees left to right, top to bottom
*** [+, *, 3, 4, 1] = 3 * 4 + 1
*** Mutation can involve: inserting node or subtree, deleting node or subtree, or changing a node [[files/Screen Shot 2020-01-21 at 5.03.44 PM.png|thumb|none]]

'''Lab Notes:'''
* added primitives <u>numpy.power</u> and numb.divide, both w/ arity(num arguments) = 2
* added mutInsert and mutNodeReplacement to toolbox
* <u>Dear/Python</u>
** creator.create(name, inheriting class, added attributes) adds new class to creator
** toolbox.register(^, func, ^) adds new func to toolbox
** initRepeat(c, func, n) - repeats func n times to fill container
** initIterate(c, g) fills container c with generator g
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Lab 2: Single Objective
|Completed
|Jan 15, 2020
|Jan 22, 2020
|Jan 20, 2020
|-
|Visit DEAP Documentation
|Continuing
|
|
|
|}

== January 8, 2020 ==
'''Team Meeting Notes:'''
* Jason introduced the course and gave an overview of the AAD VIP program for new students.
* Went over course calendar.
* Genetic Algorithm PP:
** <u>Genetic Algorithms</u>: create each new generation through mutating(random modification) individuals from previous population.
** <u>Individual</u>: one specific candidate in pop.
** <u>Population</u>: group of individuals whose properties are altered.
** <u>Objective</u>: a value used to characterize individuals that you are trying to maximize or minimize.
** <u>Fitness</u>: relative comparison of individual
** <u>Selection</u>: better genes -> pass on to next generation
*** <u>Fitness proportionate:</u> random selection, higher vales higher prob of pick
*** <u>Tournament</u>: compare multiple individuals at once
**<u>Mate/Crossover</u>: cutting and combination of individuals in mating (random point)
**<u>Genetic Algorithm Overview</u>
***Randomly initialize pop
***Determine fitness
***Repeat below steps until best individual created:
****select parents
****perform crossover on parents
****perform mutation
****determine fitness
*Python Notes:
**zip(list1, list2) —> returns [ (list1[0], list2[0]) , (list1[1], list2[1]) , ... ]
**map(func, list1) —> returns new list with func performed on each element in list1

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Set up wiki notebook
|Completed
|Jan 8, 2020
|Jan 15, 2020
|Jan 8, 2020
|-
|Join Slack
|Completed 
|Jan 8, 2020
|
|Jan 10, 2020
|-
|Lab 1
|Completed
|Jan 8, 2020
|Jan 15, 2020
|Jan 14, 2020
|}