== Team Member ==

* Team Member: Joel Ye

* Email: jye72@gatech.edu

* Cell Phone: (718) 755 - 8248

* Interests: Embodied/Active ML, Virtual Reality
ADF Subteam: [[Automatically Defined Functions|https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions]]

== Nov 24 - Dec 2, 2019 ==
'''Meeting Notes''':

Things are coming to a close - prepare for presentations.

(On presentation day - we presented! And the conclusion for ADFs was that we've established a good foundation.)

Presentation slides: https://docs.google.com/presentation/d/1o7aoCDuJgwq7mgVcsqZ-5j67A0-Qknx1qza3bkVaNhY/edit?usp=sharing

'''Team Meeting Notes''':

The work did not complete/bug did not resolve during the hackathon - Aaron and I met on Tuesday to resolve things, and working runs began on Tuesday night.  

Notes on implementation: 

When evaluated on the same thread, `update_adf_representation_with_pset` works properly and the evaluating process recognizes all the primitives. However, if on a subthread (i.e. Pool), the primitives that adf lambdas call are not recognized. To get around this, I re-evaluate the adf lambdas based on their expressions in the evaluating subthread as well. This involves some overhead.  

Presentation Notes + final analyses on the slides and group page.  

Debrief Thoughts + Next Directions for ADFs: 

- shoot for a paper at the GP conference 

- fitness + better heuristics 

- fix num elements eval 

- more robust fix to the current hack for evaluating 

- partial ADFs 

- Future tasks should be informed by current weaknesses of ADFs 
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Do EMADE run
|Done
|11/4
|12/2
|11/30
|-
|Prepare Presentation
|Done
|11/24
|12/2
|12/2
|}

== Nov 18 - Nov 23, 2019 ==
'''Meeting Notes''':

Standup, as usual. In subteam breakouts,  we planned one final work distribution for the hackathon and the simplest plan for a presentation - one baseline run, one adf'ed run, and simple analyses (presentation to be linked in the ADF page).

'''Team Meeting Notes''':

- We met on Sunday (11/18) to continue debugging and plan out remaining work. We realized that ADFs can overlap and that contraction was implemented with an incomplete algorithm.

- We met on Thursday to merge in work.
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Project Management
|In progress
|11/4
|N/A
|N/A
|}

== Nov 11 - Nov 17, 2019 ==
'''Meeting Notes''':

Standup, as usual.

'''Team Meeting Notes''':

- Still collectively blocked on evaluation bug. However, other tasks were assigned for our final presentation

- Ruarai completed his first task (renaming adf strings) and should now be on evaluating ADF heights.
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Project Management
|In Progress
|11/4
|N/A
|N/A
|}

== Nov 4 - Nov 10, 2019 ==
'''Meeting Notes''': Standup

'''Team Meeting Notes''':

- Debugging seeding, got full titanic seed from James

- distributed new tasks on https://github.gatech.edu/jye72/emade/issues

- Benchmark doc: https://docs.google.com/document/d/1AQtd5qeHO2eoM9vF25RxQe28nE2dj5NEx8_iGwZ47eM/edit?usp=sharing
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Project Management
|In Progress
|11/4
|N/A
|N/A
|-
|Benchmark doc
|In Progress
|11/7
|11/10
|11/8
|}

== Oct 28 - Nov 3, 2019 ==
'''Meeting Notes''': Meet and Greet  Ruarai and Aryender

'''Team Meeting Notes''': See ADF subteam wiki

Joel: 
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Partial ADF design/scoping
|In Progress
|10/28
|11/3
|11/3
|}

== Oct21- Oct 27, 2019 ==
'''<nowiki/>'Meeting Notes''': Midterm presentations

'''Team Meeting Notes''': Onboard new members and decide on a first experiment. 

Joel: 

- Brainstorm experiments (lighter week due to HackGT)

{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Kick off experiments
|pending
|10/6
|n/a
|n/a
|}

== Oct 14 - Oct 20, 2019 ==
'''Meeting Notes''': Columbus Day

'''Team Meeting Notes''':

- Joel delivered the improvements and db fixes

- Aaron debugged his work - will continue during meeting

- Gabe wrote some basic slides

- Ben - wrote adf contraction
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Kick off experiments
|pending
|10/6
|n/a
|n/a
|}

== Oct 7 - Oct 13, 2019 ==
'''Meeting Notes''':

- Set the standard output of gabe's population analysis function: ultimately a dictionary of parent-child set occurrences

- aaron testing his adf creation, gabe continuing to implement full parse of tree using stack, ben doing contraction

Joel: To revise aaron's adf creation
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Kick off experiments
|pending
|10/6
|n/a
|n/a
|-
|Improve Aaron's adf creation so compilation works
|waiting for aaron's PR
|10/6
|10/13
|n/a
|}

== Sep 29 - Oct 6, 2019 ==
'''Meeting Notes''':

- talked with James about the where to place representation update (confirmed it makes sense)

'''Subteam Notes:'''

- See subteam meeting notes: [[Automatically Defined Functions|https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions]]

Contribution:

- Project organization

- Code contributor and pseudocode writer

'''Action Items''':

- fix DB persistence of primitive arg types

- kick off experiments

'''Plan for Nesting ADFs''':

- Since generations are asynchronous we cannot (easily) guarantee when to remove adfs from a pset. Given that, we will not remove any previously generated adfs (unfit adfs should not be selected for). Thus, all adfs are future compatible, so we can nest them.
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Kick off experiments
|Postponed
|9/29
|n/a
|n/a
|-
|DB Primitive Arg Check
|Done
|9/29
|9/30
|9/30
|}

Code: https://github.gatech.edu/jye72/emade/tree/joel/adf_compile

== Sep 22 - Sep 28, 2019 ==
'''Meeting Notes''':

We keep backtracking as we find out more about how DEAP stores its individuals, i.e. as - here's the simplest method: track frequency of fixed child sets of given parent nodes. This is what we'll implement, for parents that own only leaf children.

'''Subteam Notes''':

- on subteam page

Contribution: 

- figured out an algorithm for tracking all parent-child relationships given DEAP individual (see subteam notes)

Action items: 

- Finish work to update the adf pool into DB

- plan out how we can nest adfs
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Continue ADF pset integration
|Done
|9/9
|9/28
|9/28
|-
|Nest ADF sanity check
|Done
|9/23
|9/29
|9/29
|}

Code: https://github.gatech.edu/jye72/emade/tree/joel/adf_compile

== Sep 15 - Sep 21, 2019 ==
'''Meeting Notes''':

- Joel absent from subteam, blip in notes (interview)

- ADF Integration into pset iss complete but doesn't changes don't connect to other processes (persist in DB)

More planning work is needed: 

- the paper implementation (https://www.csc2.ncsu.edu/faculty/nfsamato/practical-graph-mining-with-R/slides/pdf/Frequent_Subgraph_Mining.pdf) is too complicated, and other approaches don't apply to structured trees (just unstructured graphs) => A Priori as we know it doesn't work. We're scaling down to the simplest MVP that still needs work (see 

Code: https://github.gatech.edu/jye72/emade/tree/joel/adf_compile

Contribution: Code contributor
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Continue ADF pset integration
|Done
|9/9
|9/28
|9/28
|}

== Sep 8 - Sep 14, 2019 ==
'''Meeting Notes''': 

- pitching went fine, todo discuss a priori 

'''Subteam Notes:'''

- new transaction conversion algorithm proposed: record parent-child relationships as transactions, run a priori on that

- this is a simple traversal that requires a bit of space, but the two-deep outputs are fine since we can nest ADFs

[[Automatically Defined Functions|https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions]]

'''Action Items''':

- Given str expressions of adfs, figure out a way to attach to individuals

- Update individual representation to hold adfs on a dictionary

Contributions: 

- organizing team + code contributor
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Figure out how to update emade representation
|Postponed
|9/9
|9/15
|9/15
|}

Code: https://github.gatech.edu/jye72/emade/tree/joel/adf_compile

== Sep 1 - Sep 7, 2019 ==
'''Meeting Notes''': labor day

'''Subteam Notes''':

- updated plan available at ADF page  [[Automatically Defined Functions|https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions]]

Current priorities:

- removing old adf implementation

- adding pool skeleton on pset

- verifying benchmark works on branch/identifying how we can do local dev and verify code works

- dummy algorithm for returning a subtree to use for ADF work while algo gets in place

- how do we store adfs when they are removed from the pset? (For referencing old individuals with these adfs)

Contributions:

- organizing team, code contributor

'''Action Items:'''

Github issue tracker: https://github.gatech.edu/jye72/emade/issues
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Template ADF code
|Done
|9/5
|9/12
|9/12
|-
|Organize project
|Done
|9/5
|9/9
|9/9
|-
|Get feedback on proposal
|Done
|9/5
|9/8
|9/8
|}

Code: https://github.gatech.edu/jye72/emade/pull/7

== August 25 - August 31, 2019 ==
'''Meeting Notes:'''

Scrum standup, most groups decided what was going on for the rest of the semester.

'''Subteam Notes:'''

We debated on what exactly we should be doing for major implementation details, and we'll go into our weekly sync having investigated the codebase with an implementation proposal. (Proposal on the subteam wiki)

Contributions:

- proposal

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Implementation Proposal
|Done
|8/26
|8/29
|8/29
|}

== August 18 - August 24, 2019 ==
'''Meeting Notes:'''

- new teams have been established and meeting times arranged.

- Establish ADF subteam goals by next week.

'''Subteam Notes:'''

- adf team's notes are logged @ [[Automatically Defined Functions|https://vip.gatech.edu/wiki/index.php/Automatically_Defined_Functions]]

'''Action Items''':

- identify feasible goals

- familiarize self with EMADE existing ADF implementation

- read prelim background research
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|identify feasible goals
|Done
|8/19
|8/23
|8/26
|-
|familiarize self with EMADE ADF implementation
|Done
|8/19
|8/23
|8/26
|-
|read preliminary background research
|Done
|8/19
|8/23
|N/A
|}

== April 19-April 22,2019 ==
'''Meeting Notes''': /Refactor Notes

As of April 19th, template framework is unified, and templating is provided to signal and spatial methods. Note, methods still need to be collapsed. clustering_methods/feature_selector is also collapsed. methods.py was left alone (also, all runs probably use it) since it has a lot of non-standard protocols. 

Non-unit testing (emade runs) were not done (out of time)

Config work will have to be done by not me in the summer or me in the fall.

Work remaining is to prepare the presentation, new PR opened https://github.gatech.edu/emade/emade/pull/105

== April 13-April 19,2019 ==
'''Meeting Notes''':

Demo is in a week. Add primitives for running (and refactor as much as as possible) 

Next Steps for refactor: 

- Collapse more primitives?

- Extend templating to other _methods types. 

- clustering_methods already seems very clean - add simple refactor that pulls primitive adding out of gp_framework_helper?

- feature_selector seems to assume feature to feature, also mostly wrapped. How supported is trimode?

- Only spatial_methods, signal_methods are monstrous

- methods provides a few learners

- Add support to use selected methods as config.

- Not too much work to collapse a lot of the database. Don't think I can do this in 1 week.  

Refactor Notes: 

- to add support for spatial methods, assumed default tristate is STREAM_TO_STREAM. This is dangerous - at least let file specific template specify a default mode. 
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|enable supported_modes in signal_template
|Done
|4/13
|4/19
|4/17
|-
|introduce spatial methods registry
|Done
|4/13
|4/19
|4/17
|-
|selected registries in config
|Cancelled
|4/13
|4/22
|N/A
|}

== April 6-April 12,2019 ==
'''Meeting Notes''':

Working to get primitive collapsing in. Rest of EEG team is still working on developing primitives.

Refactor for this week: 

Enable default setup information and pass all kwargs through to input, so input can create manual window on shape mismatch.

Notes on work:

signal_template is a good opportunity to collapse a lot of the codebase. It supports all TriState modes now, most curiously data.py suggests 2D data is possible, not consistent with stream to features code. Also, a lot of signal_methods.py is fairly inefficient and could use another looking at. signal_template paves the path to 2-3 line procedures to convert scipy methods into primitives.

PR Here: https://github.gatech.edu/emade/emade/pull/100
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Get PR in
|Done
|4/6
|4/12
|4/10
|-
|Another refactor
|Done
|4/6
|4/12
|4/8 (wow!)
|}

== March 29-April 5, 2019 ==
'''Meeting Notes''':

We onboarded new team members and reviewed work done over break. I opened a PR on both emade/emade and eegmade, with signal templating work. Looking forward to further refactor and read a gentle intro book on neural processing as suggested by Scott.

Refactor specification: Have framework_helper import signal_methods primitives.
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Get PR in
|Delayed
|3/29
|4/5
|N/A
|-
|Another refactor
|Done
|3/29
|4/5
|4/5
|}

== March 16-29, 2019 (Break) ==
'''Meeting Notes''':

Discussion of memory error - this must be a problem with my 8G RAM computer. Meanwhile, very clearly defined task is assigned for break (!) 

Main blocker: Individuals not evaluating on EMADE. Try experimenting on gcloud or pace, diagnose why? 

Verifying new primitives: Write a unit test, run a unit test, or use a notebook (prefer the former)

Running a unit test: python signal_methods_unit_test.py SignalUnitTest.test_my_averager
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Get nontrivial evaluation
|go scott!
|N/A
|3/29
|3/22
|-
|Refactor and write primitive templating
|resolved
|3/15
|3/29
|3/22
|-
|Test primitive templating in signal methods and open a PR!
|pr pending
|3/15
|3/29
|n/a
|}

== March 8-March 15, 2019 ==
'''Meeting Notes''':

Very close to a standstill on work. We decided what to present for the recruitment cycle on Monday. In terms of work, unable to resolve learner bug. Currently trying to test RNN on data. 

Seeding bug is due to incorrect format in seeding file (make sure all primitives have the proper formatting and parameter args, including MyFFT, MySTFT).

RNN/LSTM fails to yield nontrivial data.

Now encountering memory error in evaluation - Watched Jason hack through it:

Insights - for memory error, reduce in all aspects - especially datatype, which should be a primitive input for debugging

Labels are defunct, somehow phase them out
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Investigate seeding bug and get nontrivial evaluation
|Seeding bug resolved
|3/8
|3/15
|N/A
|}

== March 1-March 8, 2019 ==
'''Meeting Notes''':

Report on general work - Ali brought up several interesting links that can refresh the way we approach seed creation. James is looking into more examples of concrete methods that we can copy 

- microstates: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4305485/ which appears to consider large scale activity (probably not what we want, we expect relevant information to be correlated [VERIFY?] (quoted from Scott) with the electrodes near the motor cortex).

- higuchi fractal dimension: https://www.sciencedirect.com/science/article/pii/S0169260715302923 - conclusions include that HFD is good only in combination with other nonlinear methods. We should investigate this, if anyone is feeling so mathematically inclined, because we presume our target signal is nonstationary

Overall work is slowing a bit - next steps involve rewinding and really trying to find a seed that works. In debugging with Dr. Zutty, we found that the seeding from file script was bugged and dropping the SingleLearner, which may be causing all the seeds to error out (if this is the case, my bad, since I edited the script). There should be a proposal to restart this seeding script and format our seeds in a more sustainable, less fragile way.
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Investigate seeding bug and get nontrivial evaluation
|Extended
|3/2
|3/9
|N/A
|}

== February 23-March 1,2019 ==
'''Meeting Notes''':

We argued a bit over the validity of Ali's data preprocessing, that claims 99% accuracy. We reported in the work that was done, in my case it was exhausting a variety of methods to get nontrivial results on the data. As we move into the next week we'll continue working on starting an EMADE run, after making the appropriate primitives. In the meeting with Dr. Zutty, some clarifications were made on the nature of EMADE - in particular:

Data in emade has both stream data and feature data. Feature data must be usable by traditional learners, i.e. nxd shaped. Stream data can be much more freeform, and are mainly operated on by signal methods. All primitives offer all types of transforms for maximal evolutionary flexibility, which is also the reason behind lack of static checking of primitive hyperparameters (also a lack of time). In particular, be mindful that you have to flatten stream data in STREAM_TO_FEATURES, and that labels for stream data are generally arbitrary and legacy code, meant for tracking stream metadata when flattening.

PCA reveals few patterns in the data, and does not result in nontrivial results. Dr. Zutty suggests starting a run anyway - this would be a good proof of concept that EMADE can possibly find better learners than human experimentation (and I'll be bedazzled if it works).

'''Notes''':

See next week's entry on roadblocks.
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Verify STFT works and start EMADE run
|Postponed
|2/23
|3/1
|3/1
|}

== February 15-22,2019 ==
'''Meeting Notes''':

We'll be meeting on Sunday to hack out some EMADE work, i.e. working on primitives and seeding in some primitives. Also, worked through the preprocessing script and raw data format with Scott to clarify his algorithm. Updated preprocessing algo here:https://github.com/joel99/EEG_FFT_preprocess/blob/master/main.py. 

'''Notes''':

After investigating the data preprocessing, Scott's code seems correct - I made some algorithmic changes/tensorified some calculation, and now the graphs of y vs y_med seem proper (https://github.com/joel99/EEG_FFT_preprocess/blob/master/fft_preprocess_final.ipynb). However, classification results are still trivial through a variety of learners, even passed through the exact conditions as the Zrenner paper - perhaps we need more data? We'll see what EMADE comes up with. 

EDIT: A lot of tweaking, and results are still trivial. Running a naive learner on the raw signal is (as expected) also trivial. I'm concerned about the possible effectiveness of EMADE, as this data may just not be learnable enough. 
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Investigate Data labelling process (pending Scott code upload and raw data)
|Complete
|2/7
|2/14
|2/15
|-
|Add SDFT primitive, completed sanity check seed to EMADE
|Complete
|2/7
|2/21
|2/21
|}

== February 8-15, 2019 ==
'''Meeting Notes''':

Work of the week struggled around getting meaningful spectrograms, which had all the power concentrated in the first frequency bin. As Dr. Zutty explained, this is due to DC offset, aka the nonzero mean of our signal. Additionally, the 60 Hz power spike is known as "Utility Frequency" (https://en.wikipedia.org/wiki/Utility_frequency). These can be remedied with filters, like notch filter, high pass, etc., but Dr. Zutty recommends leaving these out, as EMADE should be able to learn these. Still working on the sanity check, I've upped the freq resolution to 1.25Hz and dropped out most ranges, restricting to 4-20Hz ranges. Additionally, phase information works beautifully, leading to  good looking spectrograms (power spectro shown, see phase in notebook here: https://github.com/joel99/EEG_FFT_preprocess). Dr. Zutty advocates just seeding robust learners (with many hyperparams) into EMADE and just letting it run to do this tuning, but I think something is wrong with the data.

'''Notes''':

There's a real struggle to get non-trivial results - sklearn learners and keras learners are training very quickly and generally all getting trivial results on '''train''' AND test. Generally unsure of why this is, learners are reduced to randomly guessing. Interestingly, a keras phase based learners fits train set completely (but still has trivial test). Scott reuploaded new data that is unit variance normalized, going to work off of this. However, I would like to investigate how these labels are getting made, as plotting labels vs raw data seems to get a mismatch.
[[files/Power spectro.png|thumb]]
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Investigate Data labelling process (pending Scott code upload and raw data)
|In Progress
|2/7
|2/14
|
|-
|Add SDFT primitive, completed sanity check seed to EMADE
|In Progress
|2/7
|2/21
|
|}

== Feburary 1-7, 2019 ==
'''Meeting Notes:'''

Discussed results attained for the week and met with Dr. Zutty to discuss the implications of the method used. The 'rolling window' technique is formalized as SDFT (see "Generation" @ https://en.wikipedia.org/wiki/Spectrogram), and is a good idea, but we concluded that more time was need before stimulus to get the appropriate frequency resolution (which is calculated as sampling rate over window length), so that we could have larger windows. Currently Scott has uploaded 2400 samples @ 5000Hz, he's uploading more (15000 samples) - I'm trimming to 5000 and using 50 (aka 1ms) step size, but I also need to validate my code.

'''Notes:'''

Classifiers are performing trivially, prompting investigation into the nature of the data. After discussion, we realized the need to relabel the data as above or below median stimulus response per recording session (further investigation into how we label may be useful, as we may want to do rolling medians over long recording sessions) - Scott will work on this. I need to rerun the rolling window on this new data, and also investigate how we can capture instantaneous phase (the angle the numbers provided by FFT) and classify response based on phase instead of power.

Resolution notes: Phase information is captured quite neatly, and SDFT bug is captured in next week's notes.
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Debug and Rerun SDFT
|In Progress
|1/31
|2/7
|2/7
|-
|Investtigate how to capture phase information
|In Progress
|1/31
|2/7
|2/7
|}

== January 25 - 31, 2019 ==
'''Meeting Notes:'''

We discussed more about the various preprocessing techniques we could use and established that we are all generally working towards designing individuals. Ali presented notes on the success of averaging preprocessing on a sample dataset on eye opening/closing.

'''Notes:'''
* Investigate using MNE FFT in order to get frequency domain
* Investigating rolling window technique to get predictor based on existing data and alpha band
** Break 2400 samples into 625 sample-length windows, stepping at 25 samples (5ms) for a total of 72 frames. Convert each frame via FFT. Window length motivated by 8Hz lower bound on alpha waves. From FFT, take alpha band (future work into using all FFT output) and take the total power across it.
* Run classifier/SVM on this (we expect simple power raises to indicate good stim time) - Assigned to Rahul
* Identify how to bring this technique online/account for session differences (see performance offline and record training time)
Task Resolution notes:
* Window preprocessing: Produced reasonable numbers. Concerns that using a small window will restrict max resolution to 8Hz (lower bound makes sense, but follow up on why all measurements have to be in 8Hz steps) - notebooks @ https://github.com/joel99/EEG_FFT_preprocess
* Investigate using phase, which is arguably much more indicative of good stim time than power. Currently an error where there's only 0 or pi on using np.angles
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date 
!Date Resolved
|-
|Run window technique preprocessing
|In Progress
|1/25
|1/31
|1/26
|}

== January 18-24, 2019 ==
'''Meeting Notes:'''
* Set out to discuss responsibilities of each member. Personally taking on the construction of a new individual that we can seed that involves creating a set of FFT transformed signals (into frequency domain) per 500ms raw source.
'''Notes'''
The motivation is inspired by Zrenner et al, that a known pattern we can target is when the mu band reaches maximum power. This kind of pattern is over time, so if our original dataset averaged power across the entire 500ms window in its one FFT we lose a bunch of information. Since mu band cycle is around 10Hz, so once every 100ms, if we use a resolution of around 25ms we should definitely begin to be able to pick out peaks. A reasonable net should learn a good stimulus is when we're around peaks, if this math/theory holds (to vet with Scott/Ali). When/if this algorithm goes online, it should train reasonably quickly and be able to predict mu rhythm peaks fairly quickly. At that point, we'll have to look into RNNs as opposed to these fixed 500ms outlooks - offline is again proof of concept.

Also visited Emory lab, helped set up a basic diagnostic for detecting finger movement from electrodes on the hand. Investigating FFT for numpy to employ in preprocessing.
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Investigate simple net architectures on pseudo time-series data, and implement/test on FFT 
|In Progress
|January 18, 2019
|January 28, 2019
|
|-
|Preprocess raw data with a FFT script, prepare for simple neural net.
|In Progress
|January 18, 2019
|January 28, 2019
|January 20, 2019
|-
|}
== January 7-18, 2019 ==
'''Meeting Notes:'''
* Conflict with main meeting time -- future notes will be taken at conflict time.
'''Notes on Papers'''
* Layman summary of abstract [https://docs.google.com/document/d/1VsjEYI--92kZov7xtwNT1KWhTkkRCHLA31Ao8PBu8Ok/edit]: We take recordings prior to TMS stim and predict whether recorded response was above average (we aim to distinguish these recordings). If such a predictor is fast, we can use it live. Preprocessing converted raw samples via FFT to freq domain, which has less interperson variance, and then converted the time sample into an image by laying down each sample as a row of bits, normalized to use the entire black and white scale. After training, performance was non-trivial. Actual architecture is vague - is it EMADE?

**Thoughts: The procedure makes sense, but the architecture should be detailed. Additionally, transfer learning from the image domain shouldn't work - our time samples differ drastically from canonical vision tasks and no knowledge should actually be transferred. If we are to use conventional networks, we should look into RNNs for time data, and retain the frequency domain as our input. Although the training was run on GCloud, there should still be specs on the machine used, and since there's relatively little data and we hope to convert to EMADE I think we should run cross-validation rather than a single val set to have a consistent training procedure. Final concern of whether 100ms is quick enough for live diagnosis - need more details on procedure timing. 
* Deep CNN, Acharya et al. : Automated epilepsy diagnosis is a good domain for ML, thus far only traditional/expert feature extraction has been done, so they apply a deep CNN (13 layer) to categorize EEG signals. Inspired by similar ECG work (aka signals processing w/ DL). Fairly good accuracy (around 90%), but far from cutting edge (problem is nigh solved with expert features) - they just want more data.
** Thoughts: The architecture is non-inspired, and I imagine the reason CNNs were used over RNNs was sthe fact that they didn't know about the latter. Crossfold was used, which is good. They claim themselves this is a proof of concept paper, so it's good to know it works.

Following two works heavy in neuroscience domain rather than ML, disclaimer of layman's interp:
* Mu-rhythm, Schaworonkov et al. : Comparing 'personalized' EEG spatial filters via SSD to maximize Signal-Noise-Ratio to common benchmark (C3-centered Laplacian). Experimental setup/motivation very similar to our own. Discussion of the importance of high SNR is discussed, proposing future research into normalizing out phase shift in local filter (caused by "cortical generators").

** Thoughts: Suspecting these mu rhythms are relevant, we should verify the speed of these filters/preprocessing and seed both as expert individuals in terms of preprocessing. SSD appears to be fast, but possibly broken (Verify?). SSD is not a miracle filter, but an alternative we can consider. We may personally not be so worried about SNR if we use any DL components, but we probably have insufficient data and need to focus on good feature extractors such as these.

* Real-time EEG states relate to TMS-induced plasticity, Zrenner et. al: Extensive study of the biological premise of our experiment. Examining effects of TMS syncing to mu rhythm (in alpha band), because accounting for brain states in TMS has rarely been done (oh, neuroscience).
** Will complete reading when time permits. Replicating this exact setup should be our first goal for an expert seed.
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Read/Critique the shared article provided by Scott
|Complete
|January 7, 2019
|January 14, 2019
|January 10, 2019
|-
|Read other linked papers provided by Scott
|Complete
|January 7, 2019
|January 21, 2019
|January 19, 2019
|-
|}