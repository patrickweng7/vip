
== Team Member ==
'''Team Member:''' Jon Greene

'''Major:''' Computer Science

'''Email:''' jgreene82@gatech.edu

'''Interests:''' AI/ML, Data Science, Evocomp, SCUBA

== November 30th, 2020 ==

=== Group Meeting ===
* Updates from subteams, short meeting to allow for focus on term presentations
* Dr. Zutty extended deadline for notebooks to make it easier to focus on presentations

=== Breakout Meeting ===
* Member updates 
* Pulak discussed strategy for presentation, set up practice run meeting for Wednesday

=== Presentations ===
* Stocks
** Explored novel method to develop trading labels
** Implemented technical indicator primitives
*** SImple moving average, exponential moving average, moving average convergence and divergence, stochastic oscillator, relative strength indicator, william's R%, ease of movement, on-balance volume, bollinger bands, Commodity Channel Indicator, and Money Flow Index
** Paper that the group has been competing with appears to have inconsistent calculations resulting in fluke results
* Neural Net
** My slide is number [https://docs.google.com/presentation/d/1Z8PjzaP_LjhyycpGSeXX7rIHdVYkxHzqg8vaKVEYhdU/edit#slide=id.gaecbff40f4_1_25 17] and covered the documentation work found [https://www.notion.so/nnvip/Computer-Vision-Primitives-1d6225122e0c4d6b9abe57ab005e5cf1 here].
* EzCGP
** Ported primitives to be compatible with tensorflow pipeline
** Implemented genome seeding to allow for stopping runs and starting where it left off by pickling individuals from the last generation
** Researched super convergence using cyclical learning rates
* Modularity
** ARLs are selected using differential fitness as a heuristic
*** Individual's fitness difference from parent's fitness
*** Only ARLs that result in positive differentials will be selected
** Second run had bloat issues with some individuals having over 40 ARLs
** AUROC of both control and ARL trails trend down over generations

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Make slide for term presentation
|complete
|11/30/20
|12/2/20
|12/2/20
|-
|Polish CV Primitive documentation
|complete
|11/30/20
|12/2/20
|12/2/20
|-
|Finish updates to notebook
|complete
|11/30/20
|12/3/20
|12/3/20
|-
|Add documentation on Tushna and Tusheet's new primitives
|complete
|12/2/20
|12/2/20
|12/2/20
|}
After adding documentation to the new primitives, the following is my favorite visualization so far (it's a gif so you'll need to click into it), [https://en.wikipedia.org/wiki/Otsu%27s_method#/media/files/Otsu's_Method_Visualization.gif Otsu's Binarization]. After documenting the new primitives, I suggested that the 2D version (which leverages local thresholding) be implemented as the 1D version only sets a global threshold. Tusheet agreed and quickly revised his code.
[[files/Otsu's Method Visualization.gif|none|thumb]]

== November 23rd, 2020 ==

=== Group Notes ===
* Dr. Zutty discussed a few items
** Peer evals are open
** Ensure notebooks are of highest quality to achieve the best grade
** Term presentations on the 2nd

=== Subteam Notes ===
* [https://docs.google.com/document/d/1mOr7D0yCq0v51za8k7MIaVC_EC-6tPOsOEAZgEw9YgM/edit#heading=h.e6knb9tglupl G doc] for review and approval of new primitives
** Adaptive Mean Thresholding
** Adaptive Gaussian thresholding
** Otsu's Binarization
* X-ray baseline run completed, all run results posted [https://github.gatech.edu/pagarwal80/EMADEResults here]
** 665 generations
** Accuracy error was 0.46
* Amazon dataset is ready for testing
* PACE has had several issues, mainly a memory error 
** deleted data isn't reflected in PACE so allocated memory only goes up, causing runs to stop
** pip cache purge resolved issue

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Complete Peer Evals
|complete
|11/23/20
|11/30/20
|11/30/20
|-
|Add documentation to morphological functions
|complete
|11/23/20
|11/30/20
|11/30/20
|-
|Add documentation to bitwise logical functions
|complete
|11/23/20
|11/30/20
|11/27/20
|-
|Add documentation to image and scalar math functions
|complete
|11/23/20
|11/30/20
|11/25/20
|}
The following are probably my two favorite visualizations so far in the [https://docs.google.com/presentation/d/1Z8PjzaP_LjhyycpGSeXX7rIHdVYkxHzqg8vaKVEYhdU/edit#slide=id.gaecbff40f4_1_25 documentation] (top: [http://datahacker.rs/005-image-arithmetic-and-logical-operations-in-opencv-with-python/ bitwise logic], bottom: [https://docs.opencv.org/master/d9/d61/tutorial_py_morphological_ops.html morphological]).
[[files/Bitwise.png|none|thumb]]
[[files/Morph intro.png|none|thumb]]

== November 16th, 2020 ==
I decided to create documentation on CV primitives for my own edification as well as saving time for new members. Talked to Maxim about the platform he used to create his documentation (Notion). 

=== Group Notes ===
* Dr. Zutty discussed when term presentations will happen, likely the 2nd
* He will post midterm grades to Canvas

=== Subteam Notes ===
*Tushna and Tusheet will add 3 primitives
**Two adaptive thresholding and Otsu's Binarization
*Discussed what runs we should accomplish by the end of term
** 10 runs across the x-ray and toxicity datasets
** Use a combination of PACE and ICEHAMMER
** Baseline runs for both datasets are first in queue
*Showed CV Primitives [https://www.notion.so/Computer-Vision-Primitives-6f160347b15c4f3e8c0ccac10b9bc749 Documentation]
**Maxim suggested we team up and create a team documentation page[[files/CV Prim Doc Header.png|none|thumb]]

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Add code snippets to CV Primitives doc
|complete
|11/16/20
|11/23/20
|11/18/20
|-
|Add [https://download.ni.com/evaluation/pxi/Understanding%20FFTs%20and%20Windowing.pdf background] to window functions
|complete
|11/16/20
|11/23/20
|11/18/20
|-
|Add documentation to window primitives
|complete
|11/16/20
|11/23/20
|11/23/20
|-
|Publish doc to [https://www.notion.so/nnvip/Home-3d063fa7b46148cb985eb97a51fa091e team Notion page]
|complete
|11/16/20
|11/23/20
|11/20/20
|}

== November 9th, 2020 ==

=== Group Meeting ===
* Updates from subteams
* Request for Dr. Zutty to join NN breakout to discuss new primitive possibilities

=== Breakout Meeting ===
* Member updates 
* Dr. Zutty joined, answered Tushna's questions
** Edge detection primitives are already implemented
** Another direction is necessary for new primitives

=== Subteam Meeting ===
* Maxim showed his [https://www.notion.so/Configuring-EMADE-on-PACE-60aedf065abc445096617c3cec875a11 documentation] on setting up PACE
* New Amazon dataset being prepped
* [https://arxiv.org/abs/2010.08512 Paper] was discussed
* Bounded box on YOLO doesn't seem to work well

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Tushna's primitives materials
|complete
|11/9/20
|11/16/20
|11/11/20
|-
|Review implemented primitives in source code
|complete
|11/9/20
|11/16/20
|11/15/20
|-
|Search for literature on primitives
|complete
|11/9/20
|11/16/20
|11/15/20
|}
Review of Tushna's g doc and the github codebase revealed that there are numerous (>50) CV primitives already implemented. My search for literature on CV primitives was essentially for foundational knowledge. I found a few great resources.
* Stanford [https://ccrma.stanford.edu/~jos/sasp/Index_this_Document.html Index] of Signal Processing
* Sandia Lab's [https://prod-ng.sandia.gov/techlib-noauth/access-control.cgi/2017/174042.pdf Catalog] of Taper Window Functions
* OpenCV's [https://docs.opencv.org/master/d2/d96/tutorial_py_table_of_contents_imgproc.html documentation]

== November 2nd, 2020 ==

=== Group Meeting ===
* Updates from subteams

=== Breakout Meeting ===
* Finalized new members tasks
* I summarized a survey on neural architecture search ([https://arxiv.org/pdf/1905.01392.pdf NAS])
* Tasked with connecting with CV subsubteam

=== Subteam Meeting ===
* Member updates
* Anuraag and I further discussed where I could help the CV subsubteam (primitive research and implementation) 

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Connect with key CV subsubteam members
|complete
|11/2/20
|11/9/20
|11/6/20
|}

== October 26th, 2020 ==

=== Monday Meeting ===
* Assigned bootcamp students to subteams (I was assigned to NLP/NN)
* Updates from subteams

=== Subteam Meeting ===
* Updates from existing team members
* Pulak asked new members where they would like to focus
** I asked to have the weekend to read a few papers and decide

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Research and Decide Area of Focus
|complete
|10/30/20
|11/2/20
|11/2/20
|}

== October 19th, 2020 ==

=== Lecture  ===
Presentations from bootcamp groups and existing subteams
* Stocks
** Implementation based on paper that has CEFLANN architecture
** Uses the following technical indicators price, volume, open interest
*** Inspired by actual traders
** Intend to design novel technical indicators
* Modularity
** Attempts to modularize common patterns (encodes common node and leaf combinations into a single function)
** These new constructs are called ARLs (adapted representation through learning)
** Selection algorithm biases towards individuals with more ARLs
* NLP/NN
** Applies EMADE to neuroevolution and abstracts towards automation
** Uses tree based representation to build and search neural architecture (NEAT uses graph)
** Run using a dataset from literature using limited functionality performs almost at state of the art levels
* ezCGP
** Represents GP using cartesian space
** This compact representation allows for arbitrary connections between processing layers (block based)
** Amenable to gaussian and other convolutions

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Submit Subteam Rank List
|complete
|10/19/20
|10/26/20
|10/19/20
|}

== October 14th, 2020 ==

=== Lecture ===
* Working session for troubleshooting project and asking Dr. Zutty questions

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Group Work and Presentation
|complete
|10/7/20
|10/19/20
|10/18/20
|}

== October 7th, 2020 ==

=== Lecture ===
* Working session for troubleshooting project and asking Dr. Zutty questions

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Install EMADE, set up MySQL, and run w/o errors
|complete
|10/7/20
|10/14/20
|10/14/20
|-
|Group Work and Presentation
|complete
|10/7/20
|10/19/20
|10/18/20
|}

== September 30th, 2020 ==

=== Lecture ===
* Overview of EMADE (Evolutionary Multi-objective Algorithm Design Engine)
** Installation instructions (also on wiki)
*** Install [https://downloads.mysql.com/archives/community/ Mysql 5.5]
*** Install [https://git-lfs.github.com Git LFS]
*** Clone EMADE [https://github.gatech.edu/emade directory]
** Operation instructions
*** Ensure template has correct SQL settings
*** Adjust hyperparameters
*** Launch framework with template xml

=== Presentation Feedback ===
* Use of tournament selection algorithm was incorrect as it only optimizes one objective
* Use NSGAII to optimize both FNR and FPR (note more uniform distribution)[[files/Back to nsga2 with all prims.png|none|thumb]]Generational results show that NSGAII had a difficult time balancing the minimization of both parameters simultaneously and tended to favor one or the other[[files/Gen data nsga2 more prims.png|none|thumb]]

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Revisit MOGP work (Presentation Feedback)
|complete
|9/30/20
|10/7/20
|10/7/20
|}

== September 23rd, 2020 ==

=== Lecture ===
* Presented and watched other teams present Titanic ML and MOGP comparison

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Clone EMADE Git Repo
|complete
|9/23/20
|9/30/20
|9/29/20
|}

== September 16th, 2020 ==

=== Lecture ===
* Presentation guidelines for Titanic MOGP project
** Compare performance of ML results from subteam to MOGP population
** Objectives will be FNR and FPR

=== MOGP Project ===
* Worked on exploring Titanic dataset via MOGP 
** Started with NSGA-II, default parameters from lab 2, and trig, sigmoid, and relu primitives
** Reduced mutation rate to 0.1, achieving the following result[[files/Mut p1 prim all.png|none|thumb]]
** Changed selection algorithm to tournament and removed all primitives except add, subtract, multiply, and negative
*** This significantly decreased the AUC (note the drastic difference in both averages and minimums)[[files/Gen data best auc.png|none|thumb]]
*** Using tourney was a poor decision as the algo was only optimizing for one objective (hence the lopsided distribution)[[files/Best auc.png|none|thumb]]

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Titanic MOGP teamwork and presentation
|complete
|9/16/20
|9/23/20
|9/23/20
|}

== September 9th, 2020 ==

=== Lecture ===
* Class was divided into subteams (decided by algo to balance skills)
* Subteams will use [https://www.kaggle.com/c/titanic Titanic dataset from Kaggle] to develop predictive models
* All members of subteams will use the same pre-processed dataset but different models
* Each member will submit prediction to Canvas
'''Subteam Meeting 9/12'''
* Joined GroupMe set up by team lead
** Members: Aryaan Mehra (lead), Xufei Liu, Bernadette Bal, Hannah Nguyen
* Discussed pre-processing steps, which dataset to use (Aryaan's), and using sklearn
* Encouraged everyone to dabble and meet up later
'''Subteam Meeting 9/14'''
* Revisited which features to keep, model performance, verifying assignment goals
* Second dataset (Xufei's) produced higher scores in notebook than the previous 
* Features trained on: Pclass, Sex, Age
** Dataset was split into training (2/3) and testing (1/3)
** Age had missing values which were replaced with the mean of the existing values
* Inline results were promising but Kaggle results were ~.05-.06 lower

=== Titanic Results ===
* I chose the Multi-Layer Perceptron model for prediction
** The team also used: Tree, SVM, Random Forest, KNN, XGBoost
* I cycled through each argument for the [https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html sklearn MLP] model (manual search)
** I found the following arguments performed better than default for this application 
*** Node Activation = Tanh (default is relu)
*** Solver = Stochastic Gradient Descent (default is Adam, sgd optimizer)
**** I found it interesting that the plain sgd performed better than the optimized version (though the latter had more consistent results)
*** Max Iterations = 300 (default 100)
* Titanic Confusion (Matrix)
** Inline result 83.3%, Kaggle result 77.7%
[[files/Titanic Confusion Matrix JG.png|none|thumb]]
* Plot of member's model results
** Note that there are 2 co-dominant solutions (two are only one error away from being co-dominant and the last is two errors away)
[[files/Titanic Pareto v2 jg.png|none|thumb]]

=== Notebook Rubric Self Assessment ===
*[https://vip.gatech.edu/wiki/images/e/e4/VIP_AAD_notebook_rubric_jg.pdf Self Eval]

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Lecture Notes
|complete
|9/9/20
|9/16/20
|9/15/20
|-
|Titanic Team Meetings, Discussion
|complete
|9/9/20
|9/16/20
|9/14/20
|-
|Titanic ML Work
|complete
|9/9/20
|9/16/20
|9/13/20
|-
|Notebook Self Assessment
|incomplete
|9/9/20
|9/16/20
|9/15/20
|}

== September 2nd, 2020 ==

=== Lecture ===
* Multi-Objective GP Concept
** Definitions 
*** Gene pool: set of genome to be evaluated in current generation
*** Genome: "DNA" of individual (set of values for GA, tree structure for GP)
*** Search Space: set of all possible genome
*** True Positive: correctly identified true outcome
*** False Positive: incorrectly identified true outcome
*** Objective Space: set of objectives
*** Evaluation: maps genome from location in search space to location in objective space
** Classifier Metrics
*** Confusion Matrix: built using Actual Positive, Actual Negative, True Positive, True Negative, False Positive, and False Negative compose a 
** Maximization Metrics
*** Sensitivity (True Positive Rate, TPR): true positives divided by total positives
*** Specificity (True Negative Rate, TNR): true negatives divided by total negatives
** Minimization Metrics
*** False Negative Rate, FNR: false negatives divided by total positives
*** Fallout(False Positive Rate, FPR): false positives divided by total negatives
** Objective Space
*** Individuals are evaluated using above objective functions and mapped in objective space
*** An individual is Pareto if no other individual outperforms on all objectives
*** Set of Pareto individuals form the Pareto Front
*** Pareto Front guides selection
*** Nondominated Sorting Genetic Algorithm II (NSGAII) separates population into ranks, then individuals compete in a binary tournaments (lower Pareto rank wins, ties broken by crowding distance)
*** Strength Pareto Evolutionary Algorithm 2 (SPEA2) assigns a strength value to each individual (based on number of other individuals it dominates), a rank value (the sum of strengths of individuals that dominate it)

=== Lab ===
* Multi-Objective GP
** Lab reviews how to optimize a solution with multiple objectives
** To visualize the objective space
*** The population is compared individual to individual via the pareto dominance function 
*** An arbitrary individual is chosen 
*** The population is sorted by pareto dominance (relative to the chosen individual)
*** The results are plotted (blue is the chosen individual, red individuals dominate blue, green are dominated by blue, black are not comparable) [[files/GP (default) objective space.png|none|thumb]]
** Below shows the fitness objectives (mean, min) of the best individual by generation
*** Note that complexity tends upwards over time (which will hurt our AUC below)[[files/GP best ind.png|none|thumb]]
*** Below shows the pareto front and AUC[[files/GP multi pareto1.png|none|thumb]]
** By replacing the mutation operator (default of uniform) with [https://github.com/DEAP/deap/blob/master/deap/gp.py shrink], we can combat the increasing complexity
*** Best individual performance by generation[[files/GP best ind2.png|none|thumb]]
*** Pareto front (with an AUC reduction of 53.88%) [[files/GP multi pareto2.png|none|thumb]]

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Lecture Notes
|complete
|9/2/20
|9/9/20
|9/8/20
|-
|Lab 3
|complete
|9/2/20
|9/9/20
|9/8/20
|-
|Group Self Assessment
|complete
|9/2/20
|9/9/20
|9/2/20
|}

== August 26th, 2020 ==

=== Lecture ===
* Genetic Programming Concept
** Evolutionary approach to generating computer programs
*** Similar to Genetic Algorithm except that instead using a fitness metric to evaluate an individual, the individual is the evaluation
*** Functions are most commonly represented as trees (linear and cartesian are equally valid but not as common)
**** Nodes are called primitives and are functions, leaves are called terminals and are parameters
**** Crossover occurs by swapping a node and all nodes and/or leaves below with a node (and all nodes/leaves below) from another individual 
**** Mutation is inserting, deleting, or changing a node but can be difficult 

=== Lab ===
* Symbolic Regression Lab
** added np.sin and np.exp primitives 
** compared default mutation operator (uniform) and node replacement operator
** Uniform mutation results
*** Fitness by generation[[files/GP ex 1 uniform mut.png|none|thumb|Best individual is sin(negative(x), add(multiply(multiply(x, x), subtract(x, x)), subtract(x, add(x, x)))), (0.0,)]]
** Node replacement mutation results
*** Fitness by generation[[files/GP ex 1 node rep.png|none|thumb|Best individual is sin(x, sin(x, x)), (0.0,)]]

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Lecture Notes
|complete
|8/26/20
|9/2/20
|9/1/20
|-
|Lab 2
|complete
|8/26/20
|9/2/20
|9/1/20
|}

== August 19th, 2020 ==

=== Lecture ===
* Genetic Algorithm Concept
** Initialize population of solutions (individuals), evaluate solutions with fitness metric
** allow most fit solutions to crossover (tourney and roulette most common) and mutate (bit flip for bitstring encoding) to generate offspring (the next generation)
** iterate generations until fitness criteria or generation limit is met 
** output most fit solution
* Keywords
** Bitstring Encoding - solution's genome (encoding) represented as string of 1's and 0's (for example 11011100001)
** Crossover - process that reproduces an offspring using two parent solutions
*** One Point - to produce offspring: choose arbitrary point in genome of set length, swap subset of Parent A after point with Parent B's subset after point (or vice versa)
*** Two Point - to produce offspring: choose two arbitrary points in genome of set length, swap two subsets of Parent A with Parent B's subsets (or vice versa)
** Mutate - process that randomly flips a bit of offspring solution 

=== Lab ===
* OneMax Problem
** Maximizes individual of 100 boolean values using a fitness metric of sum
** Exemplifies how a GA optimizes a population under a simple premise
** Walks through the basics of DEAP
*N Queens Problem
** Minimizes individual of n queens on an nxn board using a fitness metric of (sum of conflicts on the diagonals)
** Reducing the mutation rate from 20% to 5%:
*** Increased reliability (7/10 runs found global optima and 9/10 runs found global optima, respectively)
*** Decreased average generations to find global optima (38 generations on average and 34 generations on average, respectively)
[[files/NQP plot.png|thumb|none]]

=== Action Items ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Join Slack
|complete
|8/19/20
|8/26/20
|8/19/20
|-
|Wiki Notebook Creation
|complete
|8/19/20
|8/26/20
|8/23/20
|-
|Week 1 Lab
|complete
|8/19/20
|8/26/20
|8/25/20
|}