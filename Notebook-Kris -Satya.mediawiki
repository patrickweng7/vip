== Team Member ==
Team Member: Kris Satya

Email: ksatya3@gatech.edu
Cell Phone; 408-805-9272

Interests: Theory Computer Science, Football, Basketball, Algorithms

== January 7, 2019 ==
'''Team Meeting Notes:'''
* Introduced to VIP structure and reviewed syllabus and schedule
* Directed to VIP resources like Github and Wiki
* Obtained a high-level understanding of genetic algorithms
* Received instructions and guidance on how to complete the first lab

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Join the Slack Channel
|Completed
|January 7, 2019
|January 14, 2019
|January 13, 2019
|-
|Install Jupyter Notebook
|Completed 
|January 7, 2019
|January 14, 2019
|January 10, 2019
|-
|Clone and Complete Lab 1
|Completed
|January 7, 2019
|January 14, 2019
|January 13, 2019
|}

== January 13, 2019 ==
'''Lab 1 Notes:'''
* I really enjoyed working on this first lab because it gave me a much stronger intuition of the specific features of the genetic algorithm, such as the tournament function.
* Installing Jupyter Notebook and cloning the raw file was relatively simple, as I just followed what I learned in class. Since I didn't have any prior experience with Jupyter Notebook, I found it to be a clean and efficient way to not only write code but have notes and citations.
* I tried to thoroughly understand each line of code in the lab, and the functionality of the DEAP library struck me as incredibly helpful. From having functions to flip bits with specified probabilities to mimic mutations to valid markers for individuals that were deleted from the offspring after being mated or mutated. 
* Also, I learned more about some basic python functions like "zip" and "map."
* Overall, the one max problem was a simple introduction to a genetic algorithm, and I could understood all the steps in training the model. First, a population of individuals was randomly initialized and an evaluation function (the sum of bits) was defined. Then, a generation size was set to 40 to iterate over 40 different generations of populations. In each generation, individuals in the population had a 50% chance of mating with the nearest child and a 20% chance of getting a mutation. By the end, the algorithm had found the optimal population to solve the problem.

== January 14, 2019 ==
'''Team Meeting Notes:'''
* Each sub-team presented on their weekly progress for their projects.
* Introduced genetic programming.
* Learned about binary expression trees and parse trees to represent individuals.

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Lab 2 - Symbolic Regression
|Completed
|January 14, 2019
|January 28, 2019
|January 27, 2019
|}

== January 27, 2019 ==
'''Lab 2 Notes:'''
* Lab 2 was a direct extension of Lab 1 and the main purpose of this lab was to understand how primitive sets and prefix expressions could be applied to modeling individuals.
* I found it really cool how syntax trees provided an efficient way to store operations and characteristics of individuals, and I learned more about how the DEAP primitive set worked to do this.
* I initially add my own numpy primitives of power and divide, but I realized upon running the program that these functions would result in errors because of the 0s in the individual terminals.
* In the end, my lab trained successfully, I got a graph that was minimizing the cost function over time.
[[files/Lab2-Symbolic-Graph.png|left|thumb]]