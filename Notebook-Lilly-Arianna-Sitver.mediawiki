== Team Member ==
[[files/Lilly sitver.jpg|thumb]]
Team Member: Lilly A Sitver
Email: lsitver3@gatech.edu
Cell Phone: 865-548-8157

Interests: Machine Learning, Software Development, Graphic Design, Data Science, Marketing

== January 8th, 2020 ==
'''<u>Team Meeting Notes:</u>'''

'''Genetic Algorithms:'''
* Created through the mutation of individuals in the previous population
* Through several operations of this process, the best individual will be produced
* Out of a population, the individuals’ properties will be altered
* '''Fitness:''' The main driver for the evolutionary algorithm, how well does an individual accomplish a task relative to the rest
'''Selection Process "survival of the fittest":'''
* A tournament is when individuals based on their fitness proportions are selected to compete to mate with a more fit individual
* '''Mate/Crossover:''' mating between individuals
** Single point - genetic data is divided and crossed over
** Double point- genetic groups of 3 are switched among the data set
* '''Mutate:''' random modifications to maintain diversity
'''Lab 1:'''

One Max Problem
* Indicates that fitness levels increase from generation to generation (40 generations) with a max fitness at 100
* The population started out with 300 individuals
* Selection - mate 50% & mutate 20%
N Queens
* Goal: have N queens on a chessboard where it is impossible for one queen to take another
* Uses shuffle index mutation to shuffle the individual’s list (positions on a chessboard) instead of randomly changing them to stay in set bounds

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Date Resolved
|-
|Set up Wiki VIP Journal
|Completed
|January 8, 2020
|January 15, 2020
|-
|Join Slack
|Completed 
|January 8, 2020
|January 10, 2020
|-
|Complete Lab 1
|Completed
|January 8, 2020
|January 15, 2020
|}

== January 15th, 2020 ==
'''<u>Team Meeting Notes:</u>'''

'''Genetic Programming'''
* The individual is the function itself
* Tree Representation
** The tree is made up of primitives/functions and terminals/parameters (inputs)
** Trees are converted to a lisp preordered parse tree
*** Ex. the tree for f(x) = 3*4+1 is [+,*,3,4,1]
*** Parse tree goes top row down, left -> right, finish the function first before continuing on 
* Mutation can be inserting/deleting or changing a node or subtree
** Taylor series
'''Lab 2'''

genetic programming + tree structures

'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Date Resolved
|-
|Complete First Half of Lab 2
|In Progress
|January 15, 2020
|January 20 ,2020
|}

== January 22nd, 2020 ==
<u>'''Team Meeting Notes:'''</u>

Gene pool is the set of the genome to be evaluated during the current generation
* Genome
** Genotypic description of an individual's DNA
** GA = set of values
** GP = tree structure, string
* The evaluation of a Genome associates a genome/individual w/ a set of scores
** True Positive Rate(TPR = TP/P)
** Positive Predicted Value (PPV = TP / ( TP + FP)
** False Negative Rate (FNR = FP / N)
** False Positive Rate (FPR = 1 - TNR)
* Phenotype - set of measurements each genome is scored against, expression of the gene
* Pareto Optimality
** An individual is Pareto if there is no other individual in the population that outperforms the individual on all objectives
'''Action Items'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Date Resolved
|-
|Complete Second Half of Lab 2
|In Progress
|January 22, 2020
|January 27 ,2020
|}

== January 29th, 2020 ==
'''Team Meeting Notes:'''

Goal: Complete the Kaggle Lab by using clean engineering features and splitting data into folds to create a common feature set. Then, build a model with a train/test set and develop and fit a model, score, and iterate until you create a group Pareto Optimal Set.

'''Kaggle Lab'''
* looked at SibSp, Age, Sex, and P-class to optimize CSV set
* saw an over 75% accuracy range with all classifier sets, highest percentage seen -> 92% with the Confusion Matrix
'''Action Items''' 
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Date Resolved
|-
|Solve Kaggle Titanic Lab
|In Progress
|January 29, 2020
|February 2, 2020
|}