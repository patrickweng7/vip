== Team Member ==
Team Member: Parshva Shah

Email: pshah380@gatech.edu Cell Phone; 678-756-3612

Interests: Weightlifting, Football, Skiing

== April 30th, 2021 == 

=== Team Meeting Notes: ===
* Presentations

=== Individual Notes: === 
* Stocks
** Piecewise Linear Representation Paper
** 2 eMade Runs
** Introduced Buy/Sell lag as a new metric
** Needed clarification on what Buy/Sell lag was

* NLP
** Used simpler datasets to solve problems with SQL and create a seeded network
** Good visual repressntations
** Used Amazon product review dataset which I thought was interesting

* Modularity
** Used ARL(Adaptive Represntation Learning)
** Did not understand ARL trees
** Found individual that outperformed others



== April 26th, 2021 ==

=== Team Meeting Notes: ===
* Went over the Final PPT
* Did a review for the Final presentation
* Worked out the time limits for each slide

=== Individual Notes ===
* Completed slide on Symbolic Regression
* Reviewed over the code I wrote and the Research Paper and decided on what I was going to present for my slide
* Talked to Rodd and team members and clarified what to specifically present so that there is no overlap on the slides
* Had 4 finals so could not get to finishing my slide until April 29th.

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Finish Symbolic Regression Slide
|Completed
|April 26th, 2021
|April 29th, 2021
|April 29th, 2021
|-
|Review over what to present
|Completed
|April 26th, 2021
|April 29th, 2021
|April 29th, 2021
|}






== April 19th, 2021 ==

=== Team Meeting Notes: ===
* Started to work on Final Presentation Slides
* Assigned to do Symbolic Regression Slide on the Research Paper

=== Individual Notes ===
* Met with Rodd individually and tried to troubleshoot the problem regarding not being able to push the symbolic regression problem on github
* Met with Rodd individually and tried to understand how Pagie-1 worked
* Wrote the code for the objective function Pagie-1 on the symbolic regression problem file and pushed it to github.
* Ran regression on Pagie-1 with its training set.
* Defined the accuracy by using fitness which was represented by the minimization of the sum of the absolute differences between each of the objective functions actual values and the individual.
* Code is written here: https://drive.google.com/file/d/1XBxeVkuTQKcDPM6CKfXSEtB7nDIctBhc/view?usp=sharing



=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Meet with Rodd Individually
|Completed
|April 19th, 2021
|April 26th, 2021
|April 26th, 2021
|-
|Push file to Github
|Completed
|April 19th, 2021
|April 26th, 2021
|April 26th, 2021
|}






== April 12th, 2021 ===

=== Team Meeting Notes: ===
* Finished Research Paper
* Assigned a symbolic regression problem - Pagie-1
* Rodd went over on the code of the symbolic regression problems and how it worked
* Rodd went over the instructions on how to push files to github


=== Individual Notes ===
* Looked over Pagie-1 assigned problem
* Pagie-1 objective function: 1/(1+x^(-4)) + 1/(1+y^(-4))
* An interesting thing to note is that Pagie-1’s objective function was different from the rest because it had 2 variables, x and y, instead of only 1 and its training set was a grid of evenly spaced points instead of uniform random samples.
* Tried to push the file to github but did not work
* Read the code individually and tried to understand the symbolic regression problem code and how it worked

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review and Research Pagie-1 problem
|Completed
|April 12th, 2021
|April 19th, 2021
|April 15th, 2021
|-
|Push file to Github
|In Progress
|April 12th, 2021
|April 19th, 2021
|N/A
|}



== April 5th, 2021 ==

=== Team Meeting Notes: ===
* Lecture on Statistics

=== Sub-Team Meeting Notes: ===
* Rodd shared a research paper on symbolic regression
* Each of us popcorn read the paper

=== Notes on Paper: === 
* Comparative study of crossover in ezCGP
* 4 problems analyzing symbolic regression(Koza-3, Nguyen- 4, Nguyen- 7, Pagie-1)
* Symbolic regression is a type of regression analysis that searches the space of mathematical expressions to find the model that best fits a given dataset in terms of accuracy.

=== Individual Notes ===
* Another team member was also having trouble installing ezCGP, so we met with Rodd and resolved the issue
* Edited the git.config and added the pushurls
* Reviewed the paper and researched the how symbolic regression can be used with ezCGP(learned how symbolic regression uses mathmatical operators to try to best match the individual with the actual objective function's value)


=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review and Research on Paper
|Completed
|April 5th, 2021
|April 12th, 2021
|April 9th, 2021
|-
|Install ezCGP 
|Completed
|March 29th, 2021
|April 7th, 2021
|April 7th, 2021
|}



== March 29th, 2021==

=== Team Meeting Notes: ===
* My first ezCGP meeting
* Break out session with ezCGP and introduced each other. 
* Went over how to install necessary basic ezCGP required downloads and how to push to github.

=== Sub-Team Meeting Notes: ===
* First subteam Meeting on Thursday March 31st. 
* Rodd went over basics on ezCGP and shared a powerpoint presentation

=== Individual Notes: ===
* Went over the ezCGP powerpoint and did individual research on what cartesian genetic programming specifically is and how its applications
* Tried to install ezCGP downloads but was having trouble on how to push two urls to github(ezCGP and eMADE github accounts)

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review PPT and Research
|Completed
|March 29th, 2021
|April 7th, 2021
|April 2nd, 2021
|-
|Install ezCGP 
|In Progress
|March 29th, 2021
|April 7th, 2021
|N/A
|}


== March 22nd, 2021==
* VIP Presentations

== March 17th, 2021 ==

=== Team Meeting Notes: ===
* This meeting was left as a work session and a Q&A session
* Recieved assistance from the instructor to establish a remote MySQL server
** The problem was an incorrect IP address being used

=== Sub Meeting Notes: ===
* Resolved the previous remote server problem and established connections
* Discussed what needs to be included in the presentation
* Questions were raised about the meaning of the False positives and False negatives for our current program
** Found out that they were the total False positives and negatives over the process
* Changed the false positive and false negative functions to produce the FPR and FNR.
* Went over the presentation and decided what needed to be added to document our work and which team member was going to present

=== Individual Notes: ===
* Established a remote MySQL connection using the correct IP address
** Had to debug starting sql in terminal 
* Ran eMade with the MySQL remote connection for a total of 22 generations
* Went over and helped create the presentation

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Class Lecture
|Completed
|March 17th, 2021
|March 22nd, 2021
|March 22nd, 2021
|-
|Sub-Group Meeting 1
|Completed
|March 17th, 2021
|March 22nd, 2021
|March 21st, 2021
|-
|Resolved the remote connection issue
|Completed
|March 17th, 2021
|March 22nd, 2021
|March 17th, 2021
|-
|Ran eMade
|Completed
|March 17th, 2021
|March 22nd, 2021
|March 21st, 2021
|-
|Made the PPT slides
|Completed
|March 17th, 2021
|March 22nd, 2021
|March 21st, 2021
|}

== March 10th, 2021 ==

=== Team Meeting Notes: ===
* Worked with the professor to resolve any problems 
* This week was a work session for Q&A as well
* The assignment was to use eMade and use remote connections to process the data

=== Sub Meeting Notes: ===
* Attempted to resolve issues surrounding the installation of eMade
** Resolved the issue installing eMade and loaded it on each of the sub-team members computers
* Attempted to resolve issues setting up an SQL connection
** After deliberation, decided to reach out to the instructor during the next meeting for further assistance
* Rishit decided to run the mySQL connection and be the master processor

=== Individual Notes: ===
* Attempted to install eMade but ran into multiple errors
* Used a different installation method(pip) and resolved the issue during the sub team meeting
* Installed MySQL and set up a local instance, but could not connect to Rishit's master connection
* Decided to wait for further assistance from the instructor

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Class Lecture
|Completed
|March 10th, 2021
|March 17th, 2021
|March 17th, 2021
|-
|Sub-Group Meeting 1
|Completed
|March 10th, 2021
|March 17th, 2021
|March 15th, 2021
|-
|Installed eMade and MySQL
|Completed
|March 10th, 2021
|March 17th, 2021
|March 15th, 2021
|-
|Test the remote connection
|Not Resolved due to Error
|March 10th, 2021
|March 17th, 2021
|N/A
|}

== March 3rd, 2021 ==

=== Team Meeting Notes: ===
* Did the first two presentations
* Learned more about eMade and the basics to gear up for the next assignent.
* Point to note is the fact that having multiple objectives is important when using ML algorithms and GP.

=== Sub Meeting Notes: ===
* No sub meeting due to the fact that there were no assignments to complete 

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Class Lecture
|Completed
|March 3rd, 2021
|March 10th, 2021
|March 3rd, 2021
|}

== February 24th, 2021 ==

=== Team Meeting Notes: ===
* Watched the subteams present their projects
** Got through 4/6 presentations, the rest(including mine) will be done the following week
* Went over installing emade very quickly

=== Sub Meeting Notes: ===
* Debriefed over the subteams we saw present('''Sub-Group Meeting 1)'''
** Decided to make minor improvements, including adding talking points about individual ML algorithms
* Went over the presentation with the added changes one more time and decided who was going to present what slide('''Sub-Group Meeting 2''')

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Class Lecture
|Completed
|February 24th, 2021
|March 3rd, 2021
|February 24th, 2021
|-
|Sub-Group Meeting 1
|Completed
|February 24th, 2021
|March 3rd, 2021
|February 24th, 2021
|-
|Sub-Group Meeting 2
|Completed
|February 24th, 2021
|March 3rd, 2021
|March 2nd, 2021
|}

== February 17th, 2021 ==

=== Team Meeting Notes: ===
* Discussed the last assignment and introduced the new team project about creating the evolutionary program

=== Sub Meeting Notes: ===
* Created a template from previous GP labs and filled in our specific components'''(Sub-Group Meeting 1)'''
* Used SPEA2 and selBest because we cannot use the tournament selection for the selection functions
* Chose to use the following mutation functions:
** mutShrink
** mutUniform
* Used cxOnePoint as our mating function
* Discussed the specific primitives to use
* Multi-Objective Assignent
** We must reduce the area under the curve and the accuracy
* Split into 2 Groups(A & B)('''Sub-Group Meeting 2)'''
** Group A was assigned to work on the notebook and finish the specifics left in the evolutionary algorithm
** Group B was assigned to work on the power point slides for the presentation(my team)
* Met as a Group and reviewed the presentation('''Sub-Group Meeting 3)'''

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Class Lecture
|Completed
|February 17th, 2021
|February 24th, 2021
|February 19th, 2021
|-
|Sub-Group Meeting 1
|Completed
|February 17th, 2021
|February 24th, 2021
|February 20th, 2021
|-
|Sub-Group Meeting 2
|Completed
|February 17th, 2021
|February 24th, 2021
|February 21st, 2021
|-
|Sub-Group Meeting 3
|Completed
|February 17th, 2021
|February 24th, 2021
|February 23rd, 2021
|}

== February 10th, 2021 ==

=== Team Meeting Notes: ===
* Formed subteams based on Pareto distributions of self-assessed skills
** Me, Rohan, Aazia, Cam, Mina, Pranav
* Looked over the Titanic ML project on Kaggle
* Went over an example of data cleaning and processing, and an algorithm

=== Sub Meeting Notes: ===
* Analyzed the data
** Created Heatmaps of NaNs
** Created grids of the data
** Dealt with Categorical values
*** Splitting up cabin numbers for more significant meanings
*** Interpreting sex variable
*** Fixing age and embarked variables
** Created Correlation Matrix
* Cleaned and processed the data
** Fixed the NaNs by replacing them with means, modes, etc
** Removed unnecessary columns of data that posed no significance to the algorithms
* Created and Ran the processed models
** Split the test and train data into appropriate variables
** Ran the following:
*** Decision Tree
*** K Neighbors
*** Neural Network
*** Logistic Regression
*** SVC
*** Random Forest
*** XGBC
*** Gradient Boosting
*** LGBMC
*** Cat Boost
*** ADA Boost
** Created Confusion Matrices for the false/true positives/negatives. 
** Created plots for the matrices
* Individual Model Contribution
** Researched the Logistic Regression model 
** Implemented the model onto the test and train data
** Ran with 82% accuracy
** Ran with a score of 0.76794 on Kaggle

** [[files/Matrix for Logistic Regression.png|center|thumb|Matrix for Logistic Regression]]

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Class Lecture
|Completed
|February 10th, 2021
|February 17th, 2021
|February 17th, 2021
|-
|Sub-Group Meeting
|Completed
|February 10th, 2021
|February 17th, 2021
|February 15th, 2021
|-
|Work on and Finish Individual Logistic Regression Model
|Completed
|February 10th, 2021
|February 17th, 2021
|February 17th, 2021
|}

== February 3rd, 2021 ==

=== Team Meeting Notes: ===
* Objectives:
** Power of multiple objective optimization in supplying a population of solutions not just a single objective
** Understand how Pareto dominance can be used to affect probability of mating
** Understand classification terms(true positive, false positive, sensitivity,specificity, accuracy)
** Use multiple objective concepts for selection of teams for project efforts
* Gene pool is the set of genome to be evaluated during the current generation
** Genome:
*** Genotypic description of individuals
*** DNA
*** GA = set of values
*** GP = tree structure,string
** Search Space
*** Set of all possible genome
*** For Automated Algo Design:
**** Set of all possible algorithms
* Evaluating a Genome associates a genome or an individual with a set of scores
** TP- True Positive
** FP- False Positive
* Objectives:
** Set of measurements each genome is scored against
** Phenotype
* Objective space(set of objectives)
* Evaluation:
** Maps a genome or an individual
** From a location in search space
*** Genotypic Description
** To a location in objective space
*** Phenotypic description
* Example:
** Algorithm = Red objects
** All apples are red
* Objective Space:
** Each individual is evaluated using objective functions:
*** MSE
*** Cost
*** Complexity
*** True Positive Rate
*** False Positive Rate
** Objective scores give each individual a point in objective space
** This is referred to as the phenotype of the individual
* Pareto Optimality
** An individual is Pareto optimal if there is no other individual in the population that outperforms the individual on all objectives
** The set of all Pareto individuals is known as the Pareto frontier
** These individuals represent unique contributions
** Drive selection by favoring Pareto individuals
* Nondominated Sorting Genetic Algorithm 2(NSGA II)
** Population is separated into non dom-ation ranks
** Individuals are selected using a binary tournament
** Lower Pareto ranks beat higher Pareto ranks
** The same front are broken by crowding distance
*** Crowding distance is the summation of normalized Euclidean distances to all points within the front
*** Higher crowding distance wins
* Strength Pareto Evolutionary Algorithm 2(SPEA2):
** Each individual is given a strength S
*** S is how many others in the population it dominates
** Each individual receives a rank R
*** R is the sum of S’s of the individuals that dominate it
*** Pareto individuals are nondominated and receive an R of 0
A distance to the kth nearest neighbor(variance^2) is calculated and fitness of (R +/ 1(k +2))is obtained 

=== Lab Notes: ===
* Objective: Create multi-objective Genetic Program with symbolic regression to demonstrate multi-objective optimization
* Create new fitness and individual classes
* Minimize 2 objectives
** MSE
** Size of tree
* Add 3 new primitives to primitive set and set a seed of randomization(ensures everyone produces the same results
* Add another objective to our evaluation function and change the problem into a more difficult one
** Designed to show more evolution over time than the last problem
* Define pareto dominance function
** Returns true if the first individual dominates the second individual
* Initialize a random population of 300 individuals
* Sort population by pareto dominance in comparison to a separate individual that was initialized separately, specifically for comparison
* Plot the objective space using the sorted population
* The goal is to minimize both objective, to find a pPreto individual with the lowest MSE and tree size
* Next, we define and run the main evolutionary algorithm
* Next we plot the results of the run
** In the graph given, the orange and red plots represent tree size and the blue and green plots represent MSE
** Used DEAP’s Mu plus Lambda evolutionary algorithm in which mu is the number of individuals to select for the next generation and Lambda is the number of children to produce at each generation
** This does not accurately represent the population’s fitness on both objectives
* Next, we can visualize our objective space and pareto front
** We can use the area under the curve of the Pareto front to measure the performance of our pareto front
** The lower our AUC is, the better our pareto front.
** The initial run produces:
*** Area Under Curve: 2.463792426733847
** The second run in which I manipulated the mutation probability to 0.001 from 0.2 and the Lambda to 50 from 100 produces:
*** Area Under Curve: 0.9798779140805436
*** This shows more than a 25% decrease in AUC [[files/Lab 2 New Pareto.png|thumb|Area Under Curve: 0.9798779140805436]]

[[files/Lab 2 Original Pareto.png|center|thumb|Area Under Curve: 2.463792426733847]]

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Class Lecture
|Completed
|February 3rd, 2021
|February 10th, 2021
|February 10th, 2021
|-
|Finish Lab 2
|Completed
|February 3rd, 2021
|February 10th, 2021
|February 10th, 2021
|-
|Finish Self Evaluation
|Completed
|February 3rd, 2021
|February 10th, 2021
|February 10th, 2021
|}

=== Self Evaluation: ===
[https://drive.google.com/file/d/1meCD35zrkZrmiE-NlZkteqMPTPdmX2Kk/view?usp=sharing Self Evaluation Link]

== January 27th, 2021 ==

=== Team Meeting Notes: ===
* While last week we had a separate individual and a separate function evaluator to obtain our objective scores, this week we are using the individual as the function itself
* We can represent a program as a tree structure
** Nodes represent functions(called primitives)
** Leaves represent parameters(called terminals)
*** The input can be thought of as a terminal
*** The output is produced at the root of the tree
* Tree is stored by converting it to a lisp preordered parse tree
** Operator followed by inputs
** The tree for f(x) = 3*4+1 can be written as [+,*,3,4,1]
*** Use the root first and then expand
** Function: (9x) = 2-(0+1)
*** Parse tree: [-,2,+,0,1]
** Operator first, left side, right side
* '''Example:'''
** Function: f(x) = 2-(0+1)
** Parse Tree: [-,2,+,0,1]
* The subtrees are exchanged to produce children
* Mutations
** Insert a node or subtree
** Delete a node or subtree
** Change a node
* '''Example:''' Symbolic Regression
** Y = sin(x)
** Primitives that could make this evolution easier
*** power(), Factorial(), sin(), cos(), tan()

=== Lab Notes: ===
# After importing the necessary libraries, we create our fitness and individual classes
## Individual class inherits from DEAP’s PrimitiveTree class(not a list) bc of representation as a tree structure
## Primitive and terminals
# Initialize primitive set and add the primitives the trees can use
## This includes mathematical operators
## Renaming argument names
## The amount of arguments each primitive takes(arity = 1,2,3,etc)
# I added new primitives(subtract,multiply)
# Define toolbox, individual, population, and compiler
## Similar to previous lab
## “expr” function: this specific method returns a primitive tree based on a minimum and maximum tree depth that we can define
# Define evaluation function
## Compile the tree into a function
## Calculate the MSE from the function
## Minimize the MSE
### Finding the best combination of primitives given objectives
### Pay more attention to objectives rather than data
# Register genetic operators
## Define mutation methods
## Added Node Replacement GP mutation
## You can add tree height constraints to mutation and crossover functions
# Program main genetic algorithm
## This results in the average slowly decreasing
## When I implemented my new mutation(Node Replacement GP mutation) it seems that the average decreases faster and the minimum was achieved faster[[files/Lab 2 new mutation graph.png|thumb|This was the graph that was achieved with the new node replacement GP mutation I added]] [[files/Lab 2 Original graph.png|center|thumb|This was the graph that was achieved with the original mutations present]]

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Review Class Lecture
|Completed
|January 27th, 2021
|February 3rd, 2021
|February 3rd, 2021
|-
|Start Lab 2
|Completed
|January 27th, 2021
|February 3rd, 2021
|February 3rd, 2021
|}

== January 20th, 2021 ==

=== Team Meeting Notes: ===
* '''Concept'''
** Each new generation is created through mating/mutation of individuals in the previous population based on their fitness. After many operations of the process, it will eventually produce the “best” individual.
*** The fitness of this individual is better than the rest and cannot improve
* '''Keywords'''
** Individual: one candidate in the populations(with properties such as DNA)
** Population: group of individuals whose properties will be changed
** Objective: a value used to characterize individuals that you are trying to maximize or minimize(usually the goal is to increase objective through the evolutionary algorithm)
** Fitness: relative comparison to other individuals
** Evaluation: function that computes the objective of an individual
** Selection: represents “survival of the fittest”; preference to better individuals
*** Fitness Proportionate: the greater the fitness value, the higher the probability of being selected for mating
*** Tournament: several tournaments among individuals; winners are selected for mating
** Mate/Crossover: represents mating between individuals
*** Single point, double point
** Mutate: introduces random modifications to maintain diversity
** Algorithms: various evolutionary algorithms to create a solution or best individual
# Randomly initialize population
# Determine fitness of population
# Repeat(until best individual is found)
## Select parents from population
## Perform crossover on parents creating population
## Perform mutation of population
## Determine fitness of population

=== '''Lab Notes:''' ===

==== One Max Problem ====
# '''Objective''': List of random boolean values(0s or 1s), goal is to produce a list containing ALL 1’s
# Created the fitness objective and Individual classes
## '''Individual''': A list of 100 bits
## Used DEAP to define our toolbox including adding random number generator for our Individual
## Set up '''Evaluation''' function for fitness
## '''Fitness''': The sum of the boolean values in each list with a maximum of a 100 fitness score
# Defined genetic functions to use
## Evaluate function
## '''Mate''' function, or two point crossover
## '''Mutate''' function, or flipping a bit with a probability of 5%
## '''Tournament''' function, selection of 3 individuals
# Define main genetic algorithm
## Define population of 300
## Set up evolutionary loop for 40 generations
## Added tournament selection with exact copies(independence from parent)
## Perform crossover with 50% probability and mutation with 20%
# Re-evaluate the offspring and repeat process
# Prints every generation’s max, min, standard deviation, and mean fitness scores
# Found the individual with the best fitness in under 40 generations. However due to random initialization of the population, sometimes it might take over 40 generations to find the best fit individual.

==== The N Queens Problem ====
# '''Objective''': create a configuration on an nxn chessboard in which there are n queens so that no queen can be taken by one another with a constraint of one queen being assigned to one column and only one queen per line.
# Create fitness objective and individual classes
## '''Fitness''' objective is to minimize(conflict)
## Define toolbox with functions
## Created a permutation function(list of integers with range n without replacement) to help define our individual and population functions
# Define '''evaluation function''' based on our objective
# Define '''crossover''' function
## Partially matched crossover: swaps pairs of queen positions between two parent individuals
## More effective than regular crossover in this problem
# Define '''mutation''' function
## Shuffles indexes
## Changing the indexes could mutate values outside the set bounds
# Register function previously defined and add a tournament selection
# Run main algorithm for 100 generations
# Not guaranteed to find minimum of 0
# Below is the graph comparing fitness vs generations
[[files/The N Queens Graph.png|center|thumb]]

=== Action Items: ===
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Join VIP Slack Group
|Completed
|January 20th, 2021
|January 27th, 2021
|January 26th, 2021
|-
|Review Class Lecture
|Completed
|January 20th, 2021
|January 27th, 2021
|January 26th, 2021
|-
|Intall DEAP, Anaconda, Jupyter 
|Completed
|January 20th, 2021
|January 27th, 2021
|January 26th, 2021
|-
|Complete Lab 1
|Completed
|January 20th, 2021
|January 27th, 2021
|January 26th, 2021
|}