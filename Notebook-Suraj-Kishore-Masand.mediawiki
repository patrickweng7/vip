== Team Member ==
Team Member: Suraj Kishore Masand

Email: smasand6@gatech.edu

Cell Phone: 678-557-7969

Major: Computer Science, Threads: Devices and Intelligence

== Week 1: January 7 – January 13, 2019 ==
'''Team Meeting Notes:'''
* Joined the Visualization Sub-Team
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get started with loading and learning to use the dashboard made by the team last semester.
|No progress this week
|January 7, 2019
|January 20,2019
|January 16, 2019
|}

== Week 2: January 14 – January 20, 2019 ==
'''Team Meeting Notes:'''
* Did not meet this week due to next Monday being a holiday. 
* Added our team's weekly progress from last week onto the wiki and presented our sprint.
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get the dashboard up and running locally
|Completed
|January 13, 2019
|January 20,2019
|January 16, 2019
|-
|Add our week's progress to the subteam weekly progress wiki page
|Completed
|January 13, 2019
|January 14, 2019
|January 14, 2019
|}

== Week 3: January 21 – January 27, 2019 ==
'''Team Meeting Notes:'''
* Met to discuss individual progress and hurdles.
* Heroku is up and running, with bugs that need fixing.
* UI has aesthetic changes in progress.
* Initial draft of UI survey is ready to be sent out to teams (once we have a refactored version of the dashboard ready)
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Get EEG Data for testing with our UI
|Completed
|January 23, 2019
|January 28,2019
|January 25, 2019
|-
|Run the local and Heroku versions of app to test for bugs
|No progress yet
|January 23, 2019
|January 28, 2019
|January 26, 2019
|}

== Week 4: January 28 – February 3, 2019 ==
I was able to get the application up and running locally as well as connect to a local database, but having some issues with getting the EEG data to work.

Seems like the EEG data that I have a copy of is missing columns that are used in the paretofront graphing and auc calculations.

Meanwhile, read through some of the code for the flask app to see how the graphs are being created and displayed.

'''Team Meeting Notes:'''
* Decided that the Heroku app was probably more troublesome than installing and running the flask app locally.
** We will create a requirements file so that the setup process will be more straightforward for the user.
* Make sure we merge code of all the changes we make.
* Discussed our next set of steps, discussed below.
'''Team Action Items:'''
* Create a guide to setting up EMADE-Viz with a virtual environment - Anthony
* Meet to discuss testing with other teams - Anthony and Carissa
* Fix AUC graph - Michael
* Dashboard UI - Jeff and Will and Sierra
* Talk to Jason about hereditary visualizations - Will
* Visualization of # of pareto individuals over time - Suraj
* Make sure all code is merged - Everyone
'''My Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create Visualization of # of pareto individuals over time
|Completed
|January 28, 2019
|February 4, 2019
|February 4, 2019
|-
|Reach out to EEG for updated data
|On Hold - Waiting for EEG team to run EMADE again
|January 30, 2019
|February 11, 2019
|February 9, 2019
|}

== Week 5: February 4 – February 10, 2019 ==
I finally was able to get the graphs to display on my local version of the flask app after getting a different copy of the titanic data.

I created the new graph to visualize the number of pareto individuals in each generation and how it changes over time. The code is very modular, so it was fairly easy as I could look at the general structure of the AUC graph code to determine how to retrieve and display the data from the database. 

Reached out to the EEG team again, but it seems like the data from last semester is gone (since it was a more trivial problem and the data was too large to keep hosting constantly on google cloud without running out of credits). So until the EEG team runs a new problem with EMADE with the new data from the Emory lab, we won't have EEG data to test our app with. Next we will probably reach out to the stock team to see if they have any EMADE data to visualize. 

I was also able to run EMADE on a Google Cloud instance (listed in the Action Items below). I followed the guides on the home page of this VIP wiki, but I think I might need to create a more specific guide that discusses exactly how to copy over EMADE as well as how to upgrade/downgrade package versions to get EMADE running successfully. 

'''Class Meeting Notes from Feb 4:'''

The next visualizations we should work on are related to the ancestry of the individual. In order to create these graphs, we need to know the parents of an individual, where the crossover took place, and what mutation (if any) occurred. This requires that more information be stored to the database, so we need to determine where in the EMADE codebase this is happening, as well as how to save this information to the database so that we can access from our Flask app. 
* Change EMADE to keep track of individuals’ history
** Called sql_connection_orm.py in src/GPFramework folder
** Look for history decorator object from DEAP
** Add columns to the individuals to keep track of their parents
* 2 Visualizations
** Lineage visualization in objective space
*** Track the lineage of an individual on a plot of the objective space (i.e. FN/FP for the Titanic Dataset)
** Genotypic visualization
*** See where exactly a tree mutated
*** What parts did each parent contribute
* Idea for future
** Manual editing of individual tree (which will then be seeded into the db)
** Be able to drag and drop nodes and connections
'''Team Meeting Notes:'''
* Progress
** Anthony and Carissa
*** Guide created for setting up EMADE-Viz with virtual environment
** Michael
*** AUC graph fixed (no longer hard coded)
** Jeff, Will, and Sierra
*** Dashboard UI looks great
** Suraj
*** Visualization of # of pareto individuals over time
** Team
*** Talked to Greg about future hereditary decorations
*** All code from last couple of weeks merged
'''Team Action Items:'''
* Add a column for parents hashes - Will and Michael
* Reach out to EEG team for datasets - Suraj, Anthony, Carissa
* Finish the user study materials - Anthony, Carissa
* Set up user studies with EEG team and a first-year team - Anthony, Carissa
* Create a yml file for requirements and environment setup - Anthony
* Get EMADE and EMADE-Viz running in parallel - Jeff, Suraj, Sierra
* Get EMADE running on Google Cloud - Jeff, Suraj, Sierra
'''My Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Run EMADE on Google Cloud
|Completed - Able to run Titanic problem
|February 6, 2019
|February 11, 2019
|February 10, 2019
|-
|Reach out to EEG for updated data
|On Hold - Waiting for EEG team to run EMADE again
|January 30, 2019
|February 11, 2019
|February 9, 2019
|}

== Week 6: February 11 – February 17, 2019 ==
As mentioned in the previous week, I was able to get the Google Cloud VM instance to run EMADE on the Titanic problem on Sunday, February 10th. I am helping Jeff set up his instance as well so that we can add a worker to my master or to start running a different problem so that we have a wider variety of data to test out or visualizations with. I also completed the graph for the time it takes for each individual to be evaluated per generate (discussed in the Class Meeting Notes section below). One thing I learned is that there are some outliers from individuals that timed out, as well as numerous individuals that error out almost immediately, which skews the box and whisker part of the graph.  

I also attempted to run the Wine and DOTA datasets that are already in the EMADE repo, however I was unable to get results from them. The DOTA problem ran for over 400 generations relatively quickly, but that was because every individual erred out very quickly. Therefore, there were no pareto individuals from that dataset. The Wine dataset seemed to cause EMADE to crash when I ran it on Google Cloud, and I am still unsure whether there was malformed data or something possibly went wrong with the database connection. In either case, I was not able to generate usable information from the other datasets that I tried to run.  

'''Class Meeting Notes from Feb 11:'''

We want to add more visualizations, but we need the ancestry data to be written to the database so that we have access to it. 

Apart from that, the main issue we are facing right now is that sometimes our app takes a long time to load the data and show the graphs, and if we go back to a prior generation, it takes just as long for the page to update. We are not sure if this is caused by querying the database (and whether a Google Cloud DB takes longer to respond) or something in our Flask app is taking a long time to computer a graph or something else. 

While we are wait for the code changes to write ancestry data to the database, in the meantime there are a couple more visualizations that can we can implement.

'''1) The time it takes for each individual to be evaluated for each generation''' 
[[files/Evaluation Times of Individuals per Generation.png|none|thumb|400x400px|This graph is taken from Dr. Zutty's thesis paper, and it displays the evaluation times of individuals per generation along with some statistics per generation.]]

'''2) The total time it takes for a generation to be evaluated completely'''
[[files/Time for Generation to Complete.png|none|thumb|400x400px|This graph is taken from Dr. Zutty's thesis paper, and it displays the total time it took for each generation to complete in EMADE.]]
The evaluation times for each individual is already stored in the database, so we can use these values to come up with more statistics about each population / generation.

'''Team Meeting Notes:'''

We cannot seem to create any new other visualizations apart from the ones mentioned above until we have more types of information written to the database. We are also waiting for the new students in the VIP to begin using EMADE so we can share our visualization app with them so we can get some feedback. There was also the issue where my computer takes a very long time to load and refresh the web app. Still unsure if it is just my computer, or the fact that my database is on Google Cloud. Other possibility is that reading and writing to the db live with EMADE is was slows down our app.

'''Team Action Items:'''
* Create graph for total evaluation time per generation- Carissa
* Get ancestry from Emade- Will and Michael
* Run additional dataset not Titanic- Suraj and Jeffrey
* Error handling for login- Sierra
* Missing column error message- Sierra
* Redirect from login page to dashboard with update button-Sierra
* Live update does not work without refresh- Anthony
* Run EMADE Viz on Google Cloud - Anthony
* Slider bar for previous generations (once refresh speed is fixed)
* Add pop-up to show additional information about individuals in pareto front visualization when clicked - Jeffrey
* Box and whisker plot for evaluation time per individual per generation (box and whisker plot)- Suraj
'''My Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create Plot for Individual Eval Times per Generation
|Completed
|February 13, 2019
|February 20, 2019
|Feb 17, 2019
|-
|Run Other Datasets in EMADE on Google Cloud
|Waiting for GCP credits
|February 13, 2019
|March 6, 2019
|
|}

== Week 7: February 18 – February 24, 2019 ==
I'm still working on getting the Google Cloud documentation, but I've run out of GCP credits, so I've requested some more from Dr. Zutty. One I have those, I will create a new instance of EMADE on Google Cloud and make a note of every step and error that I went through, especially the python package upgrade/downgrade process so that the resulting documentation is very specific and details every action needed to (hopefully) avoid all setup errors. 
I also attended the Friday (Feb 22) help desk hours to help the new students setup EMADE, but only a couple students showed up. While I was there, I discussed with James and Rick about some of the visualization problems my team was facing, such as the numerous parents that a child individual could have, and how to avoid hardcoding the column names in the databased used in recording fitness scores. The names of some of the evaluation columns in the database are found in the xml, so we came up with the idea to store that information in the database, so that way we have access to the strings for the column names of the fitness scores, as well as the names of the eval functions they correspond to in EMADE. This will be discussed in our next team meeting (Feb 26) so that we can make our app more robust to the types of dataset problems (apart from titanic). 

'''Team Meeting Notes:'''

Found out that there can be more than two parents per individual. The individuals can go through up to 4 matings and 4 mutations, with the intermediate results stored in memory but not necessarily written to the database. So keeping track of ancestry is very difficult and messy. We are concerned if this visualization will be helpful, because it would probably be very difficult to track what parts of the child came from which parents, especially if not all the parents are in the database or if there are too many parents and mutations involved. Also decided to try to get nicer error messages to show up to so that the user can more easily determine what went wrong when trying to use our app. Also possible cookie issues when trying to switch which data to view without fully restarting the flask app. 

'''Team Action Items:'''
* Keep track of ancestry for individuals - Michael
* Run the Google Cloud instance - Anthony/Carissa
* Generational slider/player - Anthony/Sierra
* Improve documentation for running Google Cloud Instance of Emade - Suraj
* Work on other version of graphs that only take into account non-error’d individuals - Suraj
* Fix cookies bug with updating database - Will
* Make onClick tree display on the dashboard instead of making new page - Jeff
'''My Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create detailed Google Cloud setup guide
|Waiting for GCP credits
|February 13, 2019
|March 6,2019
|ON HOLD
|-
|Used Saved XML Info to programmatically 
determine fitness columns in db
|No progress yet
|February 23, 2019
|March 6, 2019
|ON HOLD
|}

== Week 8: February 25 – March 3, 2019 ==
At our group meeting on Wednesday, we talked about the idea of storing the XML info in a new table in when EMADE creates the other tables. This way, if the names of the columns for storing the objective functions changes, then we can programmatically determine how to format our SQL query rather than a hard-coded column name (e.g. "FullDataset False Positives"). We also will use this as an opportunity to handle more than two objective functions. We can then let the use choose which two objective functions should be used to plot on the x and y axes for the pareto graph. The main complication this will add is determining which individuals reside along the non-dominated front, as this may change depending on which two objectives are selected by the user. 

'''Team Meeting Notes:'''
* Since last meeting
** Michael and Will
*** Working on bugs that they are getting when running EMADE
** Carisa
*** Set up meeting with first-year for Friday
** Suraj
*** Finished eval time per ind per gen graph for only valid individuals
** Jeff
*** Got the tree to be a popup instead of a tooltip
'''Team Action Items:'''
* Finish debugging EMADE hierarchy changes so that they can get it added to EMADE - Will, Michael
* Meet with Yash and do user test - Carissa, Anthony
* Run Google Instance - Carissa, Sierra, Jeff, Anthony
* Pull request code in - Jeff, Suraj
* Generational slider - Anthony, Sierra
* Make Google Cloud EMADE guide - Suraj
* Start saving XML info in db - Suraj
'''My Action Items:'''

Keep working on Google Cloud Documentation now that I have more GCP credits. Main issue is figuring out how to share a storage bucket across projects, but it might be more beneficial to do so without sharing a bucket so that the students can pull the most recent version from github and use that rather than what is hosted on my project (which eventually becomes outdated).
* Documentation Outline
** Getting Google Cloud credits
** Creating a project
** Ensuring the credits are linked to the account
** Creating a VM Instance
** SSHing into instances
** Copying a bucket (which is where we got stuck, need to figure out most efficient way to clone git repo into bucket or directly into VM?)
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create detailed Google Cloud setup guide
|Waiting for GCP credits
|February 13, 2019
|March 26,2019
|ON HOLD
|-
|Save the XML info in database
|In Progress, working with Jeffrey
|February 23, 2019
|March 26, 2019
|ON HOLD
|-
|Used Saved XML Info to programmatically 
determine fitness columns in db
|No progress yet, waiting for above task to finish
|February 23, 2019
|March 26, 2019
|ON HOLD
|}

== Week 9: March 4 – March 10, 2019 ==
Anthony conducted some user testing with a few of the first-semester students. Most of the feedback was to make the installation guide a bit clearer (especially that EMADE doesn't need to be running, you just need a database connection) and to have a nicer login experience so that if an error occurs the user can determine and address the root cause (invalid credentials vs. missing column name vs. empty table, etc.). Jeffrey was able to modify EMADE so that it would be able to save the names of the objective and their corresponding functions into a new table in the database when you launch EMADE. We will continue to modify the code so that more of the XML metadata is stored and then we will work on making our visualization app more open to programmatically use these column names, as well as let the user choose which 2 objective functions should be plotted on the x and y axes for the non-dominated front. 

Next week, all the teams are presenting what they have accomplished this semester, with the returning students using this as an opportunity to promote the team and recruit the new students. Most of our group time this week was spent on creating and practicing the presentation so that we are ready to present on Monday. 

'''Team Meeting Notes:'''
* Since last meeting
** Hereditary information now seems to be stored - Will and Michael
** Put metadata from XML into database - Jeff
** Got us more money - Suraj
** User study with Yash - Anthony and Carissa
** Made changes based to documentation and login feedback - Anthony and Sierra
'''Team Action Items:'''
* Create a visualization that shows all the individuals
* Take into account other objectives
* Add evaluation time to the

* Task list
** Finish presentation - Whole team
** Conduct another user study - Anthony and Carissa
** Merge changes - Whole team
'''My Action Items:'''

Same as last week, but put on hold because of presentation preparation. 

== Week 10: March 11 – March 17, 2019 ==
Each team is giving a presentation about the progress made so far in this semester on Monday, March 11.

This is also our chance to promote our team to recruit the first semester students.

[https://docs.google.com/presentation/d/1mY1MpqoTm6lmQJ_7Xl6DTrdTTmSYjhnnDcTSd4EgNZY/edit?usp=sharing Link to presentation].

Since next week is Spring Break, the sub-team did not meet this week.

== Week 11: March 18 – March 24, 2019 ==
Spring Break

== Week 12: March 25 – March 31, 2019 ==
We're back from Spring Break. Did not make any progress during the break. 

On Monday, March 25, we had 3 new students join the visualization sub-team. 

I am working on merging the feature branches that Sierra and I worked on with the UI updates from Jeffrey's branch ([https://github.gatech.edu/adachille3/emade-viz/commit/bbc80a6d19dadba8fd0f2963f65da2eeeba567e8 latest commit link], and [https://github.gatech.edu/adachille3/emade-viz/tree/merge-attempt-suraj branch link]). For some reason, I kept getting errors with the login page despite entering the correct database info, but if I restart the viz app and reload the page, then the dashboard loads fine (from the same credentials stored in the browser cookies) so not sure why that is happening. When I brought this up with Sierra, she tested the code and it worked fine on her computer, so I'm not sure why it was causing issues on my machine. 

I also gave a quick overview of the existing codebase to Nicole and Bec (Gabe has a time conflict with the Wednesday group meetings).
* Explained how app.py contains our Flask code to render the pages and insert our graphs
* Demonstrated how the existing graphs are created and inserted dynamically into the dashboard page
* Also discussed how to create new graphs and insert them into the dashboard by following the example of the existing graphs
For some reason, Nicole (and possibly Bec and Gabe) seems to be having issues with connecting to non-localhost databases due to some SQL or SSL errors? Unsure of the cause because we were all using the same branch of the repo, as well as the same google cloud database (borrowed from EEG team). 

'''Team Meeting Notes / Action Items:'''
* Data Storage to minimize database queries- Nicole & Beck
* Emade metadata- Jeff
* Graph coloring- Michael
* Hereditary visualization-Will
* Merge our branches - Suraj & Sierra
* User studies - Anthony & Carissa
'''My Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Merge Branches and Fix Errors
|Completed
|March 25, 2019
|April 7,2019
|April 3, 2019 (link: [https://github.gatech.edu/adachille3/emade-viz/commit/0511545dbfcb6199b9591266c44f02d270cf3717 committed by Anthony])
|}

== Week 13: April 1 – April 7, 2019 ==
I wasn't able to get my merge attempt branch to successfully merge the other branches without causing other errors (which I think was an issue specifically for my laptop, although the cause is still unknown), so Anthony took over with a fresh attempt and I worked with him to merge the branches again. It seems like it was more successful this time around, although more testing is needed to be sure. The final merge for me and Anthony can be [https://github.gatech.edu/adachille3/emade-viz/commit/0511545dbfcb6199b9591266c44f02d270cf3717 found here]. Other than that, I did not get much progress in this week because of midterms and project deadlines in other classes. 

'''Team Meeting Notes:'''
* Progress
** Anthony - Merged Sierra and Suraj’s branch
** Bec - Worked on speeding up processes through optimizing # of sql calls
** Carissa - Not too much because there were no user studies
** Jeff - Creating metadata table through emade
** Michael - Added colors to the tree graph so that the type of node can easily be determined, it’s also pretty
** Nicole - Worked on speeding up processes through optimizing # of sql calls
** Sierra - Worked on merging branches
** Suraj - Worked with Anthony to fix bugs with merging
'''Team Action Items:'''
* Anthony - Go through user study feedback and fix stuff
* Bec - Continue working on speeding up processes through optimizing # of sql calls
* Carissa - Work on segregating generational from aggregate view
* Jeff - Error checking for empty meta table, fixing auc
* Michael - tinker with color palette a bit, more robust tree parsing
* Nicole -
** Work with Anthony to catch up on:
*** Git
*** MySQL
** Continue working on speeding up processes through optimizing # of sql calls
* Sierra - Question mark tooltip
* Suraj - UI updates
* Will - Working on hierarchy visualization
'''My Action Items:'''

UI updates if needed? And understanding the XML metadata work that Jeffrey started.

== Week 14: April 8 – April 14, 2019 ==
I'm working on adding a way for the user to upload an XML file (the same one used when running EMADE) so that we can get all the XML metadata for the graphs, as well as skipping the step where the user has to input the database connection credentials (since that is already a part of the XML). I'm still working on this part and I should have it done before the final presentations on April 22 (next Monday) which is the last day of class for this semester. Note that I will not be on campus in the Fall semester, so I will not be continuing this VIP. 

'''Team Meeting Notes:'''
* Michael - changed tree colors, fixed tree parser
* Suraj - no updates
* Nicole - looked over resources to get up to speed
* Sierra - Added in tooltips
* Jeff - fixed AUC, dynamic xml for auc
* Anthony - Implementing some of the changes from the user study, got resources to Nicole
* Carissa - worked on separating the visualizations into generational and aggregate
'''Team Action Items:'''
* Anthony - Merge everything in, finish implementing changes from the user study, export graph pictures
* Sierra - add a specific tooltip icon
* Jeff and Suraj - XML upload functionality and trying other data sources
* Michael and Will - Hierarchy visualization (fixing SQL logging errors)
* Nicole, Gabe, and Bec - Reduce the number of times we are making calls to the database
'''My Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Upload XML and dynamic graphs from metadata
|Completed
|April 8, 2019
|April 22, 2019
|April 21, 2019
|}

== Week 15: April 15 – April 21, 2019 ==
Finished the Input XML file uploading. Jeff and Curren wrote some of the initial code to allow for files to be uploaded and parsed. With that code, I started working on figuring out how to save the parsed xml to have access to it later. For now, the way it works is that the database info is pulled from the xml, and stored in cookies and our database connection object (same as usual). For the pareto front graph, all we need are the potential column names for the objectives that can be graphed. Therefore, I pulled the dataset names and the objective names, and I make a list of all the combinations of the two lists. The final list gets stored as a global variable, just like the db connection object. When the dashboard page is loaded, the default pareto front graph is generated, but the user has access to two dropdown lists to select which objective they want for each axis of the graph. Upon clicking the update button, the div containing the graph will reload and display the new graph after a few seconds. 

After writing most of the functionality, the only part I was having trouble with near the end was getting the graph to update without loading the whole page. I worked with Anthony and together we were able to finally figure out how to use ajax calls to get the div to re-render. This last code commit is [https://github.gatech.edu/adachille3/emade-viz/commit/8ce9801d37f0ecc8c78003420ad45d77517ea03a linked here].

Also updated the final presentation with this last successful addition to the codebase. [https://docs.google.com/presentation/d/1zlmRR45vRG40iu5HKsqU_W2MrBFHMh5DDD1gEG_XOBk/edit?usp=sharing Final Presentation Link].<gallery caption="Customizable Pareto Front Graph on Dashboard" widths="230" perrow="4" styles="center;">
files/Pareto-FP-FN-update1.png|False Positive and False Negatives graph
files/Pareto-updating-update2.png|Updating to False Negatives and False Positives graph (axes switched)
files/Pareto-FN-FP-update3.png|Showing False Negatives and False Positives graph (axes switched)
files/Pareto-NE-FP-update3.png|Showing Num Elements and False Negatives graph
</gallery>'''Team Meeting Notes / Progress:'''
* Michael - too busy with failing a class
* Suraj - Working on input XML
* Nicole - Finished the Pickle file with first-years
* Bek - Finished the Pickle file with first-years
* Gabe - Finished the Pickle file with first-years
* Sierra - Made login more user-friendly
* Jeff - Working on input XML
* Anthony - Export graphs functionality done
* Carissa - Separated the graphs
* Will - working on the hierarchy visualization
'''Team Action Items:'''
* Everyone - work on the presentation
* Anthony - merge in code
* Will & Michael - Trying to finish hierarchy visualization
* Suraj & Jeff - Work on input XML
'''My Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Upload XML and dynamic graphs from metadata
|Completed
|April 8, 2019
|April 22, 2019
|April 21, 2019 (latest commit [https://github.gatech.edu/adachille3/emade-viz/commit/8ce9801d37f0ecc8c78003420ad45d77517ea03a link here])
|}

== Final Comments ==
I believe that I deserve an A in this class. I contributed multiple new graphs (num pareto over time, eval time per individual per generation, eval time for non-erroring individuals) as well as working on extending the capabilities of the app through the use of xml input and graph customization. Earlier in the semester, I also set up EMADE to run on GCP and helped my team set up their own instances as well. I also helped the first-semester students understand the flow of our app so that they could understand how to work on their pickling project. 

Additionally, the main feedback I got from the midterm evaluation was that I should try to link to your contributions in the future. I have tried to do this more frequently since receiving that feedback. 

I have completed 3 semesters with this VIP, but will not be continuing with it.