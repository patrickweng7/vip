
== Team Member ==
Team Member: Yoonwoo Kim

Email: ywkim0606@gatech.edu

Cell: 470-309-8813

Interests: Machine Learning, Reinforcement Learning
----

== January 28, 2019 ==
'''Team Meeting Notes:'''
* Sub-teams gave scrum reports
* Joined stocks sub-team
'''Stocks Sub-Team Notes:'''
* Discussed new plans of using time series prediction methods instead of technical indicators to predict stock prices
* Went over basic code structure like how to change from classification problem to a regression problem
* Agreed to meet Fridays at 4:30
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Create online notebook on wiki
|Completed
|January 28, 2019
|February 4, 2019
|February 3, 2019
|-
|Research time series prediction methods to add as primitives in emade
|Completed
|January 28, 2019
|February 1, 2019
|January 31, 2019
|-
|Clone new forked repository (stock-emade)
|Completed
|January 28, 2019
|February 4, 2019
|February 1, 2019
|}

== February 1, 2019 ==
'''Stocks Sub-Team Notes:'''
* Chose team leader - Jiseok Choi
* Learned how to write/run unit tests for primitives
* Discussed researched time series forecasting methods such as SVMs and other machine learning techniques
* Decided to implement classical time series forecasting methods such as autoregression, autoregression integrated moving average (ARIMA) etc.
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement ARIMA as a primitive in EMADE
|In progress this week
|February 1, 2019
|February 8, 2019
|February 12, 2019
|-
|Write weekly scrum report on wiki
|Completed
|February 1, 2019
|February 4, 2019
|February 3, 2019
|}

== February 4, 2019 ==
'''VIP Team Notes:'''
* Scrum reports for each sub teams
'''Stocks Sub-Team Notes:'''
* Current goals for the weak - each team member should implement one primitive and a unit test for that primitive
* Sub team meeting was canceled
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement ARIMA as a primitive in EMADE
|Completed
|February 4, 2019
|February 8, 2019
|February 12, 2019
|-
|Implement ARIMA unit test in EMADE
|Completed
|February 4, 2019
|February 8, 2019
|February 12, 2019
|}

== February 11, 2019 ==
'''VIP Team Notes:'''
* Scrum reports for each sub teams
'''Stocks Sub-Team Notes:'''
* Identified minor problem in reinstall script and discussed about possible solutions
* Decided that we only need primitives with only stream to features functionality
* Implement new primitive and unit test - assigned SARIMA method
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement SARIMA as a primitive in EMADE
|Completed
|February 11, 2019
|February 18, 2019
|
|-
|Implement SARIMA unit test in EMADE
|Completed
|February 11, 2019
|February 18, 2019
|
|}

== February 16, 2019 ==
'''Stocks Sub-Team Notes:'''
* Pushed code to Github
* Reviewed EMADE code structure
* Learned implementation details such as additional parameters, multiple streams, and datapair format from James
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Push to GitHub repository
|Completed
|February 11, 2019
|February 18, 2019
|February 16, 2019
|-
|Implement remaining functionality to ARIMA
|No progress this week
|February 16, 2019
|February 22, 2019
|
|-
|Implement remaining primitives
|No progress this week
|February 16, 2019
|February 22, 2019
|
|}

== February 18, 2019 ==
'''Stocks Sub-Team Notes:'''
* Most general form of primitive is needed therefore implement the most general form SARIMAX as primitive
* SARIMAX can generalize to ARIMA and SARIMA so change already implemented ARIMA to SARIMAX
* Set up EMADE-stock branch on Google Cloud
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement SARIMAX in EMADE
|Completed
|February 18, 2019
|February 25, 2019
|February 23, 2019
|-
|Implement SARIMAX unit test in EMADE
|Completed
|February 18, 2019
|February 25, 2019
|February 23, 2019
|-
|Push changes to GitHub repository
|Completed
|February 18, 2019
|February 25, 2019
|February 23, 2019
|-
|Set up Google Cloud
|In Progress
|February 18, 2019
|February 25, 2019
|
|}

== February 23, 2019 ==
'''Stocks Sub-Team Notes:'''
* Install Putty that connects local computer to google cloud through SSH
* Created instance and linked all three team members to the instance
* Install EMADE on the created Instance
* Install Anaconda on the created Instance
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Install EMADE on created Instance
|In Progress
|February 23, 2019
|March 2, 2019
|March 2, 2019
|-
|Try running EMADE on Google Cloud
|In Progress
|February 13, 2019
|March 2, 2019
|March 2, 2019
|}

== February 25, 2019 ==
'''Team Meeting Notes:'''
* Scrum Report
'''Stocks Sub-Team Notes:'''
* Try solving Git LFS issues.
* Researched some Machine Learning models that can be implemented in EMADE as learners.
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Install EMADE on created Instance
|Completed
|February 23, 2019
|March 2, 2019
|March 2, 2019
|-
|Try running EMADE on Google Cloud
|In Progress
|February 23, 2019
|March 2, 2019
|March 2, 2019
|-
|Update seeding files and template
|Completed
|February 23, 2019
|March 2, 2019
|March 2, 2019
|}

== March 4, 2019 ==
'''Team Meeting Notes:'''
* Scrum Report
'''Stocks Sub-Team Notes:'''
* EMADE is running on Google Cloud

* Start implementing Machine Learning models 
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Try running EMADE on Google Cloud
|Completed
|March 4, 2019
|March 2, 2019
|March 2, 2019
|-
|Make slides for presentation
|Completed
|March 4, 2019
|March 11, 2019
|March 11, 2019
|}

== March 25, 2019 ==
'''Team Meeting Notes:'''
* 1st semester students chose which sub-team to join
'''Stocks Sub-Team Notes:'''
* First semester students joined slack channel
* Set meeting time for Thursday 7:30 pm
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Introduction to our project 
|Completed 
|March 25, 2019
|March 28, 2019
|March 28, 2019
|}

== March 28, 2019 ==
'''Stocks Sub-Team Notes:'''
* Not all members showed up (two new first semester students)
* New members cloned EMADE Stock repository
* Introduction to EMADE stock project
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|HWES primitive fixed
|Completed
|March 28, 2019
|April 1, 2019
|March 31, 2019
|-
|Run EMADE 2nd time on Google Cloud
|Completed
|March 28, 2019
|April 1, 2019
|March 31, 2019
|}

== April 1, 2019 ==
'''Team Meeting Notes:'''
* Scrum Report
'''Stocks Sub-Team Notes:'''
* Split our group into two sub groups (data parsing group, primitive implementation group)
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Memory allocation error
|N/A
|April 1, 2019
|April 22, 2019
|April 4, 2019
|-
|Raw stock data pushed
|Completed
|April 1, 2019
|April 5, 2019
|April 4, 2019
|-
|sMAPE and MASE added as objective functions 
|Completed 
|April 1, 2019
|April 5, 2019
|April 1, 2019
|}

== April 5, 2019 ==
'''Stocks Sub-Team Notes:'''
* Work session (Each team worked on their assigned task)
* Introduced new members working on models to deep learning (RNN, LSTM, MLP)
* Read https://machinelearningmastery.com/findings-comparing-classical-and-machine-learning-methods-for-time-series-forecasting/ and planned how things should continue with this project.
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Time series data preprocessing methods
|In Progress
|April 5, 2019
|April 22, 2019
|
|-
|Move statistical models to methods.py
|In Progress
|April 5, 2019
|April 22, 2019
|
|-
|Fix memory allocation errors when running
|N/A
|April 1, 2019
|April 22, 2019
|
|}

== April 8, 2019 ==
'''Team Meeting Notes:'''
* Scrum reports
'''Stocks Sub-Team Notes:'''
* Try to finish everything by next week so we have enough time to run EMADE
* Talked about difference between signal_methods.py and methods.py
* Go over how deep learning models can be implemented with team members
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Time series data preprocessing methods
|In Progress
|April 5, 2019
|April 22, 2019
|
|-
|Move statistical models to methods.py
|In Progress
|April 5, 2019
|April 22, 2019
|
|-
|Fix memory allocation errors when running
|N/A
|April 1, 2019
|April 22, 2019
|
|}

== April 13, 2019 ==
'''Stocks Sub-Team Notes:'''
* Another work session
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Implement/improve time series preprocessing methods as primitives
|Completed
|April 5, 2019
|April 22, 2019
|April 13, 2019
|-
|Move statistical models to methods.py
|In Progress
|April 5, 2019
|April 22, 2019
|
|-
|Fix memory allocation errors when running
|N/A
|April 1, 2019
|April 22, 2019
|
|}

== April 15, 2019 ==
'''Meeting Notes:'''
* What should be done by the time we do the final presentation
** Try implementing LSTM, MLP and RNN
** Get proper data parsing script from data parsing sub-team
* Finish implementation by Saturday, get at least 24 hour run of EMADE.
* Model implementation group is meeting on Saturday (April 20) to complete our implementations and start a running EMADE
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Move statistical models to methods.py
|In Progress
|April 5, 2019
|April 22, 2019
|
|-
|Fix memory allocation errors when running
|In Progress
|April 5, 2019
|April 22, 2019
|
|-
|RBFN Implementation
|8 hours of troubleshooting, failed
|April 15, 2019
|April 20, 2019
|April 20,2019
|}

== April 20, 2019 ==
'''Stocks Sub-Team Notes:'''
* Final work session
* Planned to code from 6pm-midnight, but actually ended at 7am (Yes, that is 7 AM)
* Finished LSTM, RNN, MLP implementation
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Move statistical models to methods.py
|Completed
|April 5, 2019
|April 22, 2019
|April 20, 2019
|-
|Fix memory allocation errors when running
|Completed
|April 1, 2019
|April 22, 2019
|April 20, 2019
|-
|Prepare for final presentation
|Completed
|April 15, 2019
|April 22, 2019
|April 21, 2019
|}

== April 22, 2019 ==
'''Team Meeting Notes:'''
* Final presentations
'''Contributions/Final Grade:'''
* While we weren't able to run EMADE, I really believe I deserve an A considering the massive amount of work put in as a second semester student.
* Uploading EMADE on Google Cloud and make it running.
* Not all team members participated in the project and it was very hard to meet expectations while I was still working on this project for so many hours.
* If possible, next semester, I would prefer working with smaller group who are willing to push the project forward.
* https://github.gatech.edu/nvananupong3/emade/commits/emade_stock (This is the commit history)
== August 24, 2019 ==
'''Team Meeting Notes:'''
* Joined NLP sub-team meeting
* Time conflict people are not able to come up with a time for everyone
* Went over implementation of RNNs for NLP into EMADE
== August 31, 2019 ==
'''Team Meeting Notes:'''
* Joined NLP sub-team meeting
* Time conflict people are not able to come up with a time for everyone
* Talked about NEAT, HyperNEAT and basic Neural Network.
* Need to look at NEAT paper

== September 06, 2019 ==
'''Team Meeting Notes:'''
* Met with other people who have time conflict
* Decided to have sub-team meeting right after time conflict meeting
'''NLP Sub-Team Notes:'''
* NLP version of EMADE is different from the one installed
* Reinstall EMADE
* Decided on github branch (nn-nlp branch off of general EMADE branch)
* Start by implementing Keras layers in EMADE
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Reinstall EMADE
|In Progress
|September 6, 2019
|September 13, 2019
|September 13, 2019
|-
|Keras Implementation in EMADE
|In Progress
|September 6, 2019
|September 13, 2019
|September 13, 2019
|}

== September 13, 2019 ==
'''Team Meeting Notes:'''
* Use Keras model to create a baseline and initial seed for NLP problem.
'''NLP Sub-Team Notes:'''
* Implementing DeepNEAT seems to be a challenging task so it was moved to later task.
* We have to create a baseline to compare the EMADE model with.
* To create a baseline model, we can also use this as a baseline.
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|NLP EMADE seed
|In Progress
|September 13, 2019
|September 20, 2019
|September 27, 2019
|-
|Learn how to implement Keras into EMADE primitive
|In Progress
|September 13, 2019
|September 20, 2019
|
|}

== September 20, 2019 ==
'''Team Meeting Notes:'''
* Almost done creating the seed model for EMADE, need some testing and parameter tuning for better performance.
* The baseline model uses simple LSTM but the state-of-the-art model uses complex models including the use of bidirectional encoders and a huge network. 
'''NLP Sub-Team Notes:'''
* Discussed how to seed the baseline model into EMADE
* Discussed how to implement Keras layers as primitives
'''Action Items:'''
{| class="wikitable"
!Task
!Current Status
!Date Assigned
!Suspense Date
!Date Resolved
|-
|Learn how to seed the baseline model
|In Progress
|September 20, 2019
|September 27, 2019
|
|-
|Learn how to implement Keras layers as primitives
|In Progress
|September 20, 2019
|September 27, 2019
|
|}

== September 27, 2019 ==
'''Team Meeting Notes:'''
* Came late due to Career Fairs and interviews
'''NLP Sub-Team Notes:'''
* No discussion because by the time I arrived everyone left. We are still doing the same thing as last week. It should be done this week.

== October 4, 2019 ==
* Read through EMADE [https://github.gatech.edu/athite3/emade/blob/master/emade_spin_up.md guide] made by Anish and explored the code to understand the codebase better.
* learner_methdos.py: Runs the main learning logics.
* gp_framework_helper.py: Learner parameters are set.
* EMADE.py: Mutation methods are here.
* After team discussion, I pointed out that there should be a way to store model weights in the primitive since EMADE is only going to save the architecture.
** We noted that EMADE has to train the new architecture anyway storing model weights will not work.
* Discussed what layers should be implemented as our initial primitive. (LSTM, Embedding, Dense)
{| class="wikitable"
!Task
!Current Status
!Suspense Date
!Date Resolved
|-
|Implement fully connected layers as primitives
|Completed
|10/11/2019
|10/05/2019
|-
|Implement an objective function
|Abandoned
|10/11/2019
|N/A
|-
|Design primitive parameters evolving function
|Completed
|10/11/2019
|10/05/2019
|-
|Storing model weights
|Abandoned
|10/11/2019
|
|}

== October 5-11, 2019 ==
* Started making primitives using Keras Layers (LSTM, Dense layers)
* Embedding Layer is different from layers above since the input should be the data
** Unlike other layers, the output dimension also needs to be calculated
* Worked on the seed neural network that is tested on the movie review dataset 
** Creating the model is not the hard part. It was harder to vectorize and make the input data fit the dimension.
** Used only Embedding -> LSTM -> Dense format
** Looked for optimal architecture (number of perceptrons in each layer, number of layers)
* Created a baseline of a simple regression model that we can compare our seed model to
{| class="wikitable"
!Task
!Current Status
!Suspense Date
!Date Resolved
|-
|Test fully connected layers as primitives
|Completed
|10/18/2019
|10/18/2019
|-
|Add embedding layer
|Completed
|10/18/2019
|10/18/2019
|-
|Test regression model on the same dataset
|Completed
|10/18/2019
|10/18/2019
|-
|Add activation functions as constant
|Completed
|10/18/2019
|10/18/2019
|}

== October 18, 2019 ==
* Completed preprocessing and vectorizing the dataset for other machine learning models such as a bag of words, or regression models.
* The movie review dataset is a binary classification dataset so 50 percent accuracy is the minimum.
* Completed testing the regression model on the dataset
** Surprisingly the logistic regression model that was selected as a benchmark for the neural network to beat had 86% accuracy which was incredibly high
* Completed testing a simple neural network but did not perform as well as the logistic regression
** Need to continue working on the architecture of the neural network.
** Consider adding a different layer such as GRU layer
{| class="wikitable"
!Task
!Current Status
!Suspense Date
!Date Resolved
|-
|Add NNLearner
|Completed
|10/18/2019
|10/19/2019
|-
|Use GRU to improve performance
|Completed
|10/18/2019
|10/19/2019
|-
|Test other neural network architecture
|Completed
|10/18/2019
|10/19/2019
|}

== October 19-21, 2019 ==
* Attended EMADE Hackathon session
* Completed coming up with a seed neural network that outperformed logistic regression benchmark
** Embedding -> LSTM(32) -> Dense(10, relu) -> Dense(1, sigmoid)
** Achieved 87 percent accuracy so decided to use this model as the seed
* The model was trained on my laptop as well as using the google colab
** https://colab.research.google.com/drive/1qKdRNr9onZRyDhWC5oEWAUY5yJxRwis3 

* Added GRU layer
* The implementation of the embedding layer in EMADE was changed to the one in the  seed model.
* Hackathon commits:
** https://github.gatech.edu/athite3/emade/commit/555da6681b1febd9350b2abe904ec1c05a5928a8
** Note: We used Anish's laptop to speed up the process which is why I'm linking his Github
* Created slides for the presentation
** https://docs.google.com/presentation/d/1B63kw5ne58jJ0FhFcM9L7GplOe0Asq5awU27hqRoEp0/edit?usp=sharing
* While trying to run EMADE with our implementation of NNLearner and seed, we ran into SQL error
** The error message in the slide above

== October 22, 2019 - November 1, 2019 ==
* I tried to replicate Anish's Github and got the same SQL error.
* There was no meeting on October 25th since we had the presentations
* I suspected that the reason why we are getting this error is due to Keras and not EMADE
** I looked into using other deep leaning packages like Pytorch.
{| class="wikitable"
!Task
!Current Status
!Suspense Date
!Date Resolved
|-
|Find out why we're getting the error
|Completed
|11/01/2019
|11/8/2019
|-
|Fix SQL Error
|Completed
|11/01/2019
|11/23/2019
|}

== November 8, 2019 ==
* Got help from Dr.Zutty on identifying where the SQL error was coming from
* Located source of the SQL <code>can't pickle _thread._local objects</code> 
* This basically means that EMADE wants to pickle our Keras layers primitives but cannot because Keras doesn't allow pickling its layers
* After identifying where it was coming from we came up with an initial solution.
** Redefine initModel. Created a LayerList, an empty list
** Instead of putting the Keras layers in the LayerList, we put strings like "lstm" so that the LayerList can be pickled.
** In the end, the NNLearner will get this list and be able to collect corresponding Keras layers to build the model itself.
{| class="wikitable"
!Task
!Current Status
!Suspense Date
!Date Resolved
|-
|Play with the initial idea of solving "can't pickle error"
|Completed
|11/08/2019
|11/15/2019
|}

== November 15, 2019 ==
* Came up with pseudocode for my Embedding Layer changes on top of Will's layer function changes
* We debated creating a Layer class with specific layers inheriting from it, and a "add_layer_to_list" function, but that was less clear than keeping our original architecture
* Finally, we decided to look up a different way rather than using strings to represent the layers.
** We solved by using Keras-pickle wrapper
** Layer functions add a dictionary representation of the layer type and other parameters to the list
** NNLearner takes in a list and creates the model
** This becomes possible because we can now pickle using Keras-pickle wrapper.
{| class="wikitable"
!Task
!Current Status
!Suspense Date
!Date Resolved
|-
|Try running everything and see if our solution works
|Completed
|11/15/2019
|11/22/2019
|}

== November 22, 2019-November 23, 2019 ==
* Attended to EMADE Hackathon and worked with Anish
* Tried running everything and went through a series of debugging process
** The first errors were syntactical, those were easily solvable
** Received a type error due to DEAP code, Dr. Zutty wrote a passThrough function for our type (str) that fixed it
* Added Embedding Layer changes
** https://github.gatech.edu/athite3/emade/commit/ce3211fbbcc67c787bf2439b651083632db82134
** Note that we used Anish's laptop for this Hackathon I don't have the commit history.
* Fixed GP Framework Helper code so that it works with our method
* Cleaned out previous code that did not work and commented out the ones done by previous teams
* Hackathon commits:
** https://github.gatech.edu/athite3/emade/commit/7479a332600d1f639f3a937631d7c8760b2c4412
** Note that we used Anish's laptop for this Hackathon I don't have the commit history.

* It took a long time to run (15 minutes for a worker to evaluate the neural network)
** We didn't identify anything going wrong through looking at the log file so had it running

* Meeting with Anish in 11/24 to continue to debug
{| class="wikitable"
!Task
!Current Status
!Suspense Date
!Date Resolved
|-
|Continue debugging
|Completed
|11/24/2019
|11/24/2019
|}

== November 24, 2019 ==
* Met with Anish, to check if everything was running correctly and continue to debug if something came up.
* Had invalid vocab size error
** Cause: Tokenizer inside the function and tokenizer for the EMADE to use was different
** Solution: Decided to rewrite the tokenizer in text_processing_methods
*** called Tokenizer2
*** Similar to tokenizer, it calculates the vocab size in our own way
* Ran for 1 epoch and neural network achieves 50 percent accuracy. This is because the neural network did not get a chance to backpropagate.
* 10 epochs needed 1 hour to evaluate one worker which was too long
* 2 epochs, gave 85% accuracy but EMADE is returning error
* Re-ran EMADE, ran into an error that when appending the predictions on training data to the dataframe there is a size mismatch
* Github commit:
** https://github.gatech.edu/athite3/emade/commit/fa8c5e2033ddfa23f6ad1c39a5c8c5116517eb3f
** Note that we used Anish's laptop for this Hackathon I don't have the commit history.
{| class="wikitable"
!Task
!Current Status
!Suspense Date
!Date Resolved
|-
|Try solving the Size mismatch error
|Unsolved
|11/24/2019
|
|}

== December 2, 2019 ==
* Final presentation