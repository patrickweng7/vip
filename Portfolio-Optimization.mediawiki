==Members==
*Kirtan Saurabh PatelÂ 

* Alen Polakof

* Michael Piseno
* Mayank Kishore
* Sierra Olson
* Mai Pham
* Trai Tran
* Michael Jurado
* Uday Patil

==Goals==
*Work on using the prior resources to improve the stock predictions
*Create a new code base that will be used for the optimization process.
*Create/Find market simulator for the Q-learner.
*Use the Q-Learner integrated with EMADE to let EMADE optimize the state space, or environment, for the Q-Learner agent. 
*Optimize multiple different sets of stocks, compare the optimized (state, Q-Learner) pair against a stock index such as S&P 500

== EMADE with Deep Reinforcement Learning ==

==== The idea is to use a Deep Q-Learner, which is a Model Free Reinforcement Learning algorithm which would act on a state space that is optimized by EMADE. ====
HOW IS THIS DONE?
* EMADE will use the technical indicators provided (Aroon, SMA, EMA, Bollinger Bands, etc) to spit out individuals that will create the state space for the reinforcement learning algorithm.

* The reinforcement learning algorithm will use the values of the technical indicators to estimate different Q values with a deep-neural network. 

* The highest Q-value will determine which action is taken by the reinforcement learning. 

* That action will generate certain profit. 

* This will ultimately be used by EMADE for next generations in order to create better state spaces for the Q-Learner from new individuals. 

==Resources==
====Articles====
*[http://users.cecs.anu.edu.au/~hassan/DMMSDP.pdf Constructing States for Reinforcement Learning]
*[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4342801 A Multiagent Approach to Q-Learning for Daily Stock Trading]
*[http://cs229.stanford.edu/proj2009/LvDuZhai.pdf Algorithm Trading using Q-Learning and Recurrent Reinforcement Learning]
*[https://arxiv.org/pdf/1106.0221.pdf Evolutionary Algorithms for Reinforcement Learning]
*https://github.com/junhyukoh/deep-reinforcement-learning-papers (GitHub project that contains several papers related to different topics of deep reinforcement learning)
'''Q-Learners Tutorial:'''
*http://adventuresinmachinelearning.com/reinforcement-learning-tensorflow/
*https://www.youtube.com/watch?v=2pWv7GOvuf0&list=PLqYmG7hTraZDM-OYHWgPebj2MfCFzFObQ (DeepMind introduction to reinforcement learning series of videos)
*https://www.youtube.com/watch?v=iOh7QUZGyiU&list=PLqYmG7hTraZDNJre23vqCGIVpfZ_K2RZs (DeepMind advanced deep learning & reinforcement learning series of videos)
'''Interesting Readings:'''

Advances in Financial Machine Learning by Marcos Lopez de Prado

==Final Presentation==
*https://docs.google.com/presentation/d/1-vQBbGPxMc7hna6sN_TUGnOEmmsfGwcCd_ahoifA6Ok/edit?usp=sharing
==Schedule==
<big>'''September 9th - 14th'''</big>
* Met with the subteam and discussed goals
* Split up into two teams and discussed the basics of what was accomplished during the previous semester
<big>'''September 17th - 21st'''</big>
*Defined the purpose of the portfolio optimization team
*Work on the optimization for the Qlearners
*Get multiple stocks per optimization
*Discretized technical indicator for the stocks
<big>'''September 24th - 28th'''</big>
*Presented our semester plans to Dr. Rohling and received feedback on what could be improved upon
*Worked on improving our presentation
<big>'''October 1st - 5th'''</big>
*Presented our project to the rest of the students
<big>'''October 8th - 12th'''</big>
* Fall break

<big>'''October 15th - 19th'''</big>
* Worked on developing a better basis for the expectations for our QLearners
* Organized a meeting to develop the evaluation function
<big>'''October 29th - November 2nd'''</big>
* Worked on developing a feature vector 
* Began ideating a methodology of using the QLearner through the use of indicators and correct outputs
* Use that methodology to develop a generalizable evaluation function

<big>'''November 5th - November 9th'''</big>
* Worked on creating the feature vector and the evaluation function
* Was able to push the evaluation function for the QLearner reward and was able to test it as well

<big>'''November 12th - November 16th'''</big>
* Seperated the individal and the row data from the normal dataset
* Removed single-dimensional entries for training from the data sample
<big>'''November 19th - November 23rd'''</big>
* Worked on testing the DeepQLearners
* Created a log file and added it to evalFunctions.py

<big>'''November 26th - November 30th'''</big>
* Created a preprocessing method and committed new datasets
* Ability to handle multiple stocks