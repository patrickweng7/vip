== Dataset Construction ==
Several different attempts were made to construct a data set comprised of stock data as a stream window, where the values at each sample in the stream were the open, high, low, close, and volume of the stock for that day. The most recent attempt used a 60 day stream of General Electrics stock data. The daily ticker values ranged from the 1960s to 2017, and a moving window of the 60s days was used in order to predict a closing price movement up or down from the last day of the window to the next day. The difficulty in constructing a data set to predict movements up or down of a stock prices closing price lies in the construction of the class for each 60 day stream. Several different attempts were made at deciding the class for the 60 day stream including:

# Assigning 1 (buy) if the average of the next 5 days closing prices was greater than the closing price on the last day of the 60 day stream, and 0 (sell) otherwise
# Assigning 1 (buy) if the average of the next 10 days closing prices was greater than the closing price on the last day of the 60 day stream, and 0 (sell) otherwise
# Assigning 1 (buy) if the the next day's closing price was greater than the closing price on the last day of the 60 day stream, and 0 (sell) otherwise
# Assigning 1 (buy) if the the next day's closing price increased by more than 0.5% of the closing price on the last day of the 60 day stream, and 0 (sell) otherwise
# Assigning 1 (buy) if the the next day's closing price increased by more than 0.05% of the closing price on the last day of the 60 day stream, and 0 (sell) otherwise

The moving window was also adjusted along with the assignment of the class. Initially we tried moving the window by 1 day each since this makes the most sense in a stock market, any trader would want to be able to trade on every day. We attempted sliding the window by 5 and 10 days to see if this made some sort of improvement with regard to indicator prediction, but this resulted in no productive increase in the correlation between indicator signals and the class assigned.

The following plots were made from the first instance of the of the test_4 fold of the GE data set. This data corresponds to the attempt at creating the class based on 3 from above.


== Indicators ==
====Moving Average Convergence-Divergence====

[[files/Macd indicator.png]]

Note that these plots were created from a single stream and do not represent multiple different observations in our data set; however, we can use the buy/sell signals within a stream to show how an indicator will easily create poor features for a supervised machine learning algorithm (at least in terms of binary/categorical classification, results have not been investigated yet for regression, though I expect similar problems to occur).

Notice in the top figure we have presented the Moving Average Convergence-Divergence along with the signal line which is used to determine when to buy or sell a stock. Normally, traders will use signal line crossovers to inform their trading decisions. If the signal line crosses above the macd line, then the trader knows the stock will begin to fall. If the signal line crosses below the macd line, then the trader knows the stock will begin to rise. This can be used as information for buying or selling a stock based on past information; however, this does not work well in a classification based supervised learning problem. 

Since we are trading on the last day of the 60 day stream we would be using information about the indicator at the last day to inform our trading decision. Aggregate votes in any way of the past crossovers of the indicator provide any useful information, since the most recent crossover will determine the direction the stock is proceeding. Therefore, we could use the difference between the macd line and signal line to determine if the the prediction should be a buy or sell. This will work best when the trend first starts, but will fail near trend reversals since the macd and signal line will not correct themselves before price begins to fall slightly. This means we are guaranteed to miss all classifications near trend reversals until the indicator value adjusts properly. The red dots on the bottom plot represent points where, within this 60 day stream, we would have predicted the incorrect action. There are exactly 30 of these points, which explains the approximately 50% accuracy that many of the individuals during optimization have shown.

Attempts to solve this were to use the entire stream of differences between the macd and signal line over the 60 days as features. This, on its own, had no positive effect on the prediction when combined with K-NN, Random Forest, and SVM. In fact, in some cases the excess number of features reduced the accuracy to lower than 50%. Another attempt was made by using the value of the last index in result; however, this performed similar to assigning signals as features.
----
[[files/Figure 1.png]]
----
[[files/Williams.png]]
----
[[files/Aroon.png]]
== Possible Solutions ==
After reviewing more online information, the most likely solution to this problem is to construct the problem using an agent based "learner" to aggregate the technical indicator recommendations and make an informed decision based on them. Several proposals have been made towards this end including:

*Evolving decision trees with indicators representing recommendations 
**[https://core.ac.uk/download/pdf/52104888.pdf Predicting Stock Prices Using Technical Analysis and Machine Learning]

*Evolving trees with normalized information, using logic and math primitives to make decision based on a threshold
**[https://pdfs.semanticscholar.org/fafb/1179fa7754de8f06aab6b50477b875ea05b4.pdf Successful Technical Trading Agents Using Genetic Programming]

*Creating an informed Fuzzy Logic agent
**[https://www.researchgate.net/profile/David_Acheme2/publication/271337881_A_Predictive_Stock_Market_Technical_Analysis_Using_Fuzzy_Logic/link/5a93df170f7e9ba4296f9422/A-Predictive-Stock-Market-Technical-Analysis-Using-Fuzzy-Logic.pdf A Predictive Stock Market Technical Analysis Using Fuzzy Logic]

*Using a Q-Learning agent with technical indicators as states (this is what the portfolio team is doing)

While the Q-Learning agent would be simple enough to implement into emade, the other agent's may be difficult to interface with the other primitives in emade. This could cause lackluster results when it comes to combining algorithms not typically used on the stock market with the indicators we have created.
----
The other potential solution is to attempt a regression problem, for this we would want the indicators to produce floating point numbers instead of signals. This is because a simple signal to buy/hold/sell would not give sufficient information about the amount of price increase or decrease of a stock on the next day. In the below piece of literature, stock price predictions were evaluated by applying both linear regression and support vector regression. The linear regression was regularized with two methods, Lasso and Ridge. The support vector regression was performed with a radial basis kernel, and was very effective but was not viable because of the extreme computational power required. This is something we could look in to since we have Google cloud credits.
* [http://cs229.stanford.edu/proj2017/final-reports/5212256.pdf Predicting Stock Prices Using Linear Regression]